{"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":3,"wave_brighten":0,"brighten":1,"darken":1,"solarize":1,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"fshader":1,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_str":"m.an = 0;\nm.vx=0; m.vy=0;\n\t\t\tm.rkeys = ['an'];","frame_eqs_str":"m.rad=(0.65+(m.bass*0.1)); m.an=((m.an*0.99)+((m.bass-m.treb)*0.1)); m.ang=((m.an*0.1)+0.6);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.n = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.t5 = 0;\nm.w2 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.q6 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.t3 = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.t6 = 0;\nm.my_y = 0;\nm.pi = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.rd = 0;\nm.w1 = 0;\nm.x2 = 0;\nm.t2 = 0;\nm.l = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.ab=1;\n\t\t\tm.rkeys = ['t7'];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t8=0.07; m.t7=1;","point_eqs_str":"m.t7=-m.t7; m.pi=Math.asin(1); m.n=180; m.rd=0.075; m.my_x=((Math.sin((((m.sample*m.pi)*4)+((m.t7+1)*m.t8)))*0.5)+((Math.cos(((m.sample*m.pi)*m.n))*m.rd)*Math.sin((((m.sample*m.pi)*4)+((m.t7+1)*m.t8))))); m.my_y=((Math.cos((((m.sample*m.pi)*4)+((m.t7+1)*m.t8)))*0.5)+((Math.cos(((m.sample*m.pi)*m.n))*m.rd)*Math.cos((((m.sample*m.pi)*4)+((m.t7+1)*m.t8))))); m.my_z=(Math.sin(((m.sample*m.pi)*m.n))*m.rd); m.d=1.4; m.zoom=0.65; m.w1=m.q2; m.w2=m.q3; m.w3=m.q4; m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.x=(0.5+m.my_x); m.y=(0.5+m.my_y); m.b=(-m.z3+0.5); m.b=(Math.min(1, Math.max(0, m.b))*0.5); m.r=(1-(m.b*2));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p4 = 0;\nm.step = 0;\nm.step=0;","frame_eqs_str":"m.dec_med=pow(0.7, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((-2+m.avg)+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass_att+m.mid_att)+m.treb_att); m.q27=(m.index+1); m.q28=m.index2; m.q29=((mod(m.index,2)-0.5)*2); m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),8); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.step=(m.step+m.q24); m.p3=((m.p3*m.dec_slow)+((1-m.dec_slow)*m.step)); m.q30=m.step; m.p4=((m.dec_slow*m.p4)+((1-m.dec_slow)*m.q27)); m.q31=m.p4; m.q12=(m.time-m.t0); m.monitor=m.q12; m.zoom=1; m.rot=-0; m.dx=0.00;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1.3;","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((q24 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"uniform sampler2D sampler_rand00;\nshader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((texture (sampler_rand00, (0.4 + \n    (0.6 * tmpvar_1.xy)\n  )) * tmpvar_1.z) * 3.0).xyz;\n  ret = tmpvar_2.xyz;\n}\n\n"}