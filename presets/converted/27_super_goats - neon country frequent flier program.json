{"baseVals":{"rating":0,"wave_mode":6,"wave_brighten":0,"wave_a":0.118,"wave_scale":0.303,"wave_smoothing":0.36,"modwavealphastart":0.52,"modwavealphaend":1.5,"warpscale":1.331,"zoom":0.9995,"dy":-0.002,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":1,"wave_y":0.6,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":0.9,"ob_a":1,"ib_size":0,"mv_a":0,"b3n":0.19,"b1x":0.7},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":184,"rad":0.01489,"r":0,"b":1,"a":0.5,"g2":0,"b2":1,"border_r":0.7,"border_g":0.7,"border_b":0.7,"border_a":0.003},"init_eqs_str":"m.rand1 = 0;\nm.w = 0;\nm.rand2 = 0;\nm.t1 = 0;\nm.v = 0;\nm.t = 0;\nm.t2 = 0;\nm.t1=0.4322; m.t2=0.57; m.pi=3.14135297;\n\t\t\tm.rkeys = ['rand1','rand2'];","frame_eqs_str":"m.rand1=((equal(m.instance, 0)!=0)?(m.t1):(m.rand1)); m.rand2=((equal(m.instance, 0)!=0)?(m.t2):(m.rand2)); m.rand1=((4*m.rand1)*(1-m.rand1)); m.rand2=((4*m.rand2)*(1-m.rand2)); m.a=(m.treb*0.3); m.g=div(mod(m.frame,5),10); m.r=(m.bass*0.1); m.v=(0.02+(0.4*m.rand1)); m.w=m.rand2; m.t=(((10*m.time)*m.rand1)*rand(10)); m.y=(0.5+(m.v*Math.tan(m.t))); m.x=(0.6+((0.6*m.w)*Math.cos(m.t))); m.rad=((0.02*m.treb)+((((3*m.bass)*Math.sin((m.x*3.141)))*0.05)*(1-(0.5*m.rand1)))); m.sides=(mod((100*m.rand2),9)+4); m.a=((above(m.y, 0.18)!=0)?(0):(m.a));"},{"baseVals":{"enabled":1,"sides":7,"additive":1,"num_inst":41,"r":0,"b":0.3,"r2":1,"g2":0.04,"b2":0.05,"border_a":0.005},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.rad=(m.bass*0.1); m.a=((m.treb*0.3)*above((m.bass*6), m.instance)); m.r=(m.mid*0.1); m.b=0; m.x=(rand(100)*0.01); m.y=(rand(100)*0.002);"},{"baseVals":{"enabled":1,"sides":3,"x":0.7,"r":0,"g2":0,"a2":1,"border_r":0,"border_g":0.2,"border_b":0.5,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.trig = 0;\nm.q3=0.5; m.yval=0.5;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.y=(0.56-(0.3*Math.sin(m.time))); m.x=(0.6-(0.3*Math.sin((m.time*0.3)))); m.trig=below(m.q1, 0.3); m.r=(m.trig*(1-m.q1)); m.r2=((0.4+(0.015*Math.sin(m.frame)))*m.r); m.g2=m.r2; m.b=0; m.sides=(3+(20*m.trig)); m.ang=(Math.atan2(Math.cos((0.3*m.time)), Math.cos(m.time))+2.8); m.rad=((m.y*0.08)+((0.6*m.trig)*(0.3-m.q1))); m.a=1; m.a2=((0.55*(1-m.trig))+((m.trig*m.q1)*0.01));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.avgdb2 = 0;\nm.decay_rate = 0;\nm.bc2 = 0;\nm.mtime2 = 0;\nm.beatb = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.rbeatb = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.avgdt = 0;\nm.prev_beat = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.lbt2 = 0;\nm.q11 = 0;\nm.beatb2 = 0;\nm.q10 = 0;\nm.bool = 0;\nm.ph = 0;\nm.ph2 = 0;\nm.const = 0;\nm.q4 = 0;\nm.lbass = 0;\nm.avgbr = 0;\nm.min_att = 0;\nm.lbt = 0;\nm.avgbr2 = 0;\nm.db = 0;\nm.beat = 0;\nm.decay_to = 0;\nm.bc = 0;\nm.phase2 = 0;\nm.const2 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.ltreb = 0;\nm.phase = 0;\nm.q3 = 0;\nm.beat_level = 0;\nm.q7 = 0;\nm.q20 = 0;\nm.mtime = 0;\nm.q8 = 0;\nm.bool2 = 0;\nm.avgdb = 0;\nm.db=0.001; m.avgdb=(Math.abs((m.bass-m.bass_att))*5); m.avgdb2=(Math.abs((m.bass-m.bass_att))*10); m.lbass=m.bass_att; m.avgbr=1; m.beatb=0; m.lbt=m.time; m.rbeat=0; m.ph=0; m.phase=0; m.bool=0; m.const=0.01; m.ph2=0; m.phase2=0; m.bool2=0; m.const2=0.01; m.mtime=(100+(m.bass_att*1000));","frame_eqs_str":"m.db=((m.bass-m.lbass)*m.fps); m.ltreb=m.treb; m.avgdb=((m.avgdb*0.9)+(Math.abs(m.db)*0.1)); m.avgdb2=((m.avgdb2*0.99)+(Math.abs(m.db)*0.01)); m.rbeatb=above(Math.abs(m.db), (m.avgdb*2)); m.beatb=(m.rbeatb*above((m.time-m.lbt), (m.avgbr*0.75))); m.decay_rate=pow(0.993, m.fps); m.min_att=2.5; m.decay_to=1.0; m.beat=div(m.bass,Math.max(m.min_att, m.bass_att)); m.beat=Math.max(m.beat, div(m.mid,Math.max(m.min_att, m.mid_att))); m.beat=Math.max(m.beat, div(m.treb,Math.max(m.min_att, m.treb_att))); m.beat=Math.max(m.beat, (((m.prev_beat-m.decay_to)*m.decay_rate)+m.decay_to)); m.beat_level=((((m.beat-m.prev_beat)-0.07)*24)+1); m.is_beat=above(m.beat_level, 0.5); m.prev_beat=m.beat; m.beatb2=m.is_beat; m.avgbr=((m.beatb*((m.avgbr*0.99)+((m.time-m.lbt)*0.01)))+((1-m.beatb)*(m.avgbr+((3-m.avgbr)*0.00001)))); m.avgbr2=((m.beatb2*((m.avgbr2*0.99)+((m.time-m.lbt2)*0.01)))+((1-m.beatb2)*(m.avgbr2+((3-m.avgbr2)*0.00001)))); m.lbt=((m.time*m.beatb)+((1-m.beatb)*m.lbt)); m.lbt2=((m.time*m.beatb2)+((1-m.beatb2)*m.lbt2)); m.ph=(((m.time-m.lbt)*div(60,m.avgbr))*m.const); m.phase=Math.max(Math.min(m.ph, 1), 0); m.const=((m.const*(1-m.beatb))+(m.beatb*(m.const+(0.002*m.bool)))); m.bool=((below(m.phase, 0.98)*(0.98-m.ph))-(above(m.phase, 0.98)*(m.ph*0.5))); m.ph2=(((m.time-m.lbt2)*div(60,m.avgbr2))*m.const2); m.phase2=Math.max(Math.min(m.ph2, 1), 0); m.const2=((m.const2*(1-m.beatb2))+(m.beatb2*(m.const2+(0.002*m.bool2)))); m.bool2=((below(m.phase2, 0.98)*(0.98-m.ph2))-(above(m.phase2, 0.98)*(m.ph2*0.5))); m.bc=(m.bc+m.beatb); m.bc2=(m.bc2+m.beatb2); m.mtime=(m.mtime+(((m.avgdb*m.avgbr)*0.1)*div(1,m.fps))); m.mtime2=(m.mtime2+(((m.avgdt*m.avgbr2)*0.1)*div(1,m.fps))); m.q1=(1-m.phase); m.q2=(1-m.phase2); m.q3=m.bc; m.q4=m.bc2; m.q5=m.mtime; m.q6=m.mtime2; m.q7=((Math.sin(m.mtime)*0.5)+0.5); m.q8=((Math.sin(m.mtime2)*0.5)+0.5); m.q9=((Math.sin((m.mtime*0.01))*0.5)+0.5); m.q10=((Math.sin((m.mtime2*0.01))*0.5)+0.5); m.q11=m.avgdb; m.q12=m.avgdt; m.q14=div(60,m.avgbr); m.q15=div(60,m.avgbr2); m.q20=m.beatb; m.q21=m.beatb2; m.q22=mod(m.bc,4); m.q23=mod(m.bc2,4); m.monitor=m.q1; m.decay=1; m.wrap=1; m.zoom=0.978; m.dx=0.002;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.warp=((0.1*m.y)+0.1); m.dx=(-0.001+((0.01*m.y)*-Math.cos((m.x+(Math.sin(m.time)*0.15)))));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).y * 2.0)\n   - 1.0) * 0.002));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (0.5 + (0.5 * sin(\n    -(uv.x)\n  )));\n  tmpvar_2.y = (0.8 - uv.y);\n  ret_1 = (ret_1 + ((\n    ((((texture (sampler_blur1, \n      (tmpvar_2 + 0.1)\n    ).xyz * scale1) + bias1).zzz * tmpvar_2.y) * tmpvar_2.y)\n   * tmpvar_2.y) * 0.005));\n  ret_1 = (ret_1 * 0.978);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * 2.0);\n  ret_1 = (ret_1 + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}