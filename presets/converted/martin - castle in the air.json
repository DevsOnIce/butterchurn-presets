{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":0.958,"wave_smoothing":0.45,"wave_mystery":0,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0,"mv_x":25.6,"mv_y":9.6,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.09,"y":0.9,"rad":0.22437,"ang":0,"tex_ang":0,"tex_zoom":1.76002,"r":1,"g":0,"b":0,"a":1,"r2":1,"g2":0,"b2":0,"a2":0.6,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.26,"y":0.2,"rad":0.39317,"ang":0,"tex_ang":0,"tex_zoom":6.19589,"r":0,"g":0.55,"b":0.5,"a":1,"r2":0,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":44,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.503,"y":0.5,"rad":0.03886,"ang":0,"tex_ang":0,"tex_zoom":0.60986,"r":1,"g":0.1,"b":0,"a":0.9,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.01,"ang":0,"tex_ang":0,"tex_zoom":0.49981,"r":0,"g":0,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":282,"sep":20,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":3.91581,"smoothing":0.1,"r":0.2,"g":0.3,"b":1,"a":0.6},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.n = 0;\nm.int = 0;\nm.reg26 = 0;\nm.uvx0 = 0;\nm.reg34 = 0;\nm.reg28 = 0;\nm.reg23 = 0;\nm.q25 = 0;\nm.angchg = 0;\nm.reg20 = 0;\nm.reg15 = 0;\nm.reg10 = 0;\nm.q12 = 0;\nm.v3 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.diry = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.posx = 0;\nm.fps_ = 0;\nm.reg25 = 0;\nm.uvx = 0;\nm.q1 = 0;\nm.travel = 0;\nm.posz = 0;\nm.q5 = 0;\nm.movz = 0;\nm.dirz = 0;\nm.dec_s = 0;\nm.reg16 = 0;\nm.slow = 0;\nm.reg36 = 0;\nm.reg22 = 0;\nm.uvy = 0;\nm.rotz = 0;\nm.dist_ = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.reg24 = 0;\nm.cran0 = 0;\nm.vx = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.reg14 = 0;\nm.posy = 0;\nm.vy = 0;\nm.vz = 0;\nm.reg31 = 0;\nm.dirx = 0;\nm.dec_m = 0;\nm.q4 = 0;\nm.start = 0;\nm.reg12 = 0;\nm.reg13 = 0;\nm.c2 = 0;\nm.sqrt = 0;\nm.reg37 = 0;\nm.s3 = 0;\nm.yslope = 0;\nm.q16 = 0;\nm.xslope = 0;\nm.q26 = 0;\nm.reg38 = 0;\nm.reg35 = 0;\nm.reg11 = 0;\nm.tx = 0;\nm.avg = 0;\nm.uvz = 0;\nm.c3 = 0;\nm.uvy0 = 0;\nm.reg27 = 0;\nm.q19 = 0;\nm.beat = 0;\nm.q17 = 0;\nm.vol = 0;\nm.reg32 = 0;\nm.reg21 = 0;\nm.uvz0 = 0;\nm.len = 0;\nm.reg18 = 0;\nm.reg30 = 0;\nm.q27 = 0;\nm.slen = 0;\nm.q14 = 0;\nm.dist = 0;\nm.reg17 = 0;\nm.v1 = 0;\nm.speed = 0;\nm.s1 = 0;\nm.t0 = 0;\nm.s2 = 0;\nm.ran1 = 0;\nm.reg33 = 0;\nm.q7 = 0;\nm.ds = 0;\nm.q28 = 0;\nm.ty = 0;\nm.c1 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.avg=0.01; m.q7=0.2; m.q8=(div(rand(200),100)-1); m.q16=1.2; m.q18=(rand(0.8)+0.1); m.q17=2.6; m.start=1; m.travel=0; m.rotz=0; m.look=0; m.slow=0; m.t0=(m.time+3); m.lampx=0.5; m.lampy=0.5; m.cran0=rand(1); m.n=0; for(var mdparser_idx1=0;mdparser_idx1<10000;mdparser_idx1++){m.gmegabuf[m.n]=0; m.n=(m.n+1);} m.n=0; for(var mdparser_idx2=0;mdparser_idx2<10000;mdparser_idx2++){m.megabuf[m.n]=0; m.n=(m.n+1);} m.trelx=0; m.trely=0; m.trelz=0; m.reg20=1; m.reg21=0; m.reg22=0; m.reg23=0; m.reg24=1; m.reg25=0; m.reg26=0; m.reg27=0; m.reg28=1; (function(){var mdparser_idx3;var mdparser_count4=0;do{mdparser_count4+=1;mdparser_idx3=(function(){m.ran1=div(rand(800),100); m.ran2=div(rand(800),100); m.ran3=div(rand(800),100); m.posx=(rand(10)-5); m.posy=(rand(10)-5); m.posz=(rand(10)-5); m.c1=Math.cos(m.ran1); m.c2=Math.cos(m.ran2); m.c3=Math.cos(m.ran3); m.s1=Math.sin(m.ran1); m.s2=Math.sin(m.ran2); m.s3=Math.sin(m.ran3); m.reg20=(m.c2*m.c1); m.reg21=(m.c2*m.s1); m.reg22=-m.s2; m.reg23=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg24=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg25=(m.s3*m.c2); m.reg26=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg27=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg28=(m.c3*m.c2); m.dist=0.001; (function(){var mdparser_idx5;var mdparser_count6=0;do{mdparser_count6+=1;mdparser_idx5=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx7=0;mdparser_idx7<(7+1);mdparser_idx7++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*m.q17)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*m.q17)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*m.q17)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.05; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx5!==0&&mdparser_count6<1048576);}()); return ((m.dist<0.06)?1:0)})()}while(mdparser_idx3!==0&&mdparser_count4<1048576);}());","frame_eqs_str":"m.fps_=((0.0*m.fps_)+(1*((((m.fps<=25)?1:0)!=0)?(m.fps):((25+(0.5*(m.fps-25))))))); m.dec_s=(1-div((0.03*30),m.fps_)); m.dec_m=(1-div((0.1*30),m.fps_)); m.beat=((m.time>(m.t0+3))?1:0); m.t0=((m.beat!=0)?(m.time):(m.t0)); m.speed=div((((Math.min(0.2, (m.dist_-0.02))*(1+(2*m.avg)))*(1-(m.slow*0.0)))*0.1),m.q7); m.ds=((m.ds*m.dec_s)+div((((1-m.dec_s)*m.speed)*0.4),m.fps_)); m.rotz=((((m.travel>2)?1:0)!=0)?(0.5):(0)); m.vol=((m.vol*m.dec_m)+div(((1-m.dec_m)*((m.bass_att+m.mid_att)+m.treb_att)),4)); m.q1=(div(m.vol,2)+0.3); m.dirx=m.reg26; m.diry=m.reg27; m.dirz=m.reg28; m.posx=(m.posx+(m.ds*m.dirx)); m.posy=(m.posy+(m.ds*m.diry)); m.posz=(m.posz+(m.ds*m.dirz)); m.q4=m.posx; m.q5=m.posy; m.q6=m.posz; m.angchg=((0.1-m.dist_)*((m.dist_<0.1)?1:0)); m.travel=((((m.angchg>0)?1:0)!=0)?(0):((m.travel+m.ds))); m.v1=((m.v1*m.dec_s)+div((((1-m.dec_s)*m.rotz)*m.ds),2)); m.v2=((m.v2*m.dec_s)+div((((1-m.dec_s)*m.angchg)*m.xslope),m.fps_)); m.v3=((m.v3*m.dec_s)+((1-m.dec_s)*(div((m.angchg*m.yslope),m.fps_)+((2*m.v1)*Math.sin((m.time*0.1)))))); m.reg30=m.reg20; m.reg31=m.reg21; m.reg32=m.reg22; m.reg33=m.reg23; m.reg34=m.reg24; m.reg35=m.reg25; m.reg36=m.reg26; m.reg37=m.reg27; m.reg38=m.reg28; m.n=0; m.avg=0; for(var mdparser_idx8=0;mdparser_idx8<5;mdparser_idx8++){m.n=(m.n+1); m.ran1=div(rand(100),100); m.ran2=(div(rand(100),200)-0.25); m.tx=((Math.cos(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.ty=((Math.sin(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.c1=Math.cos(m.v1); m.c2=Math.cos((m.v2+m.ty)); m.c3=Math.cos((m.v3+m.tx)); m.s1=Math.sin(m.v1); m.s2=Math.sin((m.v2+m.ty)); m.s3=Math.sin((m.v3+m.tx)); m.reg10=(m.c2*m.c1); m.reg11=(m.c2*m.s1); m.reg12=-m.s2; m.reg13=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg14=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg15=(m.s3*m.c2); m.reg16=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg17=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg18=(m.c3*m.c2); m.reg20=m.reg30; m.reg21=m.reg31; m.reg22=m.reg32; m.reg23=m.reg33; m.reg24=m.reg34; m.reg25=m.reg35; m.reg26=m.reg36; m.reg27=m.reg37; m.reg28=m.reg38; m.q20=(((m.reg10*m.reg20)+(m.reg11*m.reg23))+(m.reg12*m.reg26)); m.q21=(((m.reg10*m.reg21)+(m.reg11*m.reg24))+(m.reg12*m.reg27)); m.q22=(((m.reg10*m.reg22)+(m.reg11*m.reg25))+(m.reg12*m.reg28)); m.q23=(((m.reg13*m.reg20)+(m.reg14*m.reg23))+(m.reg15*m.reg26)); m.q24=(((m.reg13*m.reg21)+(m.reg14*m.reg24))+(m.reg15*m.reg27)); m.q25=(((m.reg13*m.reg22)+(m.reg14*m.reg25))+(m.reg15*m.reg28)); m.q26=(((m.reg16*m.reg20)+(m.reg17*m.reg23))+(m.reg18*m.reg26)); m.q27=(((m.reg16*m.reg21)+(m.reg17*m.reg24))+(m.reg18*m.reg27)); m.q28=(((m.reg16*m.reg22)+(m.reg17*m.reg25))+(m.reg18*m.reg28)); m.reg20=m.q20; m.reg21=m.q21; m.reg22=m.q22; m.reg23=m.q23; m.reg24=m.q24; m.reg25=m.q25; m.reg26=m.q26; m.reg27=m.q27; m.reg28=m.q28; m.dist=0.002; (function(){var mdparser_idx9;var mdparser_count10=0;do{mdparser_count10+=1;mdparser_idx9=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx11=0;mdparser_idx11<(7+1);mdparser_idx11++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*m.q17)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*m.q17)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*m.q17)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.1; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx9!==0&&mdparser_count10<1048576);}()); m.megabuf[m.n]=((m.megabuf[m.n]*m.dec_s)+((1-m.dec_s)*m.dist)); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.n=0; m.avg=0; for(var mdparser_idx12=0;mdparser_idx12<5;mdparser_idx12++){m.n=(m.n+1); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.xslope=Math.min(Math.max((div(2,m.avg)*(m.megabuf[1]-m.megabuf[3])), -3), 3); m.yslope=Math.min(Math.max((div(2,m.avg)*(m.megabuf[4]-m.megabuf[2])), -3), 3); m.monitor=m.avg; m.dist_=((m.dist_*m.dec_s)+((1-m.dec_s)*m.dist)); m.q10=(m.ds*m.q7); m.q14=(((1*Math.abs(m.ds))+(2*((Math.abs(m.v1)+Math.abs(m.v2))+Math.abs(m.v3))))+(m.start*0.05)); m.q19=(0.6+(0.4*Math.sin(((m.time*0.02)+(m.cran0*6))))); m.start=(m.start*0.9); m.warp=0.0; m.zoom=1; m.dx=div(-m.v2,m.q16); m.dy=div(m.v3,m.q16); m.rot=m.v1; m.vx=(m.vx-div(m.v2,m.q16)); m.vy=(m.vy+div(m.v3,m.q16)); m.vz=(m.vz+m.v1); m.q11=m.vx; m.q12=m.vy; m.movz=(m.movz+m.ds); m.q13=m.movz; m.monitor=m.q13;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float sustain;\nfloat ffac;\nfloat xlat_mutabledist;\nfloat xlat_mutablelimit;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutabledist = dist;\n  xlat_mutablelimit = limit;\n  xlat_mutablestruc = struc;\n  xlat_mutableuv2 = uv2;\n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.98 - q14);\n  ffac = q17;\n  vec2 uv_3;\n  uv_3 = (((uv - 0.5) * (1.0 - \n    (q10 / (1.0 - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z))\n  )) + 0.5);\n  xlat_mutableuv1 = (((uv_orig - 0.5) * aspect.xy) * q16);\n  vec4 tmpvar_4;\n  tmpvar_4 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  vec3 tmpvar_5;\n  tmpvar_5 = tmpvar_4.xyz;\n  if ((tmpvar_4.y > (0.4 * rad))) {\n    vec3 tmpvar_6;\n    tmpvar_6 = (tmpvar_4.xyz - vec3(0.5, 0.5, 0.5));\n    vec4 nb2_7;\n    vec4 nb_8;\n    vec2 tmpvar_9;\n    tmpvar_9 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 - texsize.zw)).yz)\n     + vec2(0.5, 0.5))));\n    nb_8.x = (1.0 - (tmpvar_9.y + (0.015625 * \n      (tmpvar_9.x - 0.5)\n    )));\n    vec2 tmpvar_10;\n    tmpvar_10 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_8.y = (1.0 - (tmpvar_10.y + (0.015625 * \n      (tmpvar_10.x - 0.5)\n    )));\n    vec2 tmpvar_11;\n    tmpvar_11 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + texsize.zw)).yz)\n     + vec2(0.5, 0.5))));\n    nb_8.z = (1.0 - (tmpvar_11.y + (0.015625 * \n      (tmpvar_11.x - 0.5)\n    )));\n    vec2 tmpvar_12;\n    tmpvar_12 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb_8.w = (1.0 - (tmpvar_12.y + (0.015625 * \n      (tmpvar_12.x - 0.5)\n    )));\n    vec2 tmpvar_13;\n    tmpvar_13 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, -1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_7.x = (1.0 - (tmpvar_13.y + (0.015625 * \n      (tmpvar_13.x - 0.5)\n    )));\n    vec2 tmpvar_14;\n    tmpvar_14 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_7.y = (1.0 - (tmpvar_14.y + (0.015625 * \n      (tmpvar_14.x - 0.5)\n    )));\n    vec2 tmpvar_15;\n    tmpvar_15 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(0.0, 1.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_7.z = (1.0 - (tmpvar_15.y + (0.015625 * \n      (tmpvar_15.x - 0.5)\n    )));\n    vec2 tmpvar_16;\n    tmpvar_16 = (0.0078125 * floor((\n      (128.0 * texture (sampler_pc_main, (uv_3 + (texsize.zw * vec2(-1.0, 0.0)))).yz)\n     + vec2(0.5, 0.5))));\n    nb2_7.w = (1.0 - (tmpvar_16.y + (0.015625 * \n      (tmpvar_16.x - 0.5)\n    )));\n    vec4 tmpvar_17;\n    tmpvar_17 = min (nb_8, nb2_7);\n    nb_8.zw = tmpvar_17.zw;\n    nb_8.xy = min (tmpvar_17.xy, tmpvar_17.zw);\n    xlat_mutabledist = (min (nb_8.x, nb_8.y) + ((0.006 * tmpvar_6.x) * abs(tmpvar_6.y)));\n  } else {\n    xlat_mutabledist = tmpvar_5.x;\n  };\n  vec2 tmpvar_18;\n  tmpvar_18 = (0.0078125 * floor((\n    (128.0 * texture (sampler_pc_main, uv_3).yz)\n   + vec2(0.5, 0.5))));\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \n    (tmpvar_18.y + (0.015625 * (tmpvar_18.x - 0.5)))\n  )) - (q10 * 0.8));\n  xlat_mutablelimit = (15.0 + (10.0 * xlat_mutabledist));\n  vec3 tmpvar_19;\n  tmpvar_19.xy = (xlat_mutableuv1 * xlat_mutabledist);\n  tmpvar_19.z = xlat_mutabledist;\n  xlat_mutableuv2 = (((tmpvar_19 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = ((fract(\n    ((xlat_mutableuv2 / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  int iterations_21;\n  vec3 zz0_22;\n  vec3 zz_23;\n  zz_23 = xlat_mutableuv2;\n  zz0_22 = (xlat_mutableuv2 + q8);\n  iterations_21 = int((8.0 - float(\n    (xlat_mutabledist > 0.8)\n  )));\n  for (int n_20 = 0; n_20 <= iterations_21; n_20++) {\n    zz_23 = ((2.0 * clamp (zz_23, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_23);\n    zz_23 = (zz_23 * (clamp (\n      max ((0.25 / dot (zz_23, zz_23)), 0.25)\n    , 0.0, 1.0) * 4.0));\n    zz_23 = ((ffac * zz_23) + zz0_22);\n  };\n  xlat_mutablestruc = (sqrt(dot (zz_23.xz, zz_23.xz)) / xlat_mutablelimit);\n  vec2 tmpvar_24;\n  tmpvar_24 = (0.0078125 * floor((\n    (128.0 * vec2((1.0 - xlat_mutabledist)))\n   + vec2(0.5, 0.5))));\n  vec2 tmpvar_25;\n  tmpvar_25.x = ((64.0 * (\n    (1.0 - xlat_mutabledist)\n   - tmpvar_24.x)) + 0.5);\n  tmpvar_25.y = tmpvar_24.x;\n  vec3 tmpvar_26;\n  float tmpvar_27;\n  tmpvar_27 = (q14 * 2.0);\n  tmpvar_26.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\n  , vec3(tmpvar_27)).x));\n  tmpvar_26.yz = tmpvar_25;\n  vec3 tmpvar_28;\n  tmpvar_28.y = 1.0;\n  tmpvar_28.x = sustain;\n  tmpvar_28.z = 1.0;\n  vec3 tmpvar_29;\n  tmpvar_29.y = 0.0;\n  tmpvar_29.x = 0.003921569;\n  tmpvar_29.z = (0.01568628 * (0.2 + rad));\n  vec4 tmpvar_30;\n  tmpvar_30.w = 1.0;\n  tmpvar_30.xyz = mix (tmpvar_26, ((\n    mix (texture (sampler_main, uv_3).xyz, ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1), vec3(tmpvar_27))\n   * tmpvar_28) - tmpvar_29), vec3(clamp ((\n    sqrt(dot (zz_23, zz_23))\n   - xlat_mutablelimit), 0.0, 1.0)));\n  ret = tmpvar_30.xyz;\n}\n\n","comp":"float xlat_mutableinten;\nfloat xlat_mutabletmp;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablez;\nshader_body\n{\n  xlat_mutableinten = inten;\n  xlat_mutablez = z;\n  float t_rel_2;\n  vec3 ret1_3;\n  float struc_4;\n  xlat_mutableuv1 = ((uv * aspect.xy) - vec2(0.5, 0.5));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv);\n  float tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  tmpvar_6 = mix (min ((1.0 - tmpvar_5.z), (1.0 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  .z)), (1.0 - (\n    (tmpvar_7.xyz * scale1)\n   + bias1).z), 0.5);\n  struc_4 = ((mix (tmpvar_5.xyz, \n    ((tmpvar_7.xyz * scale1) + bias1)\n  , vec3(tmpvar_6)).x * (1.0 - tmpvar_6)) * tmpvar_6);\n  vec2 tmpvar_8;\n  tmpvar_8.x = q11;\n  tmpvar_8.y = q12;\n  xlat_mutableuv2 = ((xlat_mutableuv1 * 0.2) - (tmpvar_8 * 0.2));\n  vec2 uvi_9;\n  uvi_9 = (xlat_mutableuv2 * 4.0);\n  float zv_10;\n  zv_10 = (0.008 * time);\n  xlat_mutabletmp = clamp (dot ((texture (sampler_noise_hq, \n    (xlat_mutableuv2 + (0.03 * ((\n      (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n        (uvi_9 * 2.0)\n       + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n     + \n      (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + (2.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n    ) + (\n      dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + (4.0 * zv_10))), vec4(0.32, 0.49, 0.29, 0.0))\n     / 8.0))))\n  ) - 0.4), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\n  float tmpvar_11;\n  tmpvar_11 = clamp ((pow (xlat_mutabletmp, 1.2) * sign(xlat_mutabletmp)), 0.0, 1.0);\n  xlat_mutabletmp = tmpvar_11;\n  vec3 tmpvar_12;\n  tmpvar_12.xy = vec2(0.1, 0.1);\n  tmpvar_12.z = (1.2 - uv.y);\n  ret1_3 = ((tmpvar_12 + 0.07) + ((\n    clamp (((tmpvar_6 * 2.0) - 1.5), 0.0, 1.0)\n   * tmpvar_11) * 4.0));\n  t_rel_2 = (q13 * 6.0);\n  for (int n_1 = 1; n_1 <= 3; n_1++) {\n    xlat_mutablez = (1.0 - fract((\n      (float(n_1) / 3.0)\n     - \n      (fract(-(t_rel_2)) / 3.0)\n    )));\n    xlat_mutableinten = (((1.0 - xlat_mutablez) * xlat_mutablez) * 2.0);\n    vec2 tmpvar_13;\n    tmpvar_13.x = q11;\n    tmpvar_13.y = q12;\n    xlat_mutableuv2 = (((xlat_mutablez * xlat_mutableuv1) / 4.0) - (tmpvar_13 / 6.0));\n    vec2 uvi_14;\n    uvi_14 = (xlat_mutableuv2 * 4.0);\n    float zv_15;\n    zv_15 = (0.008 * time);\n    xlat_mutabletmp = clamp (dot ((\n      (texture (sampler_noise_hq, (xlat_mutableuv2 + (0.03 * (\n        ((dot (texture (sampler_noise_hq, uvi_14), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, \n          ((uvi_14 * 2.0) + zv_15)\n        ), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0)) + (dot (texture (sampler_noise_hq, (\n          (uvi_14 * 4.0)\n         + \n          (2.0 * zv_15)\n        )), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0))\n       + \n        (dot (texture (sampler_noise_hq, ((uvi_14 * 8.0) + (4.0 * zv_15))), vec4(0.32, 0.49, 0.29, 0.0)) / 8.0)\n      )))) - (xlat_mutablez * 0.5))\n     - 0.3), vec4(0.32, 0.49, 0.29, 0.0)), 0.0, 1.0);\n    xlat_mutabletmp = (((\n      clamp ((xlat_mutabletmp * sign(xlat_mutabletmp)), 0.0, 1.0)\n     * xlat_mutableinten) * q1) * 2.0);\n    ret1_3 = (((ret1_3 + \n      ((vec3(4.0, 3.0, 0.8) * q1) * struc_4)\n    ) * clamp (\n      (1.0 - xlat_mutabletmp)\n    , 0.0, 1.0)) + xlat_mutabletmp);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = (1.0 - exp((-1.6 * ret1_3)));\n  ret = tmpvar_16.xyz;\n}\n\n"}