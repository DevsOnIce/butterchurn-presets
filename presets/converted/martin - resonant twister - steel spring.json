{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.005,"wave_scale":0.118,"wave_smoothing":0.9,"wave_mystery":-0.48,"modwavealphastart":0.4,"modwavealphaend":1.6,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.15,"ob_r":0.2,"ob_g":0.2,"ob_b":0.2,"ib_size":0.1,"ib_r":0.6,"ib_g":0.6,"ib_b":0.6,"mv_x":64,"mv_y":48,"mv_l":2.5,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b3x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.07408,"smoothing":0,"r":0,"g":0.5},"init_eqs_str":"m.t1 = 0;\nm.q13 = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.ky = 0;\nm.x0 = 0;\nm.rx2 = 0;\nm.t3 = 0;\nm.ang1 = 0;\nm.num_inst = 0;\nm.kx = 0;\nm.instance = 0;\nm.t2 = 0;\nm.cx = 0;\nm.q3 = 0;\nm.reg00 = 0;\nm.ry2 = 0;\nm.rx1 = 0;\nm.ry1 = 0;\n\n\t\t\tm.rkeys = ['t1'];","frame_eqs_str":"m.t1=0; m.t2=0; m.t3=0;","point_eqs_str":"m.num_inst=m.reg00; m.instance=m.t1; m.rx1=m.gmegabuf[((m.instance*8)+5)]; m.rx2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+5)]; m.ry1=m.gmegabuf[((m.instance*8)+6)]; m.ry2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+6)]; m.kx=(0.1*m.q1); m.ky=(0.15*m.q1); m.x0=(((m.rx1-m.rx2)*m.kx)*((Math.abs((m.sample-0.5))*2)+0)); m.cx=0.75; m.x=(((m.x0+div((1-m.cx),2))+(m.cx*m.sample))+((m.q13*m.q3)*(Math.abs((m.sample-0.5))-0.0))); m.y0=(((m.ry1+m.ry2)*m.ky)+((0.0*m.q13)*(Math.abs((m.sample-0.5))-0.3))); m.y=(m.y0+0.55); m.ang1=Math.atan2(m.x0, m.y0); m.a=(0.5+div(Math.sin(m.ang1),3)); m.r=(0.5+(0.3*Math.sin((((m.rx1*12)+(m.sample*12))+2)))); m.g=(0.5+(0.3*Math.sin((((m.rx2*12)+(m.sample*12))+1)))); m.b=(0.5+(0.3*Math.sin(((m.ry1*12)+(m.sample*12))))); m.t1+=1;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.n = 0;\nm.maxind0 = 0;\nm.maxbpm = 0;\nm.num_res = 0;\nm.prog2 = 0;\nm.ratio = 0;\nm.index = 0;\nm.q12 = 0;\nm.q13 = 0;\nm.scale = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.dt = 0;\nm.maxquad = 0;\nm.q1 = 0;\nm.sig0 = 0;\nm.imax = 0;\nm.dec_s = 0;\nm.minbpm = 0;\nm.maxind = 0;\nm.omega = 0;\nm.ec_steps = 0;\nm.exc = 0;\nm.gp2 = 0;\nm.dec_m = 0;\nm.sig = 0;\nm.tr2 = 0;\nm.beatsin = 0;\nm.meanquad = 0;\nm.vol = 0;\nm.prog = 0;\nm.flash = 0;\nm.beatcos = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.gp = 0;\nm.q3 = 0;\nm.vol_ = 0;\nm.maxquad_ = 0;\nm.quad = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.excite = 0;\nm.n=-10000; for(var mdparser_idx1=0;mdparser_idx1<20000;mdparser_idx1++){m.megabuf[m.n]=0; m.gmegabuf[m.n]=0; m.n+=1;} m.minbpm=35; m.maxbpm=220; m.num_res=512; m.index=0; for(var mdparser_idx2=0;mdparser_idx2<m.num_res;mdparser_idx2++){m.n=(m.index*8); m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.index,(m.num_res-1)))); m.megabuf[m.n]=m.bpm; m.index+=1;} m.pi=3.1416; m.reg00=m.num_res;","frame_eqs_str":"m.dt=Math.min(div(1,m.fps), 0.1); m.dec_m=(1-(4*m.dt)); m.dec_s=(1-(1.25*m.dt)); m.vol=((m.bass+m.mid)+m.treb); m.vol_=((m.vol_*m.dec_m)+((1-m.dec_m)*m.vol)); m.exc=(m.vol-m.vol_); m.excite=div(Math.atan((m.exc*2)),1.6); m.index=0; m.ratio=Math.log(div(m.maxbpm,m.minbpm)); m.maxquad=0.5; m.meanquad=0; for(var mdparser_idx3=0;mdparser_idx3<m.num_res;mdparser_idx3++){m.n=(m.index*8); m.omega=div((m.megabuf[m.n]*6.2832),60); m.megabuf[(m.n+1)]*=(1-(0.22*m.dt)); m.ec_steps=(Math.floor(((10*m.omega)*m.dt))+1); for(var mdparser_idx4=0;mdparser_idx4<m.ec_steps;mdparser_idx4++){m.megabuf[(m.n+1)]+=div(((m.excite-(sqr(m.omega)*m.megabuf[(m.n+2)]))*m.dt),m.ec_steps); m.megabuf[(m.n+2)]+=div((m.megabuf[(m.n+1)]*m.dt),m.ec_steps);} m.beatcos=m.megabuf[(m.n+1)]; m.beatsin=(m.megabuf[(m.n+2)]*m.omega); m.quad=sqrt((pow(m.beatsin, 2)+pow(m.beatcos, 2))); ((((m.maxquad<m.quad)?1:0)!=0)?(m.maxquad=m.quad):(0)); m.meanquad+=div(m.quad,m.num_res); m.megabuf[(m.n+3)]=((m.megabuf[(m.n+3)]*m.dec_s)+(m.quad*(1-m.dec_s))); m.megabuf[(m.n+4)]=m.megabuf[(m.n+3)]; m.megabuf[(m.n+5)]=m.beatcos; m.megabuf[(m.n+6)]=m.beatsin; m.index+=1;} m.n=0; m.maxind=0; for(var mdparser_idx5=0;mdparser_idx5<m.num_res;mdparser_idx5++){m.scale=div((1+div(m.megabuf[(m.n+3)],2)),3); ((((m.megabuf[(m.n+3)]>m.megabuf[(m.maxind+3)])?1:0)!=0)?(m.maxind=m.n):(0)); m.gmegabuf[(m.n+5)]=(m.megabuf[(m.n+5)]*m.scale); m.gmegabuf[(m.n+6)]=(m.megabuf[(m.n+6)]*m.scale); m.n+=8;} m.sig0=m.sig; m.sig=m.megabuf[(m.maxind+6)]; m.gp=(((m.maxquad*(1+(m.gp*0.3)))>(3.5*m.meanquad))?1:0); m.prog+=((((m.sig*m.sig0)<0)?1:0)*m.gp); m.q27=(div(mod(m.prog,8),4)-1); m.gp2=(((m.maxquad*(1+(m.gp2*0.3)))>(7*m.meanquad))?1:0); m.prog2+=((((m.sig*m.sig0)<0)?1:0)*m.gp2); m.q28=div(m.prog2,3); m.flash=((((((m.sig*m.sig0)<0)?1:0)*((m.maxquad>(8.5*m.meanquad))?1:0))!=0)?(4):((m.flash*0.5))); m.q29=m.flash; m.maxind0=m.maxind; m.n=0; m.imax=0; for(var mdparser_idx6=0;mdparser_idx6<m.num_res;mdparser_idx6++){m.q12+=m.megabuf[((m.n*8)+1)]; m.q13+=m.megabuf[((m.n*8)+2)]; m.n+=1;} m.maxquad_=((m.maxquad_*m.dec_m)+((1-m.dec_m)*m.maxquad)); m.q1=sqrt(div(3,m.maxquad_)); m.tr2+=div(m.maxquad_,m.fps); m.q2=(m.tr2*1.85); m.q3=0.01; m.q32=m.aspecty; m.monitor=m.q15;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=0; m.warp=0; m.dy=-0.00; m.dx=0.00; m.zoom=1.03;","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"float iter;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablez;\nshader_body\n{\n  iter = floor((10.0 * clamp (\n    (texsize.x / 2048.0)\n  , 0.0, 1.0)));\n  vec2 uv_1;\n  uv_1 = uv;\n  float noise_3;\n  vec3 ret_4;\n  xlat_mutablez = (1.0/((uv.y - 0.2)));\n  vec2 tmpvar_5;\n  tmpvar_5.x = (xlat_mutablez * (uv.x - 0.5));\n  tmpvar_5.y = xlat_mutablez;\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = q2;\n  xlat_mutableuv2 = ((tmpvar_5 + q28) + tmpvar_6);\n  noise_3 = (texture (sampler_noise_lq, xlat_mutableuv2).x - (texture (sampler_noise_lq, (xlat_mutableuv2 + \n    (texsize.z * 8.0)\n  )).x * 0.8));\n  noise_3 = (noise_3 * (1.0 - (\n    (float((texture (sampler_pw_noise_lq, (\n      (noise_3 * 0.001)\n     + \n      (xlat_mutableuv2 * vec2(0.08, 0.008))\n    )).x > 0.85)) * float((xlat_mutablez >= 0.0)))\n   / xlat_mutablez)));\n  noise_3 = (noise_3 * (float(\n    (xlat_mutablez > 0.0)\n  ) / xlat_mutablez));\n  ret_4 = texture (sampler_main, uv).xyz;\n  for (int n_2 = 1; float(n_2) < iter; n_2++) {\n    vec2 tmpvar_7;\n    tmpvar_7.y = 0.0;\n    tmpvar_7.x = float(n_2);\n    vec2 tmpvar_8;\n    tmpvar_8.y = 0.0;\n    tmpvar_8.x = float(-(n_2));\n    ret_4 = max (max (ret_4, texture (sampler_main, (uv_1 + \n      (texsize.zw * tmpvar_7)\n    )).xyz), texture (sampler_main, (uv_1 + (texsize.zw * tmpvar_8))).xyz);\n  };\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (16.0 * \n    dot (ret_4, vec3(0.32, 0.49, 0.29))\n  )), 0.0, 1.0);\n  float x_10;\n  x_10 = ((uv.y * 8.0) - (dot (ret_4, vec3(0.32, 0.49, 0.29)) * 5.0));\n  ret_4 = (ret_4 * vec3((0.1 + (0.15 / \n    sqrt((x_10 * x_10))\n  ))));\n  ret_4 = (ret_4 + ((noise_3 * tmpvar_9) / 5.0));\n  vec2 tmpvar_11;\n  tmpvar_11.y = -0.5;\n  tmpvar_11.x = (q27 + 0.5);\n  vec2 x_12;\n  x_12 = (uv - tmpvar_11);\n  float tmpvar_13;\n  tmpvar_13 = (1.0 - uv.y);\n  ret_4 = (ret_4 + ((\n    (((rand_preset / 2.0) * 2.0) * (tmpvar_13 * tmpvar_13))\n   / 4.0) * tmpvar_9).xyz);\n  ret_4 = (ret_4 + ((\n    (pow (sqrt(dot (x_12, x_12)), -2.0) * vec3(0.4, 0.8, 1.0))\n   * \n    (0.2 + noise_3)\n  ) * tmpvar_9));\n  ret_4 = (ret_4 + ((\n    (64.0 * ((texture (sampler_blur3, (\n      (tmpvar_5 * vec2(0.33, 0.16))\n     + vec2(0.5, 0.1))).xyz * scale3) + bias3))\n   * tmpvar_9) * clamp (noise_3, 0.0, 1.0)));\n  vec2 tmpvar_14;\n  tmpvar_14.y = -0.1;\n  float tmpvar_15;\n  tmpvar_15 = (q27 / 5.0);\n  tmpvar_14.x = (0.5 + tmpvar_15);\n  ret_4 = (ret_4 * (1.0 - (\n    dot (vec3(greaterThan ((\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_14)).xyz * scale1)\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\n   * 0.2)));\n  vec2 tmpvar_16;\n  tmpvar_16.y = -0.1;\n  tmpvar_16.x = (0.505 + tmpvar_15);\n  ret_4 = (ret_4 * (1.0 - (\n    dot (vec3(greaterThan ((\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_16)).xyz * scale1)\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\n   * 0.2)));\n  vec2 tmpvar_17;\n  tmpvar_17.y = -0.1;\n  tmpvar_17.x = (0.51 + tmpvar_15);\n  ret_4 = (ret_4 * (1.0 - (\n    dot (vec3(greaterThan ((\n      (texture (sampler_blur1, ((tmpvar_5 * vec2(0.5, 0.37)) + tmpvar_17)).xyz * scale1)\n     + bias1), vec3(0.02, 0.02, 0.02))), vec3(0.32, 0.49, 0.29))\n   * 0.2)));\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ret_4;\n  ret = tmpvar_18.xyz;\n}\n\n"}