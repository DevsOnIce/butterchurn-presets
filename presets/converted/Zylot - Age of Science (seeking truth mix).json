{"baseVals":{"rating":5,"wave_mode":1,"wrap":0,"wave_a":0.001,"wave_scale":0.132666,"wave_mystery":-0.38,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.r=(0.8+(0.2*Math.sin((m.time*1.444)))); m.g=(0.8+(0.2*Math.sin((m.time*1.2233)))); m.b=(0.8+(0.2*Math.sin((m.time*1.332211))));","point_eqs_str":"m.x=(0.5+((0.3*Math.sin((m.sample*20)))*(m.value1*10))); m.y=(0.5+((0.3*Math.cos((m.sample*20)))*(m.value2*10)));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.tme = 0;\nm.tme=0;\n\t\t\tm.rkeys = ['tme'];","frame_eqs_str":"","point_eqs_str":"m.tme=(m.tme+(m.bass*0.5)); m.x=(0.5+(0.24*Math.sin(((m.sample*3.1415926)*2)))); m.y=(0.5+(0.24*Math.cos(((m.sample*3.1415926)*2)))); m.r=Math.sin(((m.sample*20)+(m.tme*0.0002))); m.g=0; m.b=0; m.a=(0.5+Math.sin(((m.sample*20)+(m.tme*0.0002)))); m.a=((below(m.a, 0)!=0)?(0):(m.a));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.tme = 0;\nm.tme=0;\n\t\t\tm.rkeys = ['tme'];","frame_eqs_str":"","point_eqs_str":"m.tme=(m.tme+(m.treb*0.5)); m.x=(0.5+(0.241*Math.sin(((m.sample*3.1415926)*2)))); m.y=(0.5+(0.241*Math.cos(((m.sample*3.1415926)*2)))); m.r=0; m.g=Math.sin(((m.sample*20)+(m.tme*0.0002))); m.b=0; m.a=(0.5+Math.sin(((m.sample*20)+(m.tme*0.0002)))); m.a=((below(m.a, 0)!=0)?(0):(m.a));"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.tme = 0;\n\n\t\t\tm.rkeys = ['tme'];","frame_eqs_str":"","point_eqs_str":"m.tme=(m.tme+(m.mid*0.5)); m.x=(0.5+(0.242*Math.sin(((m.sample*3.1415926)*2)))); m.y=(0.5+(0.242*Math.cos(((m.sample*3.1415926)*2)))); m.r=0; m.g=0; m.b=Math.sin(((m.sample*20)+(m.tme*0.0002))); m.a=(0.5+Math.sin(((m.sample*20)+(m.tme*0.0002)))); m.a=((below(m.a, 0)!=0)?(0):(m.a));"}],"init_eqs_str":"m.q1 = 0;\nm.frtrebc = 0;\nm.frbassc = 0;\nm.q2 = 0;\nm.frbassc=0; m.frtrebc=0;","frame_eqs_str":"m.warp=0; m.wave_r=((m.wave_r+(0.4*Math.sin((m.time*0.333))))+(m.bass_att*0.2)); m.wave_g=((m.wave_g+(0.4*Math.sin((m.time*0.555))))+(m.treb_att*0.2)); m.wave_b=((m.wave_b+(0.4*Math.sin((m.time*0.444))))+(m.mid_att*0.2)); m.frbassc=(m.frbassc+(m.bass*0.5)); m.frtrebc=(m.frtrebc+(m.treb*0.5)); m.q1=Math.sin((m.frbassc*0.01)); m.q2=Math.sin((m.frtrebc*0.01));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=(1+(Math.abs((m.rad-(0.8-(m.bass*0.2))))*0.1));","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_fc_main, uv);\n  ret_1 = tmpvar_2.xyz;\n  if ((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) < ((\n    ((mid + bass) + treb)\n   / 3.0) * 0.3))) {\n    ret_1 = (tmpvar_2.xyz + vec3(0.6, 0.6, 0.6));\n  } else {\n    ret_1 = ((ret_1 - 0.005) * 0.99);\n  };\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"uniform sampler2D sampler_smalltiled_electric_nebula;\nshader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec2 tmpvar_2;\n  tmpvar_2.x = ((uv.x + 0.5) + q1);\n  tmpvar_2.y = ((uv.y + 0.5) + q2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_smalltiled_electric_nebula, (\n    (tmpvar_2 * texsize.xy)\n   * texsize_smalltiled_electric_nebula.zw)).xyz * (\n    ((bass + mid) + treb)\n   * 0.5)), tmpvar_1.xyz, (tmpvar_1.xyz * 2.5));\n  ret = tmpvar_3.xyz;\n}\n\n"}