{"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.99,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":0.611,"wave_smoothing":0.9,"wave_mystery":0.4,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":0.9,"fshader":1,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_r":0.01,"ob_a":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.2,"mv_x":64,"mv_y":48,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.33004,"ang":2.32478,"tex_ang":0.25133,"tex_zoom":0.74192,"g":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_a":0.2},"init_eqs_str":"m.tg3 = 0;\nm.thresh = 0;\nm.dy_r = 0;\nm.tg2 = 0;\nm.tg1 = 0;\nm.dx_r = 0;\n\n\t\t\tm.rkeys = ['thresh','dx_r','dy_r','tg3'];","frame_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.tg1=Math.abs(Math.sin(m.time)); m.tg2=(((((0.25*above(m.tg1, 0.80))-(0.25*below(m.tg1, 0.20)))+((0.33*above(m.tg1, 0.2))*below(m.tg1, 0.4)))-((0.33*above(m.tg1, 0.4))*below(m.tg1, 0.6)))+((0*below(m.tg1, 0.8))*above(m.tg1, 0.6))); m.tg3=((equal(m.thresh, 2)!=0)?(m.tg2):(m.tg3)); m.x=(m.x+((42*m.dy_r)*m.tg3)); m.y=(m.y+((42*m.dx_r)*m.tg3));"},{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":0.33004,"ang":2.32478,"tex_ang":0.25133,"tex_zoom":1.64462,"r":0,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_b":0,"border_a":0.2},"init_eqs_str":"m.tg3 = 0;\nm.thresh = 0;\nm.dy_r = 0;\nm.tg2 = 0;\nm.tg1 = 0;\nm.dx_r = 0;\n\n\t\t\tm.rkeys = ['thresh','dx_r','dy_r','tg3'];","frame_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.tg1=Math.abs(Math.sin(m.time)); m.tg2=(((((0.25*above(m.tg1, 0.80))-(0.25*below(m.tg1, 0.20)))+((0.33*above(m.tg1, 0.2))*below(m.tg1, 0.4)))-((0.33*above(m.tg1, 0.4))*below(m.tg1, 0.6)))+((0*below(m.tg1, 0.8))*above(m.tg1, 0.6))); m.tg3=((equal(m.thresh, 2)!=0)?(m.tg2):(m.tg3)); m.x=(m.x-((42*m.dy_r)*m.tg3)); m.y=(m.y-((42*m.dx_r)*m.tg3));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.turnr = 0;\nm.simp = 0;\nm.q1 = 0;\nm.q2 = 0;\nm.turn = 0;\nm.q3 = 0;","frame_eqs_str":"m.wave_x=((m.wave_x+(0.05*Math.sin((0.2*m.time))))-((0.05*Math.cos((0.1*m.time)))+(0.05*Math.sin((0.2*m.time))))); m.wave_y=((m.wave_y+(0.05*Math.sin((0.3*m.time))))-((0.05*Math.sin((0.88*m.time)))+(0.05*Math.cos((0.7*m.time))))); m.wave_r=((m.wave_r+(0.35*Math.sin((1.13*m.time))))+(0.1245*Math.sin((2.34*m.time)))); m.wave_g=((m.wave_g+(0.35*Math.sin((1.23*m.time))))+(0.12*Math.sin((2.134*m.time)))); m.wave_b=((m.wave_b+(0.35*Math.sin((1.33*m.time))))+(0.12*Math.sin((2.5*m.time)))); m.wave_mystery=(m.wave_mystery+(0.00*Math.sin(m.time))); m.turn=((above(m.bass_att, m.turn)*2)+((1-above(m.bass_att, m.turn))*(((m.turn-1.3)*0.96)+1.3))); m.turnr=(((equal(m.turn, 2)*0.089)*Math.sin((m.time*6.6)))+((1-equal(m.turn, 2))*m.turnr)); m.simp=((((m.simp*0.35)*Math.sin((1.2*m.time)))-(0.62*Math.sin((0.7*m.time))))+(1.5*Math.sin(m.turn))); m.rot=(m.rot+(0.5*(((0.25*m.simp)*10)*m.turnr))); m.q1=m.wave_r; m.q2=m.wave_g; m.q3=m.wave_b; m.ob_r=((1-Math.abs(m.q1))-Math.abs((0.5*Math.sin(m.time)))); m.ob_b=((1-Math.abs(m.q3))-Math.abs((0.64*Math.cos(m.time)))); m.ob_g=((1-Math.abs(m.q2))-Math.abs((0.5*Math.sin((1.1*m.time)))));\n\t\tm.rkeys = ['zoom','dx','dy'];","pixel_eqs_str":"m.zoom=(m.zoom-(0.02*(1.5-m.rad))); m.dx=(m.dx+(0.014*(((m.bass_att*3.1)*m.rot)+(0.2*Math.cos(Math.tan((80*m.ang))))))); m.dy=(m.dy+(0.014*(((m.bass_att*3.1)*m.rot)+(0.22*Math.sin(Math.tan((80*m.ang))))))); m.zoom=(m.zoom+((above(m.bass, 1)!=0)?((0.2*Math.sin((14*m.time)))):((0.3*Math.sin(((5*Math.sin(m.time))+(Math.abs((3*Math.sin(m.time)))*m.rad)))))));","warp":"shader_body\n{\n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = (0.03 + (1.5 * (q11 * q11)));\n  vec3 tmpvar_3;\n  tmpvar_3.xy = (((\n    (uv_orig * 4.0)\n   * texsize.xy) / 850.0) * tmpvar_2);\n  tmpvar_3.z = (time * 0.055);\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv_orig * texsize.xy);\n  ret_1 = texture (sampler_main, (uv + ((1.53 * \n    (cos(((\n      (0.6 * tmpvar_4)\n     * tmpvar_2) + (texture (sampler_noisevol_hq, tmpvar_3).xy * 9.0))) * texsize.zw)\n  ) / tmpvar_2))).xyz;\n  ret_1 = (ret_1 * 0.99);\n  ret_1 = (ret_1 + (19.52 * (\n    (texture (sampler_noise_lq, ((tmpvar_4 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.05, 0.05, 0.05));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n}\n\n","comp":""}