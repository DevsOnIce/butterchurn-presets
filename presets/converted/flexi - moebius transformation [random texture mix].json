{"baseVals":{"rating":0,"gammaadj":1,"decay":0.95,"echo_zoom":0.498,"echo_orient":3,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":13.29089,"dx":-0.28,"dy":-0.32,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.c_inv_i = 0;\nm.translation_x = 0;\nm.a_i = 0;\nm.c_r = 0;\nm.a_r = 0;\nm.iangle = 0;\nm.scale = 0;\nm.q6 = 0;\nm.ac_i = 0;\nm.itranslation_u = 0;\nm.q1 = 0;\nm.itranslation_v = 0;\nm.q5 = 0;\nm.c_inv_r = 0;\nm.d_i = 0;\nm.angle = 0;\nm.mu_i = 0;\nm.bcad_r = 0;\nm.iscale = 0;\nm.q4 = 0;\nm.b_r = 0;\nm.mu_r = 0;\nm.bcad_i = 0;\nm.c_i = 0;\nm.q2 = 0;\nm.ac_r = 0;\nm.translation_y = 0;\nm.q3 = 0;\nm.b_i = 0;\nm.q7 = 0;\nm.d_r = 0;\nm.q8 = 0;\nm.zoom=1; m.xpos=0; m.ypos=0;","frame_eqs_str":"m.scale=1; m.angle=(m.time*0.2); m.translation_x=0; m.translation_y=0.1; m.iscale=1; m.iangle=0.2; m.itranslation_u=0; m.itranslation_v=0; m.a_r=(Math.cos(m.angle)*m.scale); m.a_i=(Math.sin(m.angle)*m.scale); m.b_r=m.translation_x; m.b_i=m.translation_y; m.c_r=(-Math.cos(m.iangle)*m.iscale); m.c_i=(-Math.sin(m.iangle)*m.iscale); m.d_r=m.itranslation_u; m.d_i=m.itranslation_v; m.c_inv_r=div(m.c_r,((m.c_r*m.c_r)+(m.c_i*m.c_i))); m.c_inv_i=div(m.c_i,((m.c_r*m.c_r)+(m.c_i*m.c_i))); m.ac_r=((m.a_r*m.c_inv_r)-(m.a_i*m.c_inv_i)); m.ac_i=((m.a_r*m.c_inv_i)-(m.a_i*m.c_inv_r)); m.bcad_r=(((m.b_r*m.c_r)-(m.b_i*m.c_i))-((m.a_r*m.d_r)-(m.a_i*m.d_i))); m.bcad_i=(((m.b_r*m.c_i)-(m.b_i*m.c_r))-((m.a_r*m.d_i)-(m.a_i*m.d_r))); m.mu_r=((m.bcad_r*m.c_inv_r)-(m.bcad_i*m.c_inv_i)); m.mu_i=((m.bcad_r*m.c_inv_i)-(m.bcad_i*m.c_inv_r)); m.q1=m.ac_r; m.q2=m.ac_i; m.q3=m.mu_r; m.q4=m.mu_i; m.q5=m.c_r; m.q6=m.c_i; m.q7=m.d_r; m.q8=m.d_i; m.monitor=m.bcad_r;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"uniform sampler2D sampler_rand00;\nshader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_rand00, uv_orig).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = q1;\n  tmpvar_1.y = q2;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q7;\n  tmpvar_2.y = q8;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.wz);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * q5) - (tmpvar_3.y * q6));\n  tmpvar_4.y = ((tmpvar_3.x * q6) - (tmpvar_3.y * q5));\n  vec2 tmpvar_5;\n  tmpvar_5 = ((tmpvar_4 * aspect.yx) + tmpvar_2);\n  vec2 tmpvar_6;\n  tmpvar_6.x = ((q3 * tmpvar_5.x) + (q4 * tmpvar_5.y));\n  tmpvar_6.y = ((q4 * tmpvar_5.x) - (q3 * tmpvar_5.y));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = texture (sampler_fc_main, (0.5 + ((\n    (1.0 - abs(((\n      fract((((tmpvar_6 / \n        ((tmpvar_5.x * tmpvar_5.x) + (tmpvar_5.y * tmpvar_5.y))\n      ) + tmpvar_1) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.99))).xyz;\n  ret = tmpvar_7.xyz;\n}\n\n"}