{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":0.442,"warpscale":0.498,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.trel3 = 0;\nm.index2 = 0;\nm.q25 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.movex = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.trot = 0;\nm.p2 = 0;\nm.mov = 0;\nm.avg = 0;\nm.movez = 0;\nm.trel4 = 0;\nm.q19 = 0;\nm.beat = 0;\nm.q17 = 0;\nm.trel2 = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.movey = 0;\nm.trel1 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.dirx=1;","frame_eqs_str":"m.dec_med=pow(0.7, div(30,m.fps)); m.dec_slow=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, (m.avg+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q29=(2*(mod(m.index2,2)-0.5)); m.q25=Math.min(1, div(m.q22,2)); m.k1=(m.is_beat*equal(mod(m.index,4), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q27=m.index; m.q28=m.index2; m.mov=((m.mov*m.dec_med)+((1-m.dec_med)*above(mod(m.index,8), 2))); m.movez=(m.movez+(div(1,m.fps)*m.mov)); m.q30=m.movez; m.q8=m.movex; m.q9=m.movey; m.trel1=(m.trel1+div(((m.q1*m.q22)*3),m.fps)); m.trel2=(m.trel2+div(((m.q2*m.q22)*2),m.fps)); m.trel3=(m.trel3+div((4*(1-m.mov)),m.fps)); m.trel4=(m.trel4+div((1*m.mov),m.fps)); m.q11=(0.3*Math.sin(m.trel1)); m.q12=(0.1*Math.cos(m.trel2)); m.q13=(8+(6*Math.sin(m.trel3))); m.q14=(0.3*Math.sin(m.trel2)); m.q15=(0.2*Math.cos(m.trel3)); m.q16=(6+(3*Math.sin(m.trel1))); m.q17=(0.3*Math.sin(m.trel4)); m.q18=(0.3*Math.cos(m.trel2)); m.q19=(3+Math.sin(m.trel3)); m.trot=div(m.trel1,2); m.trot=div((m.index2*6.28),4); m.q5=Math.cos(m.trot); m.q6=Math.sin(m.trot); m.q7=-m.q6; m.q8=m.q5;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float xlat_mutableq25;\nshader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = ((2.0 * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  uv_1 = (uv + ((\n    clamp (((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3)), vec2(-2.0, -2.0), vec2(2.0, 2.0))\n   / 20.0) * q29));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 32.0)));\n  xlat_mutableq25 = (q24 + 0.01);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((xlat_mutableq25 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.99) + ((0.995 * \n    (1.0 - xlat_mutableq25)\n  ) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret1;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutableuv4;\nshader_body\n{\n  vec2 uv1_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qb.xy;\n  tmpvar_2[1u] = _qb.zw;\n  uv1_1 = (((uv - 0.5) * aspect.xy) * tmpvar_2);\n  vec2 tmpvar_3;\n  tmpvar_3.x = q11;\n  tmpvar_3.y = q12;\n  xlat_mutablersk = (uv1_1 + tmpvar_3);\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel1 = (((xlat_mutableuv4 * \n    clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0)\n  ) / (1.0 + \n    (q13 * q13)\n  )) * q13);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q14;\n  tmpvar_4.y = q15;\n  xlat_mutablersk = (uv1_1 + tmpvar_4);\n  xlat_mutablerad2 = ((2.0 * (1.0 + q16)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\n  xlat_mutableKugel2 = (((xlat_mutableuv4 * \n    clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0)\n  ) / (1.0 + \n    (q16 * q16)\n  )) * q16);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q17;\n  tmpvar_5.y = q18;\n  xlat_mutablersk = (uv1_1 + tmpvar_5);\n  xlat_mutablerad3 = ((4.0 * (1.0 + q19)) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\n  float tmpvar_6;\n  tmpvar_6 = (0.1 / abs((\n    (uv1_1.y * rad)\n   * rad)));\n  xlat_mutablers0.y = tmpvar_6;\n  xlat_mutablers0.x = ((uv1_1.x * tmpvar_6) * 4.0);\n  mat2 tmpvar_7;\n  tmpvar_7[uint(0)] = _qa.xy;\n  tmpvar_7[1u] = _qa.zw;\n  xlat_mutablers0 = (xlat_mutablers0 * tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = q30;\n  xlat_mutableret2 = (((texture (sampler_blur1, \n    fract((xlat_mutablers0 + tmpvar_8))\n  ).xyz * scale1) + bias1) / tmpvar_6);\n  uv1_1 = (uv1_1 + ((\n    ((xlat_mutableKugel1 + xlat_mutableKugel2) + (((xlat_mutableuv4 * \n      clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0)\n    ) / (1.0 + \n      (q19 * q19)\n    )) * q19))\n   * 0.25) + (xlat_mutableret2 / 4.0).xy));\n  xlat_mutableret1 = (((\n    (xlat_mutableret2 + texture (sampler_main, ((uv1_1 / 2.0) + 0.5)).xyz)\n   + \n    ((((0.4 / xlat_mutablerad1) * (0.5 - \n      ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1)\n    )) * q22) * (float(mod (q27, 4.0))))\n  ) + (\n    (((0.3 / xlat_mutablerad2) * (0.5 - (\n      (texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1)\n     + bias1))) * q22)\n   * \n    (float(mod ((q27 + 1.0), 4.0)))\n  )) + ((\n    ((0.2 / xlat_mutablerad3) * (0.5 - ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1)))\n   * q22) * (float(mod (\n    (q27 + 2.0)\n  , 4.0)))));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = clamp ((xlat_mutableret1 * (1.0 + xlat_mutableret1)), 0.0, 1.0);\n  ret = tmpvar_9.xyz;\n}\n\n"}