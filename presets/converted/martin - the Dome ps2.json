{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.5274,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.q25 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.t_rel = 0;\nm.dec_slow = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.ds = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p4 = 0;\nm.indexa = 0;","frame_eqs_str":"m.dec_med=pow(0.7, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.beat=((m.bass+m.mid)+m.treb); m.beat=(m.beat*m.beat); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((1.2*m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.indexa=mod((m.indexa+m.is_beat),5); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=(((m.bass_att+m.mid_att)+m.treb_att)+1); m.q27=(m.index+1); m.q28=(-m.index2+div(m.indexa,5)); m.q29=m.index2; m.monitor=m.q29; m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.ds=((m.ds*m.dec_med)+(m.q24*(1-m.dec_med))); m.q25=m.q24; m.q10=above(m.q2, 0.5); m.t_rel=(m.time*8); m.p3=((m.p3*m.dec_med)+((1-m.dec_med)*((100*m.index)+(0.0*m.q26)))); m.q30=m.p3; m.p4=((m.dec_med*m.p4)+((1-m.dec_med)*m.q27)); m.q31=m.p4; m.zoom=1.0; m.warp=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((q29 * 2.0) * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  float tmpvar_5;\n  tmpvar_5 = (0.5 + (rand_preset * 10.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(\n    -(tmpvar_5)\n  ), vec2(tmpvar_5)) / 20.0));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((q25 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q25) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nshader_body\n{\n  vec2 uv_1;\n  uv_1.x = uv.x;\n  vec3 ret2_2;\n  float z_3;\n  uv_1.y = (uv.y - 0.1);\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_1 - 0.5) * aspect.xy);\n  z_3 = (0.3 / tmpvar_4.y);\n  xlat_mutablers0.x = (tmpvar_4.x * z_3);\n  xlat_mutablers0.y = z_3;\n  float tmpvar_5;\n  tmpvar_5 = (time / 2.0);\n  xlat_mutablers.x = (xlat_mutablers0.x + tmpvar_5);\n  xlat_mutablers.y = (z_3 + tmpvar_5);\n  xlat_mutableret1 = (vec3(dot (texture (sampler_noise_hq, (xlat_mutablers / 2.0)), vec4(0.32, 0.49, 0.29, 0.0))) - 0.55);\n  float tmpvar_6;\n  tmpvar_6 = clamp ((24.0 * tmpvar_4.y), 0.0, 1.0);\n  xlat_mutableuv2 = ((1.5 * tmpvar_4) * (q28 - abs(tmpvar_4.x)));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  vec2 tmpvar_7;\n  tmpvar_7 = fract(((xlat_mutableuv2 - \n    (q27 / 2.0)\n  ) - (\n    (xlat_mutableret1 * 0.04)\n   * tmpvar_6).xy));\n  vec2 tmpvar_8;\n  tmpvar_8.y = 0.0;\n  tmpvar_8.x = texsize.z;\n  vec2 tmpvar_9;\n  tmpvar_9.x = 0.0;\n  tmpvar_9.y = texsize.w;\n  vec2 tmpvar_10;\n  tmpvar_10.x = dot ((texture (sampler_main, (tmpvar_7 + tmpvar_8)).xyz - texture (sampler_main, (tmpvar_7 - tmpvar_8)).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_10.y = dot ((texture (sampler_main, (tmpvar_7 + tmpvar_9)).xyz - texture (sampler_main, (tmpvar_7 - tmpvar_9)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutableuv3 = (tmpvar_7 + (0.02 * tmpvar_10));\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.5;\n  tmpvar_11.y = (tmpvar_4.y / tmpvar_4.x);\n  ret2_2 = (((\n    (texture (sampler_blur1, fract(((time / 8.0) + (\n      (0.1 * bass_att)\n     * tmpvar_11)))).xyz * scale1)\n   + bias1) * roam_cos.xyz) + ((0.008 / \n    sqrt(dot (tmpvar_4, tmpvar_4))\n  ) * roam_cos.xyz));\n  ret2_2 = (ret2_2 * q10);\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv3).xyz + ((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1));\n  xlat_mutableret1 = (xlat_mutableret1 * (1.0 - (tmpvar_6 / 3.0)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (xlat_mutableret1 + ret2_2);\n  ret = tmpvar_12.xyz;\n}\n\n"}