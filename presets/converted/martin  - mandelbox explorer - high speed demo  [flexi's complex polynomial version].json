{
  "baseVals": {
    "rating": 1,
    "gammaadj": 1.98,
    "decay": 0.5,
    "echo_zoom": 1,
    "echo_alpha": 0.5,
    "echo_orient": 3,
    "wave_mode": 7,
    "additivewave": 1,
    "wave_dots": 0,
    "wave_thick": 1,
    "modwavealphabyvolume": 1,
    "wave_brighten": 0,
    "wrap": 0,
    "darken_center": 0,
    "red_blue": 0,
    "brighten": 0,
    "darken": 1,
    "solarize": 0,
    "invert": 0,
    "wave_a": 0.001,
    "wave_scale": 0.958,
    "wave_smoothing": 0.45,
    "wave_mystery": 0,
    "modwavealphastart": 0,
    "modwavealphaend": 1.32,
    "warpanimspeed": 1.459,
    "warpscale": 2.007,
    "zoomexp": 1,
    "fshader": 0,
    "zoom": 0.9999,
    "rot": 0,
    "cx": 0.5,
    "cy": 0.5,
    "dx": 0,
    "dy": 0,
    "warp": 0.01,
    "sx": 0.9999,
    "sy": 1,
    "wave_r": 0,
    "wave_g": 0,
    "wave_b": 0,
    "wave_x": 0.5,
    "wave_y": 0.5,
    "ob_size": 0.05,
    "ob_r": 0,
    "ob_g": 0.1,
    "ob_b": 1,
    "ob_a": 1,
    "ib_size": 0,
    "ib_r": 0,
    "ib_g": 0,
    "ib_b": 0,
    "ib_a": 0,
    "mv_x": 25.6,
    "mv_y": 9.6,
    "mv_dx": 0,
    "mv_dy": 0,
    "mv_l": 0,
    "mv_r": 0.5,
    "mv_g": 0.5,
    "mv_b": 0.5,
    "mv_a": 0,
    "b1n": 0,
    "b2n": 0,
    "b3n": 0,
    "b1x": 1,
    "b2x": 1,
    "b3x": 1,
    "b1ed": 0
  },
  "shapes": [
    {
      "baseVals": {
        "enabled": 0,
        "sides": 4,
        "additive": 0,
        "thickoutline": 0,
        "textured": 1,
        "num_inst": 1,
        "x": 0.09,
        "y": 0.9,
        "rad": 0.22437,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 1.76002,
        "r": 1,
        "g": 0,
        "b": 0,
        "a": 1,
        "r2": 1,
        "g2": 0,
        "b2": 0,
        "a2": 0.6,
        "border_r": 1,
        "border_g": 1,
        "border_b": 1,
        "border_a": 0
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "sides": 100,
        "additive": 1,
        "thickoutline": 0,
        "textured": 0,
        "num_inst": 1,
        "x": 0.26,
        "y": 0.2,
        "rad": 0.39317,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 6.19589,
        "r": 0,
        "g": 0.55,
        "b": 0.5,
        "a": 1,
        "r2": 0,
        "g2": 0.4,
        "b2": 0.4,
        "a2": 0.07,
        "border_r": 0.3,
        "border_g": 0.7,
        "border_b": 0.8,
        "border_a": 0
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "sides": 44,
        "additive": 1,
        "thickoutline": 0,
        "textured": 0,
        "num_inst": 1,
        "x": 0.503,
        "y": 0.5,
        "rad": 0.03886,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 0.60986,
        "r": 1,
        "g": 0.1,
        "b": 0,
        "a": 0.9,
        "r2": 1,
        "g2": 1,
        "b2": 1,
        "a2": 0,
        "border_r": 0.5,
        "border_g": 0.5,
        "border_b": 0.5,
        "border_a": 0
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "sides": 100,
        "additive": 0,
        "thickoutline": 0,
        "textured": 0,
        "num_inst": 1,
        "x": 0.5,
        "y": 0.5,
        "rad": 0.01,
        "ang": 0,
        "tex_ang": 0,
        "tex_zoom": 0.49981,
        "r": 0,
        "g": 0,
        "b": 0,
        "a": 1,
        "r2": 0,
        "g2": 0,
        "b2": 0,
        "a2": 0,
        "border_r": 0.2,
        "border_g": 0.7,
        "border_b": 0.5,
        "border_a": 0
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": ""
    }
  ],
  "waves": [
    {
      "baseVals": {
        "enabled": 0,
        "samples": 282,
        "sep": 20,
        "spectrum": 0,
        "usedots": 1,
        "thick": 1,
        "additive": 1,
        "scaling": 3.91581,
        "smoothing": 0.1,
        "r": 0.2,
        "g": 0.3,
        "b": 1,
        "a": 0.6
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": "",
      "point_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "spectrum": 0,
        "usedots": 1,
        "thick": 1,
        "additive": 0,
        "scaling": 0.89152,
        "smoothing": 0.82,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 0.1
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": "",
      "point_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "spectrum": 0,
        "usedots": 0,
        "thick": 1,
        "additive": 0,
        "scaling": 0.89152,
        "smoothing": 0.82,
        "r": 0,
        "g": 0.2,
        "b": 0,
        "a": 1
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": "",
      "point_eqs_str": ""
    },
    {
      "baseVals": {
        "enabled": 0,
        "samples": 512,
        "sep": 0,
        "spectrum": 1,
        "usedots": 1,
        "thick": 0,
        "additive": 0,
        "scaling": 1,
        "smoothing": 0.5,
        "r": 1,
        "g": 1,
        "b": 1,
        "a": 1
      },
      "init_eqs_str": "m.rkeys = [];",
      "frame_eqs_str": "",
      "point_eqs_str": ""
    }
  ],
  "init_eqs_str": "m.look = 0;\nm.n = 0;\nm.int = 0;\nm.reg26 = 0;\nm.uvx0 = 0;\nm.reg34 = 0;\nm.reg28 = 0;\nm.reg23 = 0;\nm.q25 = 0;\nm.angchg = 0;\nm.reg20 = 0;\nm.reg15 = 0;\nm.reg10 = 0;\nm.q12 = 0;\nm.v3 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.diry = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.posx = 0;\nm.fps_ = 0;\nm.reg25 = 0;\nm.uvx = 0;\nm.q1 = 0;\nm.travel = 0;\nm.posz = 0;\nm.q5 = 0;\nm.dirz = 0;\nm.dec_s = 0;\nm.reg16 = 0;\nm.slow = 0;\nm.reg36 = 0;\nm.reg22 = 0;\nm.uvy = 0;\nm.rotz = 0;\nm.ly = 0;\nm.dist_ = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.reg24 = 0;\nm.cran0 = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.reg14 = 0;\nm.posy = 0;\nm.reg31 = 0;\nm.dirx = 0;\nm.q4 = 0;\nm.start = 0;\nm.reg12 = 0;\nm.reg13 = 0;\nm.c2 = 0;\nm.sqrt = 0;\nm.reg37 = 0;\nm.s3 = 0;\nm.yslope = 0;\nm.lampy = 0;\nm.q16 = 0;\nm.xslope = 0;\nm.q26 = 0;\nm.reg38 = 0;\nm.reg35 = 0;\nm.reg11 = 0;\nm.tx = 0;\nm.avg = 0;\nm.uvz = 0;\nm.c3 = 0;\nm.uvy0 = 0;\nm.reg27 = 0;\nm.q19 = 0;\nm.beat = 0;\nm.reg32 = 0;\nm.lx = 0;\nm.reg21 = 0;\nm.uvz0 = 0;\nm.len = 0;\nm.reg18 = 0;\nm.reg30 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.slen = 0;\nm.q14 = 0;\nm.dist = 0;\nm.reg17 = 0;\nm.v1 = 0;\nm.speed = 0;\nm.s1 = 0;\nm.t0 = 0;\nm.s2 = 0;\nm.ran1 = 0;\nm.reg33 = 0;\nm.q7 = 0;\nm.ds = 0;\nm.q28 = 0;\nm.lampx = 0;\nm.ty = 0;\nm.c1 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.avg=0.01; m.q7=0.25; m.q8=(rand(2.0)-1.0); m.q16=(1+rand(2)); m.q18=(rand(0.8)+0.1); m.q30=1; m.q31=128; m.start=1; m.travel=0; m.rotz=0; m.look=0; m.slow=0; m.t0=(m.time+3); m.lampx=0.5; m.lampy=0.5; m.cran0=rand(1); m.n=0; for(var mdparser_idx1=0;mdparser_idx1<10000;mdparser_idx1++){m.gmegabuf[m.n]=0; m.n=(m.n+1);} m.n=0; for(var mdparser_idx2=0;mdparser_idx2<10000;mdparser_idx2++){m.megabuf[m.n]=0; m.n=(m.n+1);} m.trelx=0; m.trely=0; m.trelz=0; m.reg20=1; m.reg21=0; m.reg22=0; m.reg23=0; m.reg24=1; m.reg25=0; m.reg26=0; m.reg27=0; m.reg28=1; (function(){var mdparser_idx3;var mdparser_count4=0;do{mdparser_count4+=1;mdparser_idx3=(function(){m.ran1=div(rand(800),100); m.ran2=div(rand(800),100); m.ran3=div(rand(800),100); m.posx=(rand(5)-2); m.posy=(rand(5)-2); m.posz=(rand(5)-2); m.c1=Math.cos(m.ran1); m.c2=Math.cos(m.ran2); m.c3=Math.cos(m.ran3); m.s1=Math.sin(m.ran1); m.s2=Math.sin(m.ran2); m.s3=Math.sin(m.ran3); m.reg20=(m.c2*m.c1); m.reg21=(m.c2*m.s1); m.reg22=-m.s2; m.reg23=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg24=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg25=(m.s3*m.c2); m.reg26=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg27=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg28=(m.c3*m.c2); m.dist=0.001; (function(){var mdparser_idx5;var mdparser_count6=0;do{mdparser_count6+=1;mdparser_idx5=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx7=0;mdparser_idx7<(7+1);mdparser_idx7++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.05; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx5!==0&&mdparser_count6<1048576);}()); return ((m.dist<0.06)?1:0)})()}while(mdparser_idx3!==0&&mdparser_count4<1048576);}());",
  "frame_eqs_str": "m.fps_=((0.0*m.fps_)+(1*((((m.fps<=25)?1:0)!=0)?(m.fps):((25+(0.5*(m.fps-25))))))); m.dec_s=(1-div((0.06*30),m.fps_)); m.beat=((m.time>(m.t0+3))?1:0); m.t0=((m.beat!=0)?(m.time):(m.t0)); m.speed=div((((Math.min(0.2, (m.dist_-0.02))*(1+(2*m.avg)))*(1-(m.slow*0.0)))*0.7),m.q7); m.ds=((m.ds*m.dec_s)+div((((1-m.dec_s)*m.speed)*0.25),m.fps_)); m.rotz=((((m.rotz==0)?1:0)!=0)?(((m.beat*((rand(100)<(20*m.travel))?1:0))*(div(rand(10),10)-0.3))):((bnot((m.beat*((rand(100)<30)?1:0)))*m.rotz))); m.slow=((bnot(m.slow)!=0)?((m.beat*((rand((1000*m.avg))<6)?1:0))):(bnot((m.beat*((rand(100)<50)?1:0))))); m.look=((bnot(m.look)!=0)?((m.beat*((rand((1000*m.speed))<12)?1:0))):(bnot((m.beat*((rand(100)<50)?1:0))))); m.lx=((m.beat!=0)?((div(rand(150),200)+0.15)):(m.lx)); m.ly=((m.beat!=0)?((div(rand(150),200)+0.15)):(m.ly)); m.lampx=((m.lampx*m.dec_s)+((1-m.dec_s)*((m.look!=0)?(m.lx):(0.5)))); m.lampy=((m.lampy*m.dec_s)+((1-m.dec_s)*((m.look!=0)?(m.ly):(0.5)))); m.q1=m.lampx; m.q2=m.lampy; m.dirx=m.reg26; m.diry=m.reg27; m.dirz=m.reg28; m.posx=(m.posx+(m.ds*m.dirx)); m.posy=(m.posy+(m.ds*m.diry)); m.posz=(m.posz+(m.ds*m.dirz)); m.q4=m.posx; m.q5=m.posy; m.q6=m.posz; m.angchg=(((0.2-m.dist_)*((m.dist_<0.2)?1:0))*2); m.travel=((((m.angchg>0)?1:0)!=0)?(0):((m.travel+m.ds))); m.v1=((m.v1*m.dec_s)+(((1-m.dec_s)*m.rotz)*m.ds)); m.v2=((m.v2*m.dec_s)+div((((1-m.dec_s)*m.angchg)*m.xslope),m.fps_)); m.v3=((m.v3*m.dec_s)+((1-m.dec_s)*(div((m.angchg*m.yslope),m.fps_)+((2*m.v1)*Math.sin((m.time*0.1)))))); m.reg30=m.reg20; m.reg31=m.reg21; m.reg32=m.reg22; m.reg33=m.reg23; m.reg34=m.reg24; m.reg35=m.reg25; m.reg36=m.reg26; m.reg37=m.reg27; m.reg38=m.reg28; m.n=0; m.avg=0; for(var mdparser_idx8=0;mdparser_idx8<5;mdparser_idx8++){m.n=(m.n+1); m.ran1=div(rand(100),100); m.ran2=(div(rand(100),200)-0.25); m.tx=((Math.cos(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.ty=((Math.sin(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.c1=Math.cos(m.v1); m.c2=Math.cos((m.v2+m.ty)); m.c3=Math.cos((m.v3+m.tx)); m.s1=Math.sin(m.v1); m.s2=Math.sin((m.v2+m.ty)); m.s3=Math.sin((m.v3+m.tx)); m.reg10=(m.c2*m.c1); m.reg11=(m.c2*m.s1); m.reg12=-m.s2; m.reg13=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg14=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg15=(m.s3*m.c2); m.reg16=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg17=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg18=(m.c3*m.c2); m.reg20=m.reg30; m.reg21=m.reg31; m.reg22=m.reg32; m.reg23=m.reg33; m.reg24=m.reg34; m.reg25=m.reg35; m.reg26=m.reg36; m.reg27=m.reg37; m.reg28=m.reg38; m.q20=(((m.reg10*m.reg20)+(m.reg11*m.reg23))+(m.reg12*m.reg26)); m.q21=(((m.reg10*m.reg21)+(m.reg11*m.reg24))+(m.reg12*m.reg27)); m.q22=(((m.reg10*m.reg22)+(m.reg11*m.reg25))+(m.reg12*m.reg28)); m.q23=(((m.reg13*m.reg20)+(m.reg14*m.reg23))+(m.reg15*m.reg26)); m.q24=(((m.reg13*m.reg21)+(m.reg14*m.reg24))+(m.reg15*m.reg27)); m.q25=(((m.reg13*m.reg22)+(m.reg14*m.reg25))+(m.reg15*m.reg28)); m.q26=(((m.reg16*m.reg20)+(m.reg17*m.reg23))+(m.reg18*m.reg26)); m.q27=(((m.reg16*m.reg21)+(m.reg17*m.reg24))+(m.reg18*m.reg27)); m.q28=(((m.reg16*m.reg22)+(m.reg17*m.reg25))+(m.reg18*m.reg28)); m.reg20=m.q20; m.reg21=m.q21; m.reg22=m.q22; m.reg23=m.q23; m.reg24=m.q24; m.reg25=m.q25; m.reg26=m.q26; m.reg27=m.q27; m.reg28=m.q28; m.dist=0.002; (function(){var mdparser_idx9;var mdparser_count10=0;do{mdparser_count10+=1;mdparser_idx9=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx11=0;mdparser_idx11<(7+1);mdparser_idx11++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.1; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx9!==0&&mdparser_count10<1048576);}()); m.megabuf[m.n]=((m.megabuf[m.n]*m.dec_s)+((1-m.dec_s)*m.dist)); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.n=0; m.avg=0; for(var mdparser_idx12=0;mdparser_idx12<5;mdparser_idx12++){m.n=(m.n+1); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.xslope=Math.min(Math.max((div(2,m.avg)*(m.megabuf[1]-m.megabuf[3])), -3), 3); m.yslope=Math.min(Math.max((div(2,m.avg)*(m.megabuf[4]-m.megabuf[2])), -3), 3); m.monitor=m.avg; m.dist_=((m.dist_*m.dec_s)+((1-m.dec_s)*m.dist)); m.q10=(m.ds*m.q7); m.q14=((((1*Math.abs(m.ds))+(2*((Math.abs(m.v1)+Math.abs(m.v2))+Math.abs(m.v3))))+div(1.0,255))+(m.start*0.05)); m.q19=(0.6+(0.4*Math.sin(((m.time*0.02)+(m.cran0*6))))); m.start=(m.start*0.9); m.q11=m.v1; m.q12=m.v2; m.q13=m.v3; m.monitor=m.q16;\n\t\tm.rkeys = [];",
  "pixel_eqs_str": "m.warp=0.0; m.zoom=1; m.dx=(div(-m.q12,m.q16)*(1+(0*pow((m.x-0.5), 2)))); m.dy=(div(m.q13,m.q16)*(1+(0*pow((m.y-0.5), 2)))); m.rot=m.q11;",
  "warp": "float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\nshader_body\n{\n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.98 - q14);\n  vec2 uv_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - 0.5);\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pc_main, uv);\n  uv_3 = ((tmpvar_5 * (1.0 - \n    (q10 / (1.0 - ((tmpvar_6.z + \n      (0.003921569 * tmpvar_6.y)\n    ) + (q10 * 0.7))))\n  )) + 0.5);\n  vec4 tmpvar_7;\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  xlat_mutabledist = tmpvar_7.x;\n  if ((tmpvar_7.y > 0.2)) {\n    vec3 tmpvar_8;\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.4, 0.5, 0.5));\n    vec2 uvi_9;\n    uvi_9 = ((tmpvar_8.zy * 0.003) + uv_3);\n    vec2 pix_10;\n    vec4 nb2_11;\n    vec4 nb_12;\n    vec2 x_13;\n    x_13 = (uvi_9 - 0.5);\n    pix_10 = (texsize.zw * (1.0 + (\n      sqrt(dot (x_13, x_13))\n     * 8.0)));\n    float tmpvar_14;\n    tmpvar_14 = (q10 * 0.7);\n    vec4 tmpvar_15;\n    tmpvar_15 = texture (sampler_pc_main, (uvi_9 - pix_10));\n    nb_12.x = (1.0 - ((tmpvar_15.z + \n      (0.003921569 * tmpvar_15.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_16;\n    tmpvar_16 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, -1.0))));\n    nb_12.y = (1.0 - ((tmpvar_16.z + \n      (0.003921569 * tmpvar_16.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_17;\n    tmpvar_17 = texture (sampler_pc_main, (uvi_9 + pix_10));\n    nb_12.z = (1.0 - ((tmpvar_17.z + \n      (0.003921569 * tmpvar_17.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_18;\n    tmpvar_18 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 1.0))));\n    nb_12.w = (1.0 - ((tmpvar_18.z + \n      (0.003921569 * tmpvar_18.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_19;\n    tmpvar_19 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, -1.0))));\n    nb2_11.x = (1.0 - ((tmpvar_19.z + \n      (0.003921569 * tmpvar_19.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_20;\n    tmpvar_20 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(1.0, 0.0))));\n    nb2_11.y = (1.0 - ((tmpvar_20.z + \n      (0.003921569 * tmpvar_20.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_21;\n    tmpvar_21 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(0.0, 1.0))));\n    nb2_11.z = (1.0 - ((tmpvar_21.z + \n      (0.003921569 * tmpvar_21.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_22;\n    tmpvar_22 = texture (sampler_pc_main, (uvi_9 + (pix_10 * vec2(-1.0, 0.0))));\n    nb2_11.w = (1.0 - ((tmpvar_22.z + \n      (0.003921569 * tmpvar_22.y)\n    ) + tmpvar_14));\n    vec4 tmpvar_23;\n    tmpvar_23 = min (nb_12, nb2_11);\n    nb_12.zw = tmpvar_23.zw;\n    nb_12.xy = min (tmpvar_23.xy, tmpvar_23.zw);\n    xlat_mutabledist = (min (nb_12.x, nb_12.y) + ((0.008 * tmpvar_8.x) * abs(tmpvar_8.y)));\n  };\n  vec4 tmpvar_24;\n  tmpvar_24 = texture (sampler_pc_main, uv_3);\n  float tmpvar_25;\n  tmpvar_25 = min (xlat_mutabledist, (1.0 - (\n    (tmpvar_24.z + (0.003921569 * tmpvar_24.y))\n   + \n    (q10 * 0.7)\n  )));\n  xlat_mutabledist = tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = (tmpvar_25 + pow (tmpvar_25, 3.0));\n  vec3 tmpvar_27;\n  tmpvar_27.xy = (xlat_mutableuv1 * tmpvar_26);\n  tmpvar_27.z = tmpvar_26;\n  xlat_mutableuv2 = (((tmpvar_27 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = ((fract(\n    ((xlat_mutableuv2 / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  float li_28;\n  vec3 zz0_29;\n  vec3 zz_30;\n  zz0_29 = (xlat_mutableuv2 + q8);\n  li_28 = 0.0;\n  zz_30 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\n  float tmpvar_31;\n  tmpvar_31 = dot (zz_30, zz_30);\n  if ((tmpvar_31 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_31 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_31);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_32;\n  tmpvar_32 = dot (zz_30, zz_30);\n  if ((tmpvar_32 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_32 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_32);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_33;\n  tmpvar_33 = dot (zz_30, zz_30);\n  if ((tmpvar_33 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_33 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_33);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_34;\n  tmpvar_34 = dot (zz_30, zz_30);\n  if ((tmpvar_34 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_34 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_34);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_35;\n  tmpvar_35 = dot (zz_30, zz_30);\n  if ((tmpvar_35 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_35 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_35);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_36;\n  tmpvar_36 = dot (zz_30, zz_30);\n  if ((tmpvar_36 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_36 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_36);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_37;\n  tmpvar_37 = dot (zz_30, zz_30);\n  if ((tmpvar_37 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_37 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_37);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  zz_30 = ((2.0 * clamp (zz_30, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_30);\n  float tmpvar_38;\n  tmpvar_38 = dot (zz_30, zz_30);\n  if ((tmpvar_38 <= 0.25)) {\n    zz_30 = (zz_30 * 4.0);\n    li_28 = 24.0;\n  } else {\n    if ((tmpvar_38 <= 1.0)) {\n      zz_30 = (zz_30 / tmpvar_38);\n    };\n  };\n  zz_30 = ((2.6 * zz_30) + zz0_29);\n  vec4 tmpvar_39;\n  tmpvar_39.xyz = zz_30;\n  tmpvar_39.w = li_28;\n  float tmpvar_40;\n  tmpvar_40 = sqrt(dot (zz_30, zz_30));\n  xlat_mutablestruc = (sqrt(dot (tmpvar_39.xyw, tmpvar_39.xyw)) / 24.0);\n  vec4 tmpvar_41;\n  tmpvar_41 = texture (sampler_pc_main, uv_3);\n  float tmpvar_42;\n  float tmpvar_43;\n  tmpvar_43 = (q10 * 0.7);\n  tmpvar_42 = ((log(\n    (1.0 + (tmpvar_40 / 24.0))\n  ) * 0.02) * (1.0 - (1.0 - \n    ((tmpvar_41.z + (0.003921569 * tmpvar_41.y)) + tmpvar_43)\n  )));\n  float tmpvar_44;\n  vec4 tmpvar_45;\n  tmpvar_45 = texture (sampler_pc_main, uv_3);\n  tmpvar_44 = (1.0 - ((tmpvar_45.z + \n    (0.003921569 * tmpvar_45.y)\n  ) + tmpvar_43));\n  if ((((tmpvar_25 <= tmpvar_44) && (tmpvar_40 < 24.0)) && (tmpvar_25 > 0.005))) {\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * mix (texture (sampler_main, uv_3).xyz, \n      ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\n    , vec3(\n      (q14 * 4.0)\n    )).x));\n    float x_46;\n    x_46 = ((1.0 - tmpvar_25) * 255.0);\n    float ip_47;\n    ip_47 = float(int(x_46));\n    vec2 tmpvar_48;\n    tmpvar_48.x = (x_46 - ip_47);\n    tmpvar_48.y = (ip_47 / 255.0);\n    ret_4.yz = tmpvar_48;\n  } else {\n    vec3 tmpvar_49;\n    tmpvar_49.y = 0.0;\n    tmpvar_49.x = sustain;\n    tmpvar_49.z = (1.0 - tmpvar_42);\n    vec3 tmpvar_50;\n    tmpvar_50.xy = vec2(0.003921569, 0.0);\n    tmpvar_50.z = (q14 / 6.0);\n    ret_4 = ((texture (sampler_fc_main, uv_3).xyz * tmpvar_49) - tmpvar_50);\n  };\n  vec4 tmpvar_51;\n  tmpvar_51.w = 1.0;\n  tmpvar_51.xyz = ret_4;\n  ret = tmpvar_51.xyz;\n}\n\n",
  "comp": "shader_body\n{\n  vec3 tmpvar_1;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  tmpvar_1.z = q6;\n  mat3 tmpvar_2;\n  tmpvar_2[uint(0)].x = q20;\n  tmpvar_2[uint(0)].y = q23;\n  tmpvar_2[uint(0)].z = q26;\n  tmpvar_2[1u].x = q21;\n  tmpvar_2[1u].y = q24;\n  tmpvar_2[1u].z = q27;\n  tmpvar_2[2u].x = q22;\n  tmpvar_2[2u].y = q25;\n  tmpvar_2[2u].z = q28;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  vec2 uv_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.5, 0.5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = -((tmpvar_6.y * -1024.0));\n  tmpvar_7.y = (tmpvar_6.x * -1024.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7.x;\n  tmpvar_8.y = -(tmpvar_7.y);\n  uv_4 = (vec2(-100.0, 100.0) * (tmpvar_8 / (\n    (tmpvar_7.x * tmpvar_7.x)\n   + \n    (tmpvar_7.y * tmpvar_7.y)\n  )).yx);\n  uv_4 = (0.5 + ((\n    (1.0 - abs(((\n      fract((mix ((0.5 + \n        (((0.5 + (\n          (uv - 0.5)\n         * vec2(1.1, 0.81))) - 0.5) * 2.0)\n      ), (uv_4 + 0.5), vec2(0.5, 0.5)) * 0.5))\n     * 2.0) - 1.0)))\n   - 0.5) * 0.98));\n  uv_4 = (((uv_4 - 0.5) * 0.9) + 0.5);\n  vec3 tmpvar_9;\n  tmpvar_9.xy = ((uv_4 - 0.5) * min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \n    ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\n  .z)));\n  tmpvar_9.z = min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - (\n    (texture (sampler_blur2, uv_4).xyz * scale2)\n   + bias2).z));\n  float tmpvar_10;\n  tmpvar_10 = clamp ((abs(\n    ((1.0 - ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2).z) - clamp ((1.0 - (\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\n     + bias2).z), 0.1, 0.4))\n  ) + 0.2), 0.0, 1.0);\n  float tmpvar_11;\n  tmpvar_11 = clamp (((1.0 - \n    exp(-(((texture (sampler_blur1, uv_4).xyz * scale1) + bias1).x))\n  ) - 0.2), 0.0, 1.0);\n  ret_5 = ((mix (texture (sampler_main, uv_4).xyz, \n    ((texture (sampler_blur1, uv_4).xyz * scale1) + bias1)\n  , vec3(tmpvar_10)).x * (0.2 + \n    ((1.0 - tmpvar_10) * (1.0 - min ((1.0 - texture (sampler_main, uv_4).z), (1.0 - \n      ((texture (sampler_blur2, uv_4).xyz * scale2) + bias2)\n    .z))))\n  )) * (1.0 + (0.5 * \n    sin((((tmpvar_9 / q7) * tmpvar_2) + tmpvar_1))\n  )));\n  vec3 tmpvar_12;\n  tmpvar_12.xy = vec2(0.0, 1.0);\n  tmpvar_12.z = (tmpvar_11 * 3.0);\n  ret_5 = (mix (ret_5, tmpvar_12, vec3(tmpvar_11)) + ((\n    pow ((1.0 - mix (texture (sampler_main, uv_4).xyz, (\n      (texture (sampler_blur1, uv_4).xyz * scale1)\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\n   * \n    (0.5 + (0.5 * slow_roam_cos))\n  ) * q19).xyz);\n  ret_5 = (1.0 - exp((-2.0 * ret_5)));\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_5;\n  ret = tmpvar_13.xyz;\n}\n\n"
}