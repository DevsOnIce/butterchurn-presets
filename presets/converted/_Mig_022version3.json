{"baseVals":{"rating":0,"gammaadj":2,"decay":0.987,"echo_zoom":1.006435,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":0,"wave_brighten":1,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":0.625316,"wave_smoothing":0.9,"wave_mystery":0,"modwavealphastart":0.88,"modwavealphaend":1.98,"warpanimspeed":53.523884,"warpscale":0.408391,"zoomexp":1,"fshader":0.1,"zoom":1,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":1,"sx":1,"sy":1,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0,"mv_x":0,"mv_y":0,"mv_dx":0,"mv_dy":0,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":1,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":16,"additive":0,"thickoutline":1,"textured":1,"x":0.5,"y":0.5,"rad":0.972354,"ang":0.1884,"tex_ang":0.628319,"tex_zoom":0.778288,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0},"init_eqs_str":"m.bmod = 0;\nm.gmod = 0;\nm.adv = 0;\nm.rmod = 0;\n\n\t\t\tm.rkeys = ['adv'];","frame_eqs_str":"m.adv=(m.adv+(((m.bass*m.bass)*m.bass)*0.01)); m.x=(0.5-((Math.cos((m.y+m.bass_att))*0.005)*m.treb_att)); m.y=(0.5-(((Math.sin((m.x+(m.bass_att*5)))*0.005)*m.rad)*m.treb_att)); m.x=(m.x+(Math.sin((m.adv*0.5))*0.15)); m.y=(m.y+(Math.cos(m.adv)*0.05)); m.ang=(0.65-(Math.sin((m.adv*0.5))*0.65)); m.rmod=((Math.sin((m.time*0.2))*0.5)+0.5); m.gmod=((Math.sin(((m.time*0.2)+2.1))*0.5)+0.5); m.bmod=((Math.sin(((m.time*0.2)+4.2))*0.5)+0.5); m.r=(0.9+(m.rmod*0.1)); m.g=(0.9+(m.gmod*0.1)); m.b=(0.9+(m.bmod*0.1));"},{"baseVals":{"enabled":0,"sides":5,"additive":0,"thickoutline":1,"textured":0,"x":0.5,"y":0.5,"rad":0.414899,"ang":0,"tex_ang":0.251327,"tex_zoom":1.905855,"r":0,"g":1,"b":1,"a":0.4,"r2":0.7,"g2":0.2,"b2":0.6,"a2":0.1,"border_r":0.5,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.bmod = 0;\nm.gmod = 0;\nm.adv = 0;\nm.rmod = 0;\n\n\t\t\tm.rkeys = ['adv'];","frame_eqs_str":"m.adv=(m.adv+((m.bass*m.bass)*0.03)); m.x=((Math.sin(m.adv)*0.5)+0.5); m.y=((Math.cos(m.adv)*0.5)+0.5); m.r=m.bass_att; m.r2=m.bass_att; m.rmod=((Math.sin((m.time*0.2))*0.5)+0.5); m.gmod=((Math.sin(((m.time*0.2)+2.1))*0.5)+0.5); m.bmod=((Math.sin(((m.time*0.2)+4.2))*0.5)+0.5); m.b2=(0.2+(m.rmod*0.7)); m.r2=(0.2+(m.gmod*0.7)); m.g2=(0.2+(m.bmod*0.7));"},{"baseVals":{"enabled":0,"sides":24,"additive":0,"thickoutline":0,"textured":1,"x":0.2,"y":0.8,"rad":0.599577,"ang":0,"tex_ang":1.256637,"tex_zoom":0.498314,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":3,"additive":0,"thickoutline":0,"textured":1,"x":0.5,"y":0.5,"rad":1.468144,"ang":0.753982,"tex_ang":0.753982,"tex_zoom":0.698924,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0.3,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rmod = 0;\nm.gmod = 0;\nm.bmod = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.rmod=((Math.sin((m.time*0.2))*0.5)+0.5); m.rmod=(m.rmod*m.rmod); m.gmod=((Math.sin(((m.time*0.2)+2.1))*0.5)+0.5); m.gmod=(m.gmod*m.gmod); m.bmod=((Math.sin(((m.time*0.2)+4.2))*0.5)+0.5); m.bmod=(m.bmod*m.bmod); m.r2=(0.8+(m.rmod*0.2)); m.g2=(0.8+(m.gmod*0.2)); m.b2=(0.8+(m.bmod*0.2));"}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":256,"spectrum":0,"usedots":0,"thick":1,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7,"b":1,"a":1},"init_eqs_str":"m.xp = 0;\nm.yp = 0;\nm.t1 = 0;\nm.scale = 0;\nm.bmod = 0;\nm.t3 = 0;\nm.gmod = 0;\nm.scale2 = 0;\nm.adv = 0;\nm.t2 = 0;\nm.rmod = 0;\nm.waver = 0;\nm.adv=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.adv=(m.adv+((m.bass*m.bass)*0.005)); m.t1=(Math.sin(m.adv)*0.3); m.t2=(Math.cos(m.adv)*0.3); m.t3=m.adv;","point_eqs_str":"m.waver=(Math.sin(((m.sample*6.28)*16))*0.2); m.xp=Math.sin(((m.sample*6.28)+m.waver)); m.yp=Math.cos(((m.sample*6.28)+m.waver)); m.scale=Math.sin((((m.sample*6.28)*3)-(m.t3*3))); m.scale2=((Math.sin((((m.sample*6.28)*5)-(m.t3*2.9)))*0.5)+0.5); m.xp=((m.xp*m.scale)*m.scale2); m.yp=((m.yp*m.scale)*m.scale2); m.x=(((m.xp*0.4)*0.7)+0.5); m.y=(((m.yp*0.5)*0.7)+0.5); m.rmod=((Math.sin((m.time*0.2))*0.5)+0.5); m.rmod=(m.rmod*m.rmod); m.gmod=((Math.sin(((m.time*0.2)+2.1))*0.5)+0.5); m.gmod=(m.gmod*m.gmod); m.bmod=((Math.sin(((m.time*0.2)+4.2))*0.5)+0.5); m.bmod=(m.bmod*m.bmod); m.r=m.rmod; m.g=m.gmod; m.b=m.bmod;"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":1,"scaling":81.954445,"smoothing":1,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.xp = 0;\nm.yp = 0;\nm.t1 = 0;\nm.scale = 0;\nm.bmod = 0;\nm.t3 = 0;\nm.gmod = 0;\nm.scale2 = 0;\nm.adv = 0;\nm.t2 = 0;\nm.rmod = 0;\nm.waver = 0;\nm.adv=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.adv=(m.adv+((m.bass*m.bass)*0.005)); m.t1=(Math.sin(m.adv)*0.3); m.t2=(Math.cos(m.adv)*0.3); m.t3=m.adv;","point_eqs_str":"m.waver=(Math.sin(((m.sample*6.28)*16))*0.2); m.xp=Math.sin(((m.sample*6.28)+m.waver)); m.yp=Math.cos(((m.sample*6.28)+m.waver)); m.scale=Math.sin((((m.sample*6.28)*3)-(m.t3*3))); m.scale2=((Math.sin((((m.sample*6.28)*5)-(m.t3*2.9)))*0.5)+0.5); m.xp=((m.xp*m.scale)*m.scale2); m.yp=((m.yp*m.scale)*m.scale2); m.x=(((-m.xp*0.4)*0.7)+0.5); m.y=(((m.yp*0.5)*0.7)+0.5); m.rmod=((Math.sin((m.time*0.2))*0.5)+0.5); m.rmod=(m.rmod*m.rmod); m.gmod=((Math.sin(((m.time*0.2)+2.1))*0.5)+0.5); m.gmod=(m.gmod*m.gmod); m.bmod=((Math.sin(((m.time*0.2)+4.2))*0.5)+0.5); m.bmod=(m.bmod*m.bmod); m.r=m.rmod; m.g=m.gmod; m.b=m.bmod;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.blue = 0;\nm.red_aim = 0;\nm.q1 = 0;\nm.bass_thresh = 0;\nm.bass_on = 0;\nm.treb_thresh = 0;\nm.treb_on = 0;\nm.green = 0;\nm.red = 0;\nm.q2 = 0;\nm.blue_aim = 0;\nm.swapcolour = 0;\nm.green_aim = 0;","frame_eqs_str":"m.q1=div(((m.bass_att+m.mid_att)+m.treb_att),3); m.q2=(m.time+1000); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.4)*0.95)+1.4))); m.treb_thresh=((above(m.treb_att, m.treb_thresh)*2)+((1-above(m.treb_att, m.treb_thresh))*(((m.treb_thresh-1.5)*0.85)+1.2))); m.bass_on=above(m.bass_thresh, 1.9); m.treb_on=above(m.treb_thresh, 1.9); m.swapcolour=(m.bass_on-m.treb_on); m.red_aim=((equal(m.swapcolour, 1)!=0)?(1):(((equal(m.swapcolour, 0)!=0)?(0.9):(0.7)))); m.green_aim=((equal(m.swapcolour, 1)!=0)?(0.7):(((equal(m.swapcolour, 0)!=0)?(0.3):(0.6)))); m.blue_aim=((equal(m.swapcolour, 1)!=0)?(0):(((equal(m.swapcolour, 0)!=0)?(0.2):(0.8)))); m.red=(m.red+((m.red_aim-m.red)*0.5)); m.green=(m.green+((m.green_aim-m.green)*0.5)); m.blue=(m.blue+((m.blue_aim-m.blue)*0.5)); m.wave_r=m.red; m.wave_g=m.green; m.wave_b=m.blue;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.dy=((-0.1*(m.q1-1))*Math.log((2-Math.abs(((m.y*2)-1.8))))); m.dy=((below(m.dy, 0.02)*m.dy)-0.02); m.dy=(m.dy+(0.01*(Math.sin((((m.x*m.q2)*0.483)+((m.y*m.q2)*1.238)))+Math.sin((((m.x*m.q2)*1.612)+((m.y*m.q2)*0.648))))));","warp":"shader_body\n{\n  vec2 v_1;\n  vec3 ret_2;\n  v_1 = ((normalize(\n    (uv - 0.5)\n  ) * aspect.xy) * (texsize.zw * 3.0));\n  ret_2 = (0.25 * ((\n    (texture (sampler_main, uv).xyz + texture (sampler_main, (uv + (v_1 * 2.5))).xyz)\n   + texture (sampler_main, \n    (uv + (v_1 * 5.5))\n  ).xyz) + texture (sampler_main, (uv + \n    (v_1 * -4.0)\n  )).xyz));\n  ret_2 = (ret_2 - 0.01);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  float ang2_1;\n  ang2_1 = ((ang * 0.1591549) + (time * 0.025));\n  float tmpvar_2;\n  tmpvar_2 = (3.0 + floor((rand_preset.z * 5.95)));\n  ang2_1 = (fract((ang2_1 * tmpvar_2)) / tmpvar_2);\n  ang2_1 = (abs((ang2_1 - \n    (0.5 / tmpvar_2)\n  )) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_1);\n  tmpvar_3.y = sin(ang2_1);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (0.5 + (\n    ((0.4 * (rad * sqrt(\n      dot (texsize.xy, texsize.xy)\n    ))) * tmpvar_3)\n   * texsize.zw))).xyz * 1.333);\n  ret = tmpvar_4.xyz;\n}\n\n"}