{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":1,"echo_orient":1,"additivewave":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":5.996,"warpscale":1.331,"zoomexp":1.01,"zoom":0.99853,"rot":0.002,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_g":0.9,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0.201,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":12.8,"mv_y":9.6,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"rad":0.49138,"r":0,"g":1,"b":1,"r2":0.7,"b2":1,"border_a":0},"init_eqs_str":"m.q5 = 0;\nm.q4 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=(0.5+m.q4); m.y=(0.5+m.q5); m.a=((m.bass_att+m.mid_att)+m.treb_att); m.a=(m.a*0.25); m.a=((m.a*m.a)*1.5); m.r2=(0.5*Math.sin((m.bass*1.31))); m.g2=(0.5*Math.sin((m.bass*1.32))); m.b2=(0.5*Math.sin((m.bass*1.33))); m.r=(m.bass+(1.31*m.time)); m.g=(m.bass+div((1.32*m.time),2)); m.b=(m.bass+div((1.33*m.time),3)); m.rad=Math.sin(m.bass);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.beateven = 0;\nm.xpos = 0;\nm.yamptarg = 0;\nm.ydir = 0;\nm.meanbass_att = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.box = 0;\nm.lastbeat = 0;\nm.beatrate = 0;\nm.mode = 0;\nm.yaccel = 0;\nm.peakbass_att = 0;\nm.xamptarg = 0;\nm.xamp = 0;\nm.xspeed = 0;\nm.bass_effect = 0;\nm.beatcounter = 0;\nm.q4 = 0;\nm.ypos = 0;\nm.xaccel = 0;\nm.volume = 0;\nm.beat = 0;\nm.q2 = 0;\nm.yamp = 0;\nm.q7 = 0;\nm.xdir = 0;\nm.yspeed = 0;\nm.beatcounter=0;","frame_eqs_str":"m.ob_r=(0.21-(0.2*((0.5*Math.sin((m.time*0.701)))+(0.3*Math.cos((m.time*0.438)))))); m.ob_g=(0.5-(0.46*Math.sin((m.time*1.724)))); m.ob_b=(0.65-(0.3*Math.cos((m.time*1.816)))); m.warp=0; m.ib_size=0.025; m.ib_r=(m.ib_r+(0.2*((0.6*Math.sin((m.time*3.034)))+(0.4*Math.cos((m.time*2.14)))))); m.ib_g=(m.ib_g+(0.5*((0.6*Math.sin((m.time*3.147)))+(0.4*Math.cos((m.time*2.015)))))); m.ib_b=(m.ib_b-(0.5*((0.6*Math.sin((m.time*3.431)))+(0.4*Math.cos((m.time*1.842)))))); m.dx=((m.dx+0.001)+Math.abs((0.003*((0.6*Math.sin((m.time*0.234)))+(0.4*Math.cos((m.time*0.437))))))); m.dy=(m.dy+Math.abs((0.003*((0.7*Math.sin((m.time*0.213)))+(0.3*Math.cos((m.time*0.315))))))); m.volume=(0.15*(((((m.bass+m.bass_att)+m.treb)+m.treb_att)+m.mid)+m.mid_att)); m.xamptarg=((equal(mod(m.frame,15), 0)!=0)?(Math.min(((0.5*m.volume)*m.bass_att), 0.5)):(m.xamptarg)); m.xamp=(m.xamp+(0.5*(m.xamptarg-m.xamp))); m.xdir=((above(Math.abs(m.xpos), m.xamp)!=0)?(-sign(m.xpos)):(((below(Math.abs(m.xspeed), 0.1)!=0)?(((2*above(m.xpos, 0))-1)):(m.xdir)))); m.xaccel=(((m.xdir*m.xamp)-m.xpos)-((m.xspeed*0.055)*below(Math.abs(m.xpos), m.xamp))); m.xspeed=(((m.xspeed+(m.xdir*m.xamp))-m.xpos)-((m.xspeed*0.055)*below(Math.abs(m.xpos), m.xamp))); m.xpos=(m.xpos+(0.001*m.xspeed)); m.q2=m.xpos; m.yamptarg=((equal(mod(m.frame,15), 0)!=0)?(Math.min(((0.3*m.volume)*m.treb_att), 0.5)):(m.yamptarg)); m.yamp=(m.yamp+(0.5*(m.yamptarg-m.yamp))); m.ydir=((above(Math.abs(m.ypos), m.yamp)!=0)?(-sign(m.ypos)):(((below(Math.abs(m.yspeed), 0.1)!=0)?(((2*above(m.ypos, 0))-1)):(m.ydir)))); m.yaccel=(((m.ydir*m.yamp)-m.ypos)-((m.yspeed*0.055)*below(Math.abs(m.ypos), m.yamp))); m.yspeed=(((m.yspeed+(m.ydir*m.yamp))-m.ypos)-((m.yspeed*0.055)*below(Math.abs(m.ypos), m.yamp))); m.ypos=(m.ypos+(0.001*m.yspeed)); m.q4=m.ypos; m.bass_effect=Math.max((Math.max(m.bass, m.bass_att)-1.2), 0); m.echo_zoom=((1.32+(0.3*((0.59*Math.sin((m.q4+(m.time*0.865))))+(0.41*Math.cos((m.q2+(m.time*1.192)))))))+(0.05*m.bass_effect)); m.volume=(0.15*(((m.bass_att+m.bass)+m.mid)+m.mid_att)); m.beatrate=((equal(m.beatrate, 0)!=0)?(1):(((below(m.volume, 0.01)!=0)?(1):(m.beatrate)))); m.lastbeat=((equal(m.lastbeat, 0)!=0)?(m.time):(m.lastbeat)); m.meanbass_att=(0.1*((m.meanbass_att*9)+m.bass_att)); m.peakbass_att=((above(m.bass_att, m.peakbass_att)!=0)?(m.bass_att):(m.peakbass_att)); m.beat=((above(m.volume, 0.8)!=0)?(((below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att))!=0)?(((above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))!=0)?(1):(0))):(0))):(0)); m.beatrate=Math.max(((m.beat!=0)?(((below((m.time-m.lastbeat), (2*m.beatrate))!=0)?((0.1*(((m.beatrate*9)+m.time)-m.lastbeat))):(m.beatrate))):(m.beatrate)), 0.1); m.peakbass_att=((equal(m.beat, 0)!=0)?(((above((m.time-m.lastbeat), (2*m.beatrate))!=0)?((m.peakbass_att*0.95)):((m.peakbass_att*0.995)))):(m.bass_att)); m.lastbeat=((m.beat!=0)?(m.time):(m.lastbeat)); m.peakbass_att=Math.max(((m.beat!=0)?(m.bass_att):(m.peakbass_att)), (1.1*m.meanbass_att)); m.beatcounter=((above(m.beat, 0)!=0)?((m.beatcounter+1)):(m.beatcounter)); m.beatcounter=((above(m.beatcounter, 7)!=0)?(0):(m.beatcounter)); m.beateven=mod(m.beatcounter,2); m.mode=((m.beat!=0)?(mod(((m.mode+rand(3))+1),4)):(m.mode)); m.echo_orient=m.mode; m.wave_a=((m.beat!=0)?(1):(0)); m.wave_r=((m.wave_r+(0.2*Math.sin((m.time*0.7854))))-(0.2*m.beateven)); m.wave_b=((m.wave_b+(0.1*Math.sin((m.time*0.8254))))+(0.2*m.beateven)); m.wave_g=((m.wave_g+(0.1*Math.sin((m.time*0.854))))+(0.2*m.beateven)); m.q6=m.beat; m.wave_mode=((m.beateven!=0)?(7):(0)); m.mv_a=((m.beat!=0)?(((equal(m.beatcounter, 6)!=0)?(1):(0))):(0)); m.mv_r=((m.mv_a!=0)?(rand(2)):(0)); m.mv_b=((m.mv_a!=0)?(rand(2)):(0)); m.mv_g=((m.mv_a!=0)?(rand(2)):(0));\n\t\tm.rkeys = ['cy','zoom','sx','sy','rot','cx'];","pixel_eqs_str":"m.box=(0.5+(0.8*(mod((2*m.x),4)+mod((2*m.y),2)))); m.q1=(8.45+(0.3*(Math.sin((pow(m.x, 3)+(0.177*m.time)))-Math.cos((pow(m.y, 3)+(0.223*m.time)))))); m.q7=above(m.box, 1); m.zoom=((m.q7!=0)?(((m.q1*0.1)+(m.q6*6))):(m.zoom)); m.rot=((m.q7!=0)?((0.63*Math.sin((((((0.385*m.time)+(0.12*Math.sin((0.67*m.time))))+(0.1*m.q4))+(0.12*m.q2))+(m.q6*50))))):(m.rot)); m.cx=(m.cx-(0.15*Math.sin((2*m.q4)))); m.cy=(m.cy+(0.14*Math.sin((2*m.q2)))); m.sx=((m.q7!=0)?((m.sx+(m.q6*18))):(m.sx)); m.sy=((m.q7!=0)?((m.sy+(m.q6*18))):(m.sy));","warp":"vec3 xlat_mutablemus;\nshader_body\n{\n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1.x = tmpvar_2.x;\n  ret_1.yz = (tmpvar_2.x * vec2(0.9, 0.7));\n  ret_1 = (pow (ret_1, vec3(1.7, 2.0, 2.2)) * 5.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n"}