{"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_thick":1,"wrap":0,"darken":1,"wave_a":0.004,"wave_scale":9.731,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_y":0.04,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":50,"rad":0.16283,"tex_zoom":0.73458,"a":0,"r2":0.2,"g2":0,"b2":1,"border_a":1},"init_eqs_str":"m.bending = 0;\nm.ppo = 0;\nm.index = 0;\nm.q1 = 0;\nm.i3 = 0;\nm.dir = 0;\nm.i4 = 0;\nm.size = 0;\nm.q32 = 0;\nm.sample = 0;\nm.i3=0; m.i4=0;\n\t\t\tm.rkeys = ['i3','i4'];","frame_eqs_str":"m.i3=((equal(m.instance, 0)!=0)?(0):(m.i3)); m.i4=((equal(m.instance, 0)!=0)?(0):(m.i4)); m.ppo=1; m.index=(m.i4*m.q32); m.sample=mod(m.i3,m.ppo); m.size=m.gmegabuf[(m.index+4)]; m.x=m.gmegabuf[m.index]; m.y=m.gmegabuf[(m.index+1)]; m.ang=m.gmegabuf[(m.index+9)]; m.rad=(m.size*0.05); m.sample=div(m.sample,m.ppo); m.bending=((m.gmegabuf[(m.index+12)]*5)+(m.gmegabuf[(m.index+10)]*5)); m.dir=(-m.ang+((m.sample-0.4)*m.bending)); m.ang=(((Math.asin(1)*1.5)-m.dir)+(m.bending*0.05)); m.x=(m.x+(((((m.sample-0.3)*0.06)*Math.cos(m.dir))*m.size)+(((Math.sin(m.dir)*m.size)*m.bending)*0.01))); m.y=(m.y+(((((m.sample-0.3)*0.06)*Math.sin(m.dir))*m.size)-(((Math.cos(m.dir)*m.size)*m.bending)*0.01))); m.x=(0.5+((m.x-0.5)*m.q1)); m.rad=(m.size*3); m.i3=(m.i3+1); m.i4=((equal(mod(m.i3,m.ppo), 0)!=0)?((m.i4+1)):(m.i4));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":452,"thick":1,"additive":1,"scaling":2.44415,"smoothing":0,"r":0.15,"g":0,"b":0.05,"a":0.25},"init_eqs_str":"m.ppo = 0;\nm.index = 0;\nm.t1 = 0;\nm.q1 = 0;\nm.nnindex = 0;\nm.nnnx = 0;\nm.nny = 0;\nm.nindex = 0;\nm.nnnindex = 0;\nm.t2 = 0;\nm.nnx = 0;\nm.ny = 0;\nm.q32 = 0;\nm.nx = 0;\nm.nnny = 0;\nm.q30 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['t1','a','t2'];","frame_eqs_str":"m.t1=0; m.t2=0;","point_eqs_str":"m.ppo=9; m.index=(m.t2*m.q32); m.sample=mod(m.t1,m.ppo); m.nindex=m.gmegabuf[(m.index+m.q30)]; m.nnindex=m.gmegabuf[((m.index+m.q30)+1)]; m.nnnindex=m.gmegabuf[((m.index+m.q30)+2)]; m.x=m.gmegabuf[m.index]; m.y=m.gmegabuf[(m.index+1)]; m.nx=m.gmegabuf[m.nindex]; m.ny=m.gmegabuf[(m.nindex+1)]; m.nnx=m.gmegabuf[m.nnindex]; m.nny=m.gmegabuf[(m.nnindex+1)]; m.nnnx=m.gmegabuf[m.nnnindex]; m.nnny=m.gmegabuf[(m.nnnindex+1)]; m.x=(0.5+((m.x-0.5)*m.q1)); m.y=(0.5+((m.y-0.5)*m.q1)); m.nx=(0.5+((m.nx-0.5)*m.q1)); m.ny=(0.5+((m.ny-0.5)*m.q1)); m.nnx=(0.5+((m.nnx-0.5)*m.q1)); m.nny=(0.5+((m.nny-0.5)*m.q1)); m.nnnx=(0.5+((m.nnnx-0.5)*m.q1)); m.nnny=(0.5+((m.nnny-0.5)*m.q1)); m.x=((equal(m.sample, 2)!=0)?(m.nx):(m.x)); m.y=((equal(m.sample, 2)!=0)?(m.ny):(m.y)); m.x=((equal(m.sample, 4)!=0)?(m.nnx):(m.x)); m.y=((equal(m.sample, 4)!=0)?(m.nny):(m.y)); m.x=((equal(m.sample, 6)!=0)?(m.nnnx):(m.x)); m.y=((equal(m.sample, 6)!=0)?(m.nnny):(m.y)); m.a=((above(m.sample, 1)*below(m.sample, (m.ppo-1)))*m.a); m.t1=(m.t1+1); m.t2=((equal(mod(m.t1,m.ppo), 0)!=0)?((m.t2+1)):(m.t2));"},{"baseVals":{"enabled":1,"samples":65,"spectrum":1,"usedots":1,"scaling":0.33408,"smoothing":0},"init_eqs_str":"m.d = 0;\nm.q32 = 0;\nm.t8 = 0;\nm.t1 = 0;\nm.t2 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t8=1; m.t1=0.5; m.t2=0.9;","point_eqs_str":"m.d=0; m.y=(0.2+((m.value1+m.value2)*0.5)); m.x=(0.9-(m.sample*0.8)); m.gmegabuf[((((m.sample*128)-1)*m.q32)+14)]=(m.value1+m.value2);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.fric = 0;\nm.d = 0;\nm.n = 0;\nm.int = 0;\nm.reg26 = 0;\nm.nliststart = 0;\nm.w = 0;\nm.random = 0;\nm.awayx2 = 0;\nm.uvx0 = 0;\nm.index2 = 0;\nm.reg34 = 0;\nm.reg28 = 0;\nm.reg23 = 0;\nm.q25 = 0;\nm.angchg = 0;\nm.reg20 = 0;\nm.reg15 = 0;\nm.reg10 = 0;\nm.awayx3 = 0;\nm.index = 0;\nm.q12 = 0;\nm.w2 = 0;\nm.rotatefactor = 0;\nm.ref_ang = 0;\nm.v3 = 0;\nm.smaller = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.diry = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.posx = 0;\nm.fps_ = 0;\nm.dt = 0;\nm.reg25 = 0;\nm.uvx = 0;\nm.q1 = 0;\nm.travel = 0;\nm.posz = 0;\nm.q5 = 0;\nm.j = 0;\nm.awayy3 = 0;\nm.q9 = 0;\nm.dirz = 0;\nm.social3 = 0;\nm.dec_s = 0;\nm.reg16 = 0;\nm.v = 0;\nm.reg36 = 0;\nm.reg22 = 0;\nm.uvy = 0;\nm.count = 0;\nm.rotz = 0;\nm.nearest2 = 0;\nm.dist_ = 0;\nm.is_beat = 0;\nm.shock = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.reg24 = 0;\nm.social2 = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.awayy1 = 0;\nm.q10 = 0;\nm.reg14 = 0;\nm.nn = 0;\nm.vrr = 0;\nm.posy = 0;\nm.check = 0;\nm.gravity = 0;\nm.nearest3 = 0;\nm.reg31 = 0;\nm.vr2 = 0;\nm.dirx = 0;\nm.direction = 0;\nm.dec_m = 0;\nm.q4 = 0;\nm.awayy2 = 0;\nm.start = 0;\nm.bouncefactor = 0;\nm.reg12 = 0;\nm.smallestfind = 0;\nm.reg13 = 0;\nm.distance = 0;\nm.c2 = 0;\nm.sqrt = 0;\nm.reg37 = 0;\nm.bounce = 0;\nm.s3 = 0;\nm.yslope = 0;\nm.q16 = 0;\nm.xslope = 0;\nm.q26 = 0;\nm.vr = 0;\nm.reg38 = 0;\nm.vv1 = 0;\nm.vv2 = 0;\nm.vrr2 = 0;\nm.reg35 = 0;\nm.w1 = 0;\nm.reg11 = 0;\nm.attributes = 0;\nm.tx = 0;\nm.avg = 0;\nm.i = 0;\nm.uvz = 0;\nm.rota = 0;\nm.c3 = 0;\nm.uvy0 = 0;\nm.m2 = 0;\nm.hit = 0;\nm.reg27 = 0;\nm.beat = 0;\nm.vol = 0;\nm.awayx1 = 0;\nm.reg32 = 0;\nm.nearest1 = 0;\nm.reg21 = 0;\nm.peak = 0;\nm.uvz0 = 0;\nm.len = 0;\nm.nearest = 0;\nm.reg18 = 0;\nm.reg30 = 0;\nm.q27 = 0;\nm.slen = 0;\nm.m1 = 0;\nm.q14 = 0;\nm.dist = 0;\nm.h = 0;\nm.reg17 = 0;\nm.v1 = 0;\nm.s1 = 0;\nm.vz1 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.s2 = 0;\nm.ran1 = 0;\nm.acceleration = 0;\nm.findindex = 0;\nm.reg33 = 0;\nm.friction = 0;\nm.q7 = 0;\nm.ds = 0;\nm.social1 = 0;\nm.q28 = 0;\nm.pi2 = 0;\nm.ty = 0;\nm.sample = 0;\nm.c1 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.dampening = 0;\nm.avg=0.01; m.q7=0.4; m.q8=(rand(2.0)-1.0); m.q16=1; m.q18=(rand(0.8)+0.1); m.q31=128; m.start=1; m.travel=0; m.rotz=0; m.look=0; m.slow=0; m.t0=(m.time+3); m.lampx=0.5; m.lampy=0.5; m.cran0=rand(1); m.n=0; for(var mdparser_idx1=0;mdparser_idx1<10000;mdparser_idx1++){m.gmegabuf[m.n]=0; m.n=(m.n+1);} m.n=0; for(var mdparser_idx2=0;mdparser_idx2<10000;mdparser_idx2++){m.megabuf[m.n]=0; m.n=(m.n+1);} m.trelx=0; m.trely=0; m.trelz=0; m.reg20=1; m.reg21=0; m.reg22=0; m.reg23=0; m.reg24=1; m.reg25=0; m.reg26=0; m.reg27=0; m.reg28=1; m.ran1=div(rand(800),100); m.ran2=div(rand(800),100); m.ran3=div(rand(800),100); m.posx=(rand(5)-2); m.posy=(rand(5)-2); m.posz=(rand(5)-2); m.c1=Math.cos(m.ran1); m.c2=Math.cos(m.ran2); m.c3=Math.cos(m.ran3); m.s1=Math.sin(m.ran1); m.s2=Math.sin(m.ran2); m.s3=Math.sin(m.ran3); m.reg20=(m.c2*m.c1); m.reg21=(m.c2*m.s1); m.reg22=-m.s2; m.reg23=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg24=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg25=(m.s3*m.c2); m.reg26=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg27=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg28=(m.c3*m.c2); m.rota=0; m.count=0; m.i=0; for(var mdparser_idx3=0;mdparser_idx3<(1024*1024);mdparser_idx3++){m.gmegabuf[m.i]=0; m.i=(m.i+1);} m.count=50; m.attributes=32; m.nliststart=24; m.minradius=0.01; m.maxradius=0.05; m.v=0.0; m.index=0; for(var mdparser_idx4=0;mdparser_idx4<100;mdparser_idx4++){m.gmegabuf[(m.index*m.attributes)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+1)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+2)]=(m.v*(div(rand(1000),1000)-0.5)); m.gmegabuf[((m.index*m.attributes)+3)]=(m.v*(div(rand(1000),1000)-0.5)); m.gmegabuf[((m.index*m.attributes)+4)]=(m.minradius+div(((m.maxradius-m.minradius)*(m.index+1)),m.count)); m.gmegabuf[((m.index*m.attributes)+5)]=0; m.gmegabuf[((m.index*m.attributes)+6)]=1; m.gmegabuf[((m.index*m.attributes)+7)]=0; m.gmegabuf[((m.index*m.attributes)+8)]=pow(m.gmegabuf[((m.index*m.attributes)+4)], 3); m.gmegabuf[((m.index*m.attributes)+9)]=div(((4*Math.asin(1))*rand(1000)),1000); m.gmegabuf[((m.index*m.attributes)+10)]=0; m.gmegabuf[((m.index*m.attributes)+13)]=div(m.index,(m.count-1)); m.gmegabuf[((m.index*m.attributes)+14)]=0; m.index=(m.index+1);} m.q30=m.nliststart; m.q31=m.count; m.q32=m.attributes; m.q29=((m.count-1)*m.attributes); m.q28=Math.asin(1);","frame_eqs_str":"m.wave_a=0; m.warp=0; m.zoom=1; m.fps_=((0.0*m.fps_)+(1*((((m.fps<=25)?1:0)!=0)?(m.fps):((25+(0.5*(m.fps-25))))))); m.fps_=m.fps; m.dec_m=pow(0.7, div(30,m.fps)); m.dec_s=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_s)+(m.beat*(1-m.dec_s))); m.is_beat=(above(m.beat, ((2*m.avg)+(2*m.peak)))*above(m.time, (m.t0+-0.3))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_m)); m.index=mod((m.index+m.is_beat),4); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.wave_a=((m.index2<5)?1:0); m.rota=((m.rota*m.dec_m)+(((1-m.dec_m)*m.index2)*3.14)); m.q9=0; m.vol=((m.bass+m.mid)+m.treb); m.vol*=(m.vol*m.vol); m.dec_m=0.3; m.vol_=((m.dec_m*m.vol_)+((1-m.dec_m)*m.vol)); m.ds=(div(above(m.vol, (m.vol_*1.35)),8)*pow(m.vol, 0.25)); m.dirx=m.reg26; m.diry=m.reg27; m.dirz=m.reg28; m.posx=(m.posx+(m.ds*m.dirx)); m.posy=(m.posy+(m.ds*m.diry)); m.posz=(m.posz+(m.ds*m.dirz)); m.q4=m.posx; m.q5=m.posy; m.q6=m.posz; m.angchg=((0.3-m.dist_)*((m.dist_<0.3)?1:0)); m.travel=((((m.angchg>0)?1:0)!=0)?(0):((m.travel+m.ds))); m.v1=((m.v1*m.dec_s)+div((((1-m.dec_s)*m.rotz)*m.ds),4)); m.v2=((m.v2*m.dec_s)+div(div((((1-m.dec_s)*m.angchg)*m.xslope),m.fps_),3)); m.v3=((m.v3*m.dec_s)+((1-m.dec_s)*div(div((m.angchg*m.yslope),m.fps_),3))); m.v1=0; m.v2=0; m.v3=0; m.v1=0; m.reg30=m.reg20; m.reg31=m.reg21; m.reg32=m.reg22; m.reg33=m.reg23; m.reg34=m.reg24; m.reg35=m.reg25; m.reg36=m.reg26; m.reg37=m.reg27; m.reg38=m.reg28; m.n=4; m.avg=0; for(var mdparser_idx5=0;mdparser_idx5<1;mdparser_idx5++){m.n=(m.n+1); m.ran1=div(rand(100),100); m.ran2=(div(rand(100),200)-0.25); m.tx=((Math.cos(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.ty=((Math.sin(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.c1=Math.cos(m.v1); m.c2=Math.cos((m.v2+m.ty)); m.c3=Math.cos((m.v3+m.tx)); m.s1=Math.sin(m.v1); m.s2=Math.sin((m.v2+m.ty)); m.s3=Math.sin((m.v3+m.tx)); m.reg10=(m.c2*m.c1); m.reg11=(m.c2*m.s1); m.reg12=-m.s2; m.reg13=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg14=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg15=(m.s3*m.c2); m.reg16=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg17=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg18=(m.c3*m.c2); m.reg20=m.reg30; m.reg21=m.reg31; m.reg22=m.reg32; m.reg23=m.reg33; m.reg24=m.reg34; m.reg25=m.reg35; m.reg26=m.reg36; m.reg27=m.reg37; m.reg28=m.reg38; m.q20=(((m.reg10*m.reg20)+(m.reg11*m.reg23))+(m.reg12*m.reg26)); m.q21=(((m.reg10*m.reg21)+(m.reg11*m.reg24))+(m.reg12*m.reg27)); m.q22=(((m.reg10*m.reg22)+(m.reg11*m.reg25))+(m.reg12*m.reg28)); m.q23=(((m.reg13*m.reg20)+(m.reg14*m.reg23))+(m.reg15*m.reg26)); m.q24=(((m.reg13*m.reg21)+(m.reg14*m.reg24))+(m.reg15*m.reg27)); m.q25=(((m.reg13*m.reg22)+(m.reg14*m.reg25))+(m.reg15*m.reg28)); m.q26=(((m.reg16*m.reg20)+(m.reg17*m.reg23))+(m.reg18*m.reg26)); m.q27=(((m.reg16*m.reg21)+(m.reg17*m.reg24))+(m.reg18*m.reg27)); m.q28=(((m.reg16*m.reg22)+(m.reg17*m.reg25))+(m.reg18*m.reg28)); m.reg20=m.q20; m.reg21=m.q21; m.reg22=m.q22; m.reg23=m.q23; m.reg24=m.q24; m.reg25=m.q25; m.reg26=m.q26; m.reg27=m.q27; m.reg28=m.q28; m.dist=0.002; (function(){var mdparser_idx6;var mdparser_count7=0;do{mdparser_count7+=1;mdparser_idx6=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx8=0;mdparser_idx8<(7+1);mdparser_idx8++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.5; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx6!==0&&mdparser_count7<1048576);}()); m.megabuf[m.n]=((m.megabuf[m.n]*m.dec_s)+((1-m.dec_s)*m.dist)); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.n=0; m.avg=0; for(var mdparser_idx9=0;mdparser_idx9<5;mdparser_idx9++){m.n=(m.n+1); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.dist_=((m.dist_*m.dec_s)+((1-m.dec_s)*m.dist)); m.q10=(m.ds*m.q7); m.q14=((((1*Math.abs(m.ds))+(2*((Math.abs(m.v1)+Math.abs(m.v2))+Math.abs(m.v3))))+div(1.0,255))+(m.start*0.05)); m.start=(m.start*0.9); m.vz1=(m.vz1+m.v1); m.q11=m.vz1; m.q12=m.v2; m.q13=m.v3; m.warp=0.0; m.zoom=1; m.dx=div(-m.v2,m.q16); m.dy=div(m.v3,m.q16); m.rot=m.v1; m.q1=div(1,m.aspecty); m.dt=div(1.5,m.fps); m.warp=0; m.zoom=1; m.wave_a=0; m.gravity=(0.001*m.dt); m.dampening=0; m.friction=(512*m.dt); m.shock=0.01; m.pi2=Math.asin(1); m.nn=3; m.check=2; m.bouncefactor=0.1; m.rotatefactor=0; m.social1=0.0; m.social2=0.0; m.social3=0.0; m.h=((m.aspecty-1)*0.5); m.w=((m.aspectx-1)*0.5); m.index=0; m.index2=0; for(var mdparser_idx10=0;mdparser_idx10<50;mdparser_idx10++){m.random=div(rand(1000),1000); m.sample=m.gmegabuf[(m.index+13)]; m.gmegabuf[(m.index+11)]=(((m.gmegabuf[(m.index+11)]*0.92)-((4*m.gmegabuf[(m.index+12)])*m.dt))+(((2*(m.random-0.5))*m.dt)*m.gmegabuf[(m.index+14)])); m.gmegabuf[(m.index+12)]+=((60*m.gmegabuf[(m.index+11)])*m.dt); m.v=sqrt((sqr(m.gmegabuf[(m.index+2)])+sqr(m.gmegabuf[(m.index+3)]))); m.fric=Math.max(0, ((1-sqr((m.v*m.friction)))-(m.v*2))); m.gmegabuf[(m.index+2)]*=m.fric; m.gmegabuf[(m.index+3)]*=m.fric; m.gmegabuf[(m.index+10)]=((m.gmegabuf[(m.index+10)]*m.fric)+(m.v*m.gmegabuf[(m.index+12)])); m.acceleration=((m.random*0.000)+(Math.abs(m.gmegabuf[(m.index+11)])*0.003)); m.direction=(m.gmegabuf[(m.index+9)]-m.pi2); m.gmegabuf[(m.index+2)]+=(Math.sin(m.direction)*m.acceleration); m.gmegabuf[(m.index+3)]+=(Math.cos(m.direction)*m.acceleration); m.gmegabuf[m.index]=(m.gmegabuf[m.index]+((m.gmegabuf[(m.index+2)]*60)*m.dt)); m.gmegabuf[(m.index+1)]=(m.gmegabuf[(m.index+1)]+((m.gmegabuf[(m.index+3)]*60)*m.dt)); m.gmegabuf[(m.index+9)]=(m.gmegabuf[(m.index+9)]+(m.gmegabuf[(m.index+10)]*0.5)); m.gmegabuf[(m.index+3)]=(m.gmegabuf[(m.index+3)]-m.gravity); m.vr=(Math.sin(m.gmegabuf[(m.index+10)])*m.gmegabuf[(m.index+4)]); m.bounce=above(m.gmegabuf[(m.index+1)], ((1-m.gmegabuf[(m.index+4)])+m.w)); m.gmegabuf[(m.index+2)]=((m.bounce!=0)?((m.gmegabuf[(m.index+2)]+((m.vr+m.gmegabuf[(m.index+2)])*m.rotatefactor))):(m.gmegabuf[(m.index+2)])); m.gmegabuf[(m.index+3)]=((m.bounce!=0)?(((-Math.abs(m.gmegabuf[(m.index+3)])*m.dampening)-m.shock)):(m.gmegabuf[(m.index+3)])); m.vr=((m.bounce!=0)?((m.vr-((m.gmegabuf[(m.index+2)]+m.vr)*(1-m.rotatefactor)))):(m.vr)); m.bounce=below(m.gmegabuf[(m.index+1)], (m.gmegabuf[(m.index+4)]-m.w)); m.gmegabuf[(m.index+2)]=((m.bounce!=0)?((m.gmegabuf[(m.index+2)]+((m.vr-m.gmegabuf[(m.index+2)])*m.rotatefactor))):(m.gmegabuf[(m.index+2)])); m.gmegabuf[(m.index+3)]=((m.bounce!=0)?(((Math.abs(m.gmegabuf[(m.index+3)])*m.dampening)+m.shock)):(m.gmegabuf[(m.index+3)])); m.vr=((m.bounce!=0)?((m.vr+((m.gmegabuf[(m.index+2)]-m.vr)*(1-m.rotatefactor)))):(m.vr)); m.bounce=above(m.gmegabuf[m.index], ((1-m.gmegabuf[(m.index+4)])+m.h)); m.gmegabuf[(m.index+2)]=((m.bounce!=0)?(((-Math.abs(m.gmegabuf[(m.index+2)])*m.dampening)-m.shock)):(m.gmegabuf[(m.index+2)])); m.gmegabuf[(m.index+3)]=((m.bounce!=0)?((m.gmegabuf[(m.index+3)]+((m.vr-m.gmegabuf[(m.index+3)])*m.rotatefactor))):(m.gmegabuf[(m.index+3)])); m.vr=((m.bounce!=0)?((m.vr+((m.gmegabuf[(m.index+3)]-m.vr)*(1-m.rotatefactor)))):(m.vr)); m.bounce=below(m.gmegabuf[m.index], (m.gmegabuf[(m.index+4)]-m.h)); m.gmegabuf[(m.index+2)]=((m.bounce!=0)?(((Math.abs(m.gmegabuf[(m.index+2)])*m.dampening)+m.shock)):(m.gmegabuf[(m.index+2)])); m.gmegabuf[(m.index+3)]=((m.bounce!=0)?((m.gmegabuf[(m.index+3)]-((m.vr+m.gmegabuf[(m.index+3)])*m.rotatefactor))):(m.gmegabuf[(m.index+3)])); m.vr=((m.bounce!=0)?((m.vr-((m.gmegabuf[(m.index+3)]+m.vr)*(1-m.rotatefactor)))):(m.vr)); m.gmegabuf[(m.index+10)]=Math.asin(div(m.vr,m.gmegabuf[(m.index+4)])); m.i=0; m.j=0; for(var mdparser_idx11=0;mdparser_idx11<50;mdparser_idx11++){m.d=sqrt((sqr((m.gmegabuf[m.index]-m.gmegabuf[m.i]))+sqr((m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.i+1)])))); m.d=((equal(m.d, 0)!=0)?(10):(m.d)); m.d=(m.d-((m.gmegabuf[(m.index+4)]+m.gmegabuf[(m.i+4)])*0.5)); m.megabuf[m.j]=m.i; m.megabuf[(m.j+1)]=m.d; m.j=(m.j+2); m.i=(m.i+m.attributes);} m.i=0; for(var mdparser_idx12=0;mdparser_idx12<m.nn;mdparser_idx12++){m.j=m.i; m.smallestfind=100; m.findindex=-1; for(var mdparser_idx13=0;mdparser_idx13<(m.count-m.j);mdparser_idx13++){m.distance=m.megabuf[((m.j*2)+1)]; m.smaller=above(m.smallestfind, m.distance); m.smallestfind=((m.smaller!=0)?(m.distance):(m.smallestfind)); m.findindex=((m.smaller!=0)?((m.j*2)):(m.findindex)); m.j=(m.j+1);} m.j=m.megabuf[(m.i*2)]; m.d=m.megabuf[((m.i*2)+1)]; m.megabuf[(m.i*2)]=m.megabuf[m.findindex]; m.megabuf[((m.i*2)+1)]=m.megabuf[(m.findindex+1)]; m.megabuf[m.findindex]=m.j; m.megabuf[(m.findindex+1)]=m.d; m.i=(m.i+1);} m.i=0; for(var mdparser_idx14=0;mdparser_idx14<m.nn;mdparser_idx14++){m.gmegabuf[((m.index+m.nliststart)+m.i)]=m.megabuf[(m.i*2)]; m.i=(m.i+1);} m.nearest1=m.gmegabuf[((m.index+m.nliststart)+0)]; m.nearest2=m.gmegabuf[((m.index+m.nliststart)+1)]; m.nearest3=m.gmegabuf[((m.index+m.nliststart)+2)]; m.awayx1=(m.gmegabuf[m.index]-m.gmegabuf[(m.nearest+1)]); m.awayy1=(m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.nearest+1)]); m.awayx2=(m.gmegabuf[m.index]-m.gmegabuf[m.nearest2]); m.awayy2=(m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.nearest2+1)]); m.awayx3=(m.gmegabuf[m.index]-m.gmegabuf[m.nearest3]); m.awayy3=(m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.nearest3+1)]); m.gmegabuf[(m.index+2)]=(m.gmegabuf[(m.index+2)]-(m.dt*(((m.awayx1*m.social1)+(m.awayx2*m.social2))+(m.awayx3*m.social3)))); m.gmegabuf[(m.index+3)]=(m.gmegabuf[(m.index+3)]-(m.dt*(((m.awayy1*m.social1)+(m.awayy2*m.social2))+(m.awayy3*m.social3)))); m.i=0; for(var mdparser_idx15=0;mdparser_idx15<m.check;mdparser_idx15++){m.index2=m.megabuf[m.i]; m.hit=(below(sqrt((sqr((m.gmegabuf[m.index]-m.gmegabuf[m.index2]))+sqr((m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.index2+1)])))), (m.gmegabuf[(m.index+4)]+m.gmegabuf[(m.index2+4)]))*above(sqrt((sqr((m.gmegabuf[m.index]-m.gmegabuf[m.index2]))+sqr((m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.index2+1)])))), sqrt((sqr((((m.gmegabuf[(m.index+0)]-m.gmegabuf[(m.index2+0)])+m.gmegabuf[(m.index+2)])-m.gmegabuf[(m.index2+2)]))+sqr((((m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.index2+1)])+m.gmegabuf[(m.index+3)])-m.gmegabuf[(m.index2+3)])))))); m.ref_ang=(Math.atan2((m.gmegabuf[m.index2]-m.gmegabuf[m.index]), (m.gmegabuf[(m.index2+1)]-m.gmegabuf[(m.index+1)]))+m.pi2); m.v1=sqrt((sqr(m.gmegabuf[(m.index+2)])+sqr(m.gmegabuf[(m.index+3)]))); m.v2=sqrt((sqr(m.gmegabuf[(m.index2+2)])+sqr(m.gmegabuf[(m.index2+3)]))); m.w1=Math.atan2(m.gmegabuf[(m.index+2)], m.gmegabuf[(m.index+3)]); m.w2=Math.atan2(m.gmegabuf[(m.index2+2)], m.gmegabuf[(m.index2+3)]); m.vr2=(Math.sin(m.gmegabuf[(m.index2+10)])*m.gmegabuf[(m.index2+4)]); m.m1=m.gmegabuf[(m.index+8)]; m.m2=m.gmegabuf[(m.index2+8)]; m.vv1=div((((m.m1-m.m2)*m.v1)+((2*m.m2)*m.v2)),(m.m1+m.m2)); m.vv2=div((((m.m2-m.m1)*m.v2)+((2*m.m1)*m.v1)),(m.m1+m.m2)); m.vrr=div((((m.m1-m.m2)*m.vr)+((2*m.m2)*m.vr2)),(m.m1+m.m2)); m.vrr2=div((((m.m2-m.m1)*m.vr2)+((2*m.m1)*m.vr)),(m.m1+m.m2)); m.gmegabuf[(m.index+2)]=((m.hit!=0)?(((((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.vr2)-((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.cos(m.ref_ang)*m.vv1)*Math.sin((m.w2-m.ref_ang))))):(m.gmegabuf[(m.index+2)])); m.gmegabuf[(m.index+3)]=((m.hit!=0)?(((((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.vr2)-((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))-((Math.sin(m.ref_ang)*m.vv1)*Math.sin((m.w2-m.ref_ang))))):(m.gmegabuf[(m.index+3)])); m.gmegabuf[(m.index2+2)]=((m.hit!=0)?(((((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.vr2-m.vr)-((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.cos(m.ref_ang)*m.vv2)*Math.sin((m.w1-m.ref_ang))))):(m.gmegabuf[(m.index2+2)])); m.gmegabuf[(m.index2+3)]=((m.hit!=0)?(((((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.vr2-m.vr)-((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))-((Math.sin(m.ref_ang)*m.vv2)*Math.sin((m.w1-m.ref_ang))))):(m.gmegabuf[(m.index2+3)])); m.vr=((m.hit!=0)?((m.vr+((Math.cos((m.w1-m.ref_ang))*(m.v1-m.v2))-m.vr))):(m.vr)); m.gmegabuf[(m.index+10)]=Math.asin(div(m.vr,m.gmegabuf[(m.index+4)])); m.vr2=((m.hit!=0)?((m.vr2+((Math.cos((m.w2-m.ref_ang))*(m.v2-m.v1))-m.vr2))):(m.vr2)); m.gmegabuf[(m.index2+10)]=Math.asin(div(m.vr2,m.gmegabuf[(m.index2+4)])); m.i=(m.i+2);} m.index=(m.index+m.attributes);} m.wave_a=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablelen;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutablelen = len;\n  xlat_mutablestruc = struc;\n  xlat_mutableuv2 = uv2;\n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.96 - q10);\n  vec2 uv_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - 0.5);\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pc_main, uv);\n  uv_3 = ((tmpvar_5 * (1.0 - \n    (q10 / (1.0 - (tmpvar_6.z + (0.003921569 * tmpvar_6.y))))\n  )) + 0.5);\n  vec4 tmpvar_7;\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  xlat_mutabledist = tmpvar_7.x;\n  if ((tmpvar_7.y > 0.2)) {\n    vec3 tmpvar_8;\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.5, 0.5, 0.5));\n    vec2 pix_9;\n    vec4 nb2_10;\n    vec4 nb_11;\n    vec2 x_12;\n    x_12 = (uv_3 - 0.5);\n    pix_9 = (texsize.zw * (1.0 + (\n      sqrt(dot (x_12, x_12))\n     * 2.0)));\n    vec4 tmpvar_13;\n    tmpvar_13 = texture (sampler_pc_main, (uv_3 - pix_9));\n    nb_11.x = (1.0 - (tmpvar_13.z + (0.003921569 * tmpvar_13.y)));\n    vec4 tmpvar_14;\n    tmpvar_14 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(1.0, -1.0))));\n    nb_11.y = (1.0 - (tmpvar_14.z + (0.003921569 * tmpvar_14.y)));\n    vec4 tmpvar_15;\n    tmpvar_15 = texture (sampler_pc_main, (uv_3 + pix_9));\n    nb_11.z = (1.0 - (tmpvar_15.z + (0.003921569 * tmpvar_15.y)));\n    vec4 tmpvar_16;\n    tmpvar_16 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(-1.0, 1.0))));\n    nb_11.w = (1.0 - (tmpvar_16.z + (0.003921569 * tmpvar_16.y)));\n    vec4 tmpvar_17;\n    tmpvar_17 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(0.0, -1.0))));\n    nb2_10.x = (1.0 - (tmpvar_17.z + (0.003921569 * tmpvar_17.y)));\n    vec4 tmpvar_18;\n    tmpvar_18 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(1.0, 0.0))));\n    nb2_10.y = (1.0 - (tmpvar_18.z + (0.003921569 * tmpvar_18.y)));\n    vec4 tmpvar_19;\n    tmpvar_19 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(0.0, 1.0))));\n    nb2_10.z = (1.0 - (tmpvar_19.z + (0.003921569 * tmpvar_19.y)));\n    vec4 tmpvar_20;\n    tmpvar_20 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(-1.0, 0.0))));\n    nb2_10.w = (1.0 - (tmpvar_20.z + (0.003921569 * tmpvar_20.y)));\n    vec4 tmpvar_21;\n    tmpvar_21 = min (nb_11, nb2_10);\n    nb_11.zw = tmpvar_21.zw;\n    nb_11.xy = min (tmpvar_21.xy, tmpvar_21.zw);\n    xlat_mutabledist = (min (nb_11.x, nb_11.y) + ((0.01 * tmpvar_8.x) * abs(tmpvar_8.y)));\n  };\n  vec4 tmpvar_22;\n  tmpvar_22 = texture (sampler_pc_main, uv_3);\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \n    (tmpvar_22.z + (0.003921569 * tmpvar_22.y))\n  )) - q10);\n  vec3 tmpvar_23;\n  tmpvar_23.xy = (xlat_mutableuv1 * xlat_mutabledist);\n  tmpvar_23.z = xlat_mutabledist;\n  xlat_mutableuv2 = (((tmpvar_23 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = ((fract(\n    ((xlat_mutableuv2 / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  vec3 zz0_24;\n  vec3 zz_25;\n  zz0_24 = (xlat_mutableuv2 + q8);\n  zz_25 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  xlat_mutablelen = (sqrt(dot (zz_25, zz_25)) * 2.0);\n  xlat_mutablestruc = ((sqrt(\n    dot (zz_25.xy, zz_25.xy)\n  ) / 34.0) * 2.0);\n  float tmpvar_26;\n  vec4 tmpvar_27;\n  tmpvar_27 = texture (sampler_pc_main, uv_3);\n  tmpvar_26 = (1.0 - (tmpvar_27.z + (0.003921569 * tmpvar_27.y)));\n  if ((((xlat_mutabledist <= tmpvar_26) && (xlat_mutablelen < 34.0)) && (xlat_mutabledist > (0.04 / rad)))) {\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * texture (sampler_main, uv_3).x));\n    float x_28;\n    x_28 = ((1.0 - xlat_mutabledist) * 255.0);\n    float ip_29;\n    ip_29 = float(int(x_28));\n    vec2 tmpvar_30;\n    tmpvar_30.x = (x_28 - ip_29);\n    tmpvar_30.y = (ip_29 / 255.0);\n    ret_4.yz = tmpvar_30;\n  } else {\n    ret_4 = ((texture (sampler_main, uv_3).xyz * sustain) - 0.002);\n  };\n  vec4 tmpvar_31;\n  tmpvar_31.w = 1.0;\n  tmpvar_31.xyz = ret_4;\n  ret = tmpvar_31.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 tmpvar_1;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  tmpvar_1.z = q6;\n  mat3 tmpvar_2;\n  tmpvar_2[uint(0)].x = q20;\n  tmpvar_2[uint(0)].y = q23;\n  tmpvar_2[uint(0)].z = q26;\n  tmpvar_2[1u].x = q21;\n  tmpvar_2[1u].y = q24;\n  tmpvar_2[1u].z = q27;\n  tmpvar_2[2u].x = q22;\n  tmpvar_2[2u].y = q25;\n  tmpvar_2[2u].z = q28;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q1;\n  tmpvar_3.y = q2;\n  vec3 ret_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur2, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  vec3 tmpvar_8;\n  tmpvar_8.xy = ((uv - 0.5) * min ((1.0 - tmpvar_5.z), (1.0 - \n    ((tmpvar_6.xyz * scale2) + bias2)\n  .z)));\n  tmpvar_8.z = min ((1.0 - tmpvar_5.z), (1.0 - (\n    (tmpvar_6.xyz * scale2)\n   + bias2).z));\n  float tmpvar_9;\n  tmpvar_9 = clamp ((abs(\n    ((1.0 - ((tmpvar_6.xyz * scale2) + bias2).z) - clamp ((1.0 - (\n      (texture (sampler_blur2, tmpvar_3).xyz * scale2)\n     + bias2).z), 0.1, 0.4))\n  ) + 0.2), 0.0, 1.0);\n  float tmpvar_10;\n  tmpvar_10 = clamp (((1.0 - \n    exp(-(((tmpvar_7.xyz * scale1) + bias1).x))\n  ) - 0.2), 0.0, 1.0);\n  ret_4 = ((mix (tmpvar_5.xyz, \n    ((tmpvar_7.xyz * scale1) + bias1)\n  , vec3(tmpvar_9)).x * (0.2 + \n    ((1.0 - tmpvar_9) * (1.0 - min ((1.0 - tmpvar_5.z), (1.0 - \n      ((tmpvar_6.xyz * scale2) + bias2)\n    .z))))\n  )) * (1.0 + (0.5 * \n    sin((((tmpvar_8 / q7) * tmpvar_2) + tmpvar_1))\n  )));\n  vec3 tmpvar_11;\n  tmpvar_11.xy = vec2(0.0, 1.0);\n  tmpvar_11.z = (tmpvar_10 * 3.0);\n  ret_4 = (mix (ret_4, tmpvar_11, vec3(tmpvar_10)) + ((\n    pow ((1.0 - mix (tmpvar_5.xyz, (\n      (tmpvar_7.xyz * scale1)\n     + bias1), vec3(0.8, 0.8, 0.8)).z), 3.0)\n   * \n    (0.5 + (0.5 * slow_roam_cos))\n  ) * q19).xyz);\n  ret_4 = (1.0 - exp((-2.0 * ret_4)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_4;\n  ret = tmpvar_12.xyz;\n}\n\n"}