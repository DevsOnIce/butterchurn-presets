{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":3.3,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":189,"usedots":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_str":"m.xang = 0;\nm.ampl = 0;\nm.fov = 0;\nm.t1 = 0;\nm.yang = 0;\nm.t3 = 0;\nm.my = 0;\nm.oz = 0;\nm.ofs = 0;\nm.mz = 0;\nm.oy = 0;\nm.mul = 0;\nm.mx = 0;\nm.t2 = 0;\nm.zang = 0;\nm.monitor = 0;\nm.t_abs = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ofs=0; m.t1=(2*Math.sin((div(m.time,15)-m.ofs))); m.t2=(2*Math.sin((div(m.time,11)-m.ofs))); m.t3=(2*Math.sin((div(m.time,19)-m.ofs))); m.monitor=m.time;","point_eqs_str":"m.mul=10; m.t_abs=(m.sample*m.mul); m.ampl=2; m.ox=(m.ampl*Math.sin((m.t_abs*68))); m.oy=(m.ampl*Math.cos((m.t_abs*28))); m.oz=(2+(m.ampl*Math.cos((m.t_abs*128)))); m.r=Math.min((Math.sin((m.t_abs*335))+1), 1); m.g=Math.min((Math.sin((m.t_abs*783))+1), 1); m.b=Math.min((Math.sin((m.t_abs*456))+1), 1); m.a=(0.5+(0.02*(rand(10)-5))); m.xang=m.t1; m.yang=m.t2; m.zang=m.t3; m.fov=0.12; m.mx=((m.ox*Math.cos(m.zang))-(m.oy*Math.sin(m.zang))); m.my=((m.ox*Math.sin(m.zang))+(m.oy*Math.cos(m.zang))); m.ox=m.mx; m.oy=m.my; m.mx=((m.ox*Math.cos(m.yang))+(m.oz*Math.sin(m.yang))); m.mz=((-m.ox*Math.sin(m.yang))+(m.oz*Math.cos(m.yang))); m.ox=m.mx; m.oz=m.mz; m.my=((m.oy*Math.cos(m.xang))-(m.oz*Math.sin(m.xang))); m.mz=((m.oy*Math.sin(m.xang))+(m.oz*Math.cos(m.xang))); m.oy=m.my; m.oz=m.mz; m.x=(div((m.ox*m.fov),m.oz)+0.5); m.y=(div((m.oy*m.fov),m.oz)+0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.fx = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.fade = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.trel = 0;\nm.q9 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q10 = 0;\nm.sb = 0;\nm.q4 = 0;\nm.fy = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.movez = 0;\nm.trig = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.fade=0.1;","frame_eqs_str":"m.dec_med=pow(0.5, div(30,m.fps)); m.dec_slow=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.0+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.monitor=m.index2; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q27=m.index; m.q28=m.index2; m.sb=((m.sb*m.dec_med)+(m.q21*(1-m.dec_med))); m.q29=m.sb; m.k1=((m.is_beat*bnot(m.index))*bnot(m.index2)); m.p1=(m.index2-2); m.p2=((m.dec_slow*m.p2)+((1-m.dec_slow)*m.p1)); m.p3=((m.dec_slow*m.p3)+((1-m.dec_slow)*m.p2)); m.rott=(m.rott+(div((0.003*30),m.fps)*m.p3)); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trel=div(m.time,10); m.q5=Math.cos(m.trel); m.q6=Math.sin(m.trel); m.q7=-m.q6; m.q8=m.q5; m.q9=(0.01*Math.sin(div(m.time,7))); m.movez=(m.movez+(div((0.004*30),m.fps)*(m.p3+4))); m.q10=m.movez; m.q30=(0.3*(Math.sin(div(m.time,45))+1.5)); m.mv_a=0; m.q32=pow(0.98, div(30,m.fps)); m.q31=equal(mod(m.frame,10), 0); m.trig=(m.q24*bnot(mod(m.index,3))); m.fx=((m.fx*bnot(m.trig))+div((m.trig*rand(100)),100)); m.fy=((m.fy*bnot(m.trig))+div((m.trig*rand(100)),100)); m.q15=(m.fx-0.5); m.q16=(m.fy-0.5); m.fade=(m.fade*m.dec_slow); m.q32=(1-m.fade); m.monitor=m.q32;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=(1+(0.01*Math.sin(div(m.time,8)))); m.warp=(0.0*(1-m.rad)); m.warp=0.05; m.rot=0.0; m.dx=0; m.dy=0;","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = dot ((texture (sampler_main, (uv + vec2(0.002, 0.0))) - texture (sampler_main, (uv - vec2(0.002, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_1.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.002))) - texture (sampler_main, (uv - vec2(0.0, 0.002)))), vec4(0.32, 0.49, 0.29, 0.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (((-0.1 * tmpvar_2) * tmpvar_2) + (0.47 * ((texture (sampler_main, \n      (uv + (tmpvar_1 * 0.0003))\n    ).xyz + texture (sampler_main, uv).xyz) + (tmpvar_2 / 8.0))))\n   * q32) - (0.003 * q31)) - ((0.01 * q31) * (rad * rad)));\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"float xlat_mutablem;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nshader_body\n{\n  vec2 uv_1;\n  float maskn_2;\n  float inten_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)] = _qa.xy;\n  tmpvar_4[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_4);\n  int tmpvar_5;\n  tmpvar_5 = int(q10);\n  xlat_mutablem = (1.0 - float(tmpvar_5));\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = -(q10);\n  tmpvar_6 = fract((0.75 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_6)) * pow (tmpvar_6, 0.2));\n  vec2 tmpvar_8;\n  tmpvar_8 = fract(((\n    ((3.0 * uv_1) * tmpvar_6)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_6)\n   * tmpvar_6)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_8).xyz + ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1));\n  xlat_mutableret1 = ((xlat_mutableneu * inten_3) * 0.7);\n  xlat_mutablem = (2.0 - float(tmpvar_5));\n  float tmpvar_9;\n  tmpvar_9 = fract((0.5 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_9)) * pow (tmpvar_9, 0.2));\n  vec2 tmpvar_10;\n  tmpvar_10 = fract(((\n    ((3.0 * uv_1) * tmpvar_9)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_9)\n   * tmpvar_9)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_10).xyz + ((texture (sampler_blur1, tmpvar_10).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_9, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  xlat_mutablem = (3.0 - float(tmpvar_5));\n  float tmpvar_11;\n  tmpvar_11 = fract((0.25 + (\n    fract(tmpvar_7)\n   / 4.0)));\n  inten_3 = ((4.0 * (1.0 - tmpvar_11)) * pow (tmpvar_11, 0.2));\n  vec2 tmpvar_12;\n  tmpvar_12 = fract(((\n    ((3.0 * uv_1) * tmpvar_11)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_11)\n   * tmpvar_11)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_12).xyz + ((texture (sampler_blur1, tmpvar_12).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_11, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  xlat_mutablem = (4.0 - float(tmpvar_5));\n  float tmpvar_13;\n  tmpvar_13 = fract((fract(tmpvar_7) / 4.0));\n  inten_3 = ((4.0 * (1.0 - tmpvar_13)) * pow (tmpvar_13, 0.2));\n  vec2 tmpvar_14;\n  tmpvar_14 = fract(((\n    ((3.0 * uv_1) * tmpvar_13)\n   + \n    (xlat_mutablem * 0.35)\n  ) + (\n    (q7 * tmpvar_13)\n   * tmpvar_13)));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\n  maskn_2 = (1.0 - (pow (tmpvar_13, 0.1) * clamp (\n    (8.0 * xlat_mutableneu)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * maskn_2) + ((xlat_mutableneu * inten_3) * 0.7));\n  vec2 tmpvar_15;\n  tmpvar_15.x = q15;\n  tmpvar_15.y = q16;\n  vec2 tmpvar_16;\n  tmpvar_16 = sin(((tmpvar_15 + \n    (2.0 * uv_1)\n  ) + (0.2 * rand_frame).xy));\n  float tmpvar_17;\n  tmpvar_17 = ((dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29)) * (1.0 - \n    dot (xlat_mutableret1, vec3(0.32, 0.49, 0.29))\n  )) * 4.0);\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ((pow (xlat_mutableret1, vec3(1.5, 1.5, 1.5)) + (\n    clamp (((0.01 * (q21 - 2.0)) / sqrt(dot (tmpvar_16, tmpvar_16))), 0.0, 1.0)\n   * \n    clamp ((1.0 - (tmpvar_17 / 2.0)), 0.0, 1.0)\n  )) + ((\n    (clamp ((1.0 - tmpvar_17), 0.0, 1.0) * q29)\n   * \n    float((q27 == 2.0))\n  ) * float(\n    (q28 <= 2.0)\n  )));\n  ret = tmpvar_18.xyz;\n}\n\n"}