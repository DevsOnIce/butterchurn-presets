{"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"modwavealphabyvolume":1,"wave_a":2.929,"wave_scale":0.53,"wave_smoothing":0,"wave_mystery":-0.26,"modwavealphastart":1.15,"modwavealphaend":1.33,"warpscale":3.138,"zoomexp":2.00676,"zoom":1.033,"warp":0.04298,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_y":0.48,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.bass_thresh = 0;\nm.dx_residual = 0;\nm.dy_residual = 0;","frame_eqs_str":"m.wave_r=1; m.wave_g=0; m.wave_b=0; m.rot=(m.rot+(0.010*((0.60*Math.sin((0.381*m.time)))+(0.40*Math.sin((0.579*m.time)))))); m.cx=(m.cx+(0.110*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.cy=(m.cy+(0.110*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.dx=(m.dx+(0.0015*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.0015*((0.60*Math.sin((0.284*m.time)))+(0.40*Math.sin((0.247*m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,6), 0))); m.dx=(m.dx+(m.dx_residual*0.5)); m.dy=(m.dy+(m.dy_residual*0.5)); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.96)+1.3))); m.dx_residual=(((equal(m.bass_thresh, 2.13)*0.016)*Math.sin((m.time*7)))+((1-equal(m.bass_thresh, 2.13))*m.dx_residual)); m.dy_residual=(((equal(m.bass_thresh, 2.13)*0.012)*Math.sin((m.time*9)))+((1-equal(m.bass_thresh, 2.13))*m.dy_residual)); m.wave_x=(m.wave_x-(m.dx_residual*7)); m.wave_y=(m.wave_y-(m.dy_residual*7));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 xfer_1;\n  vec3 ret_2;\n  vec4 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  tmpvar_3 = texture (sampler_main, (tmpvar_4 + 0.5));\n  ret_2 = (tmpvar_3.xyz / ((tmpvar_3.x + tmpvar_3.y) + tmpvar_3.z));\n  ret_2 = texture (sampler_main, ((tmpvar_4 * dot (ret_2, vec3(1.0, 0.975, 0.95))) + 0.5)).xyz;\n  vec3 tmpvar_5;\n  tmpvar_5 = clamp (((ret_2 - 0.05) * 99.0), 0.0, 1.0);\n  xfer_1.x = tmpvar_5.x;\n  xfer_1.yz = (tmpvar_5.yz * clamp ((\n    (0.1 - ret_2.xy)\n   * 99.0), 0.0, 1.0));\n  ret_2 = (ret_2 + (vec3(-0.014, 0.014, 0.0) * tmpvar_5.xxx));\n  ret_2 = (ret_2 + (vec3(0.0, -0.08, 0.08) * xfer_1.yyy));\n  ret_2 = (ret_2 + (vec3(0.0, 0.0, -0.02) * xfer_1.zzz));\n  ret_2 = (ret_2 + (vec3(5.0, 15.0, 40.0) * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (tmpvar_1.xyz * (vec3(5.4, 1.53, 2.7) * dot (tmpvar_1.xyz, vec3(0.32, 0.49, 0.29))));\n  ret = tmpvar_2.xyz;\n}\n\n"}