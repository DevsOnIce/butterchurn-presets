{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.169162,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":53,"rad":0.024396,"tex_ang":1.00531,"tex_zoom":1.531168,"r":0.2,"g":0.7,"g2":0,"a2":0.2,"border_b":0,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.q22 = 0;\nm.q24 = 0;\nm.r0 = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0','b0'];","frame_eqs_str":"m.a=m.q22; m.a2=m.a; m.r0=((bnot(m.q24)*m.r0)+div((m.q24*rand(10)),10)); m.b0=((bnot(m.q24)*m.b0)+div((m.q24*rand(10)),10)); m.g0=((bnot(m.q24)*m.g0)+div((m.q24*rand(10)),10)); m.rad=div(m.q22,40); m.r=0.0; m.b=1; m.g=0.6; m.r2=0; m.b2=0; m.g2=0;"},{"baseVals":{"enabled":1,"sides":44,"textured":1,"x":0.7,"rad":0.2173,"tex_ang":0.628319,"tex_zoom":1.633192,"g":1,"b":1,"r2":0.99,"g2":0.99,"b2":1,"a2":1,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"m.posx = 0;\nm.q1 = 0;\nm.q24 = 0;\nm.posy = 0;\nm.rot0 = 0;\nm.rad0 = 0;\n\n\t\t\tm.rkeys = ['posx','posy','rot0','rad0'];","frame_eqs_str":"m.textured=1; m.rot0=(m.rot0+(div(1,m.fps)*m.q1)); m.posx=(((1-m.q24)*m.posx)+(m.q24*(0.3+div(rand(100),200)))); m.posy=(((1-m.q24)*m.posy)+(m.q24*(0.3+div(rand(100),200)))); m.rad0=(((1-m.q24)*m.rad0)+(m.q24*(0.05+div(rand(100),300)))); m.rad=m.rad0; m.x=m.posx; m.y=m.posy; m.ang=m.rot0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),2); m.q27=(m.index+1); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.zoom=1.01; m.rot=(-0.00*m.index); m.q32=pow(0.996, div(30,m.fps));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((4.0 * \n    sqrt(dot (tmpvar_3, tmpvar_3))\n  ) + (time / 2.0)) + q22);\n  uv_1 = (uv_orig + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-8.0, -8.0), vec2(8.0, 8.0)) / 64.0));\n  uv6_2 = (tmpvar_3 * 2.0);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur1, \n      fract(uv_1)\n    ).xyz * scale1) + bias1) * 0.04))\n   + \n    (abs(vec3((0.2 / sqrt(\n      (uv6_2.y - ((q22 * 0.04) * sin((q22 * \n        ((8.0 * uv6_2.x) + time)\n      ))))\n    )))) * vec3(0.06, 0.0504, 0.036))\n  ) * 0.99) - 0.01);\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nshader_body\n{\n  vec2 uv1_1;\n  uv1_1 = (((uv - 0.5) * aspect.xy) * aspect.yx);\n  float tmpvar_2;\n  tmpvar_2 = ((3.0 + (q10 * 4.0)) / abs(uv1_1.y));\n  xlat_mutablers.x = (uv1_1.x * tmpvar_2);\n  xlat_mutablers.y = (tmpvar_2 + (time * 6.0));\n  vec2 tmpvar_3;\n  tmpvar_3 = sin(xlat_mutablers);\n  vec3 tmpvar_4;\n  tmpvar_4 = vec3((1.0 - sqrt(sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  ))));\n  xlat_mutablenoise = (tmpvar_4 * (vec3(\n    greaterThanEqual (tmpvar_4, vec3(0.1, 0.1, 0.1))\n  ) * clamp (\n    (1.0 - (tmpvar_2 / 40.0))\n  , 0.0, 1.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((texture (sampler_main, (uv + \n    (xlat_mutablenoise / 2.0)\n  .xy)).xyz * 1.5) - (0.1 * xlat_mutablenoise));\n  ret = tmpvar_5.xyz;\n}\n\n"}