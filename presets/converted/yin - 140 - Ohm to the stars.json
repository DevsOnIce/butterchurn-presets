{"baseVals":{"rating":5,"gammaadj":2.26,"decay":0.99,"echo_zoom":0.99999,"echo_orient":3,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":0.997938,"wave_scale":0.901646,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":0.5,"modwavealphaend":1,"zoomexp":2.216679,"fshader":1,"zoom":0.9999,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_g":0.25,"wave_b":0.250001,"ob_size":0.05,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ib_size":0.025,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":32,"mv_y":48,"mv_dx":0.3,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.maxdbass = 0;\nm.dbass = 0;\nm.q1 = 0;\nm.cheat = 0;\nm.midphase = 0;\nm.lastbeat = 0;\nm.interval = 0;\nm.pbass = 0;\nm.beat = 0;\nm.q2 = 0;\nm.phase = 0;\nm.q3 = 0;\nm.sure = 0;","frame_eqs_str":"m.sure=((equal(m.sure, 0)!=0)?(0.6):(m.sure)); m.interval=((equal(m.interval, 0)!=0)?(40):(m.interval)); m.lastbeat=((equal(m.lastbeat, 0)!=0)?((m.frame-m.fps)):(m.lastbeat)); m.dbass=div((m.bass-m.pbass),m.fps); m.beat=(above(m.dbass, (0.6*m.maxdbass))*above((m.frame-m.lastbeat), div(m.fps,3))); m.sure=(((m.beat*below(Math.abs((m.frame-(m.interval+m.lastbeat))), div(m.fps,5)))!=0)?(Math.min((0.095+m.sure), 1)):(((m.beat*(m.sure-0.095))+(((1-m.beat)*m.sure)*0.9996)))); m.sure=Math.max(0.5, m.sure); m.cheat=(((above(m.frame, ((m.lastbeat+m.interval)+Math.floor(div(m.fps,10))))*above(m.sure, 0.91))!=0)?(1):(m.cheat)); m.beat=((m.cheat!=0)?(1):(m.beat)); m.sure=((m.cheat!=0)?((0.95*m.sure)):(m.sure)); m.maxdbass=Math.max((m.maxdbass*0.999), m.dbass); m.maxdbass=Math.max(0.012, m.maxdbass); m.maxdbass=Math.min(0.02, m.maxdbass); m.interval=((m.beat!=0)?((m.frame-m.lastbeat)):(m.interval)); m.lastbeat=((m.beat!=0)?((m.frame-(m.cheat*Math.floor(div(m.fps,10))))):(m.lastbeat)); m.cheat=0; m.pbass=m.bass; m.wave_r=(0.8*Math.abs(Math.cos((((0.07*m.time)+0.532)+Math.sin(((0.125*m.time)+0.789)))))); m.wave_g=(0.8*Math.abs(Math.cos((((0.092*m.time)+2.1)+Math.sin(((0.045*m.time)+1.52)))))); m.wave_b=(0.8*Math.abs(Math.cos((((0.1*m.time)+1.452)+Math.sin(((0.112*m.time)+2.98)))))); m.q1=m.beat; m.ib_a=m.beat; m.ib_r=(1-m.wave_r); m.ib_g=(1-m.wave_g); m.ib_b=(1-m.wave_b); m.wave_mystery=(1-(1.5*Math.min(div((m.frame-m.lastbeat),m.interval), 1))); m.wave_a=((above(div((m.frame-m.lastbeat),m.interval), 1)!=0)?(0):(1)); m.phase=((equal(mod(m.frame,m.interval), 0)!=0)?((m.phase+1)):(m.phase)); m.phase=((equal(mod(m.phase,18), 17)!=0)?(0):(m.phase)); m.midphase=Math.min(div((m.frame-m.lastbeat),m.interval), 1); m.sx=(((equal(m.phase, 15)*equal(mod(m.frame,m.interval), 0))!=0)?(-1):(m.sx)); m.sy=(((equal(m.phase, 26)*equal(mod(m.frame,m.interval), 0))!=0)?(-1):(m.sy)); m.phase=(((equal(mod(m.frame,m.interval), 0)*below(Math.cos(div(m.time,6)), -0.5))!=0)?((mod((m.phase+rand(13)),14)+1)):(m.phase)); m.q2=m.phase; m.q3=m.midphase;\n\t\tm.rkeys = ['rot','sx','sy','dy','dx'];","pixel_eqs_str":"m.zoom=(1+(0.01*Math.sin((13.28*m.rad)))); m.zoom=(m.zoom+(((equal(m.q2, 1)*m.q3)*0.1)*(m.x-0.5))); m.zoom=(m.zoom+(((equal(m.q2, 2)*m.q3)*0.1)*(0.5-m.x))); m.zoom=(m.zoom+(((equal(m.q2, 5)*m.q3)*0.1)*(0.5-m.y))); m.zoom=(m.zoom+(((equal(m.q2, 4)*m.q3)*0.1)*(m.y-0.5))); m.rot=(m.rot+((equal(m.q2, 3)*m.q3)*0.3)); m.rot=(m.rot-((equal(m.q2, 6)*m.q3)*0.3)); m.sx=(m.sx+((equal(m.q2, 7)*m.q3)*0.2)); m.sy=(m.sy-((equal(m.q2, 8)*m.q3)*0.2)); m.sx=(m.sx-((equal(m.q2, 9)*m.q3)*0.2)); m.sy=(m.sy+((equal(m.q2, 10)*m.q3)*0.2)); m.dy=(m.dy+((((equal(m.q2, 11)*Math.abs((0.5-m.x)))*sign((0.5-m.x)))*m.q3)*0.2)); m.dx=(m.dx+((((equal(m.q2, 12)*Math.abs((0.5-m.y)))*sign((0.5-m.y)))*m.q3)*0.2)); m.dx=(m.dx-((((equal(m.q2, 14)*Math.abs((0.5-m.y)))*sign((0.5-m.y)))*m.q3)*0.2)); m.dy=(m.dy-((((equal(m.q2, 13)*Math.abs((0.5-m.x)))*sign((0.5-m.x)))*m.q3)*0.2));","warp":"","comp":""}