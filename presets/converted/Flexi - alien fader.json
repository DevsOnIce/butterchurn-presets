{"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.267,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpscale":5.921,"zoomexp":11.56276,"zoom":1.05971,"warp":0.17692,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.01,"tex_ang":0.12566,"tex_zoom":1.51878,"g":0.99,"b":1,"a":0.1,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.w = 0;\nm.h3 = 0;\nm.q12 = 0;\nm.bt = 0;\nm.v = 0;\nm.mm = 0;\nm.h2 = 0;\nm.tt = 0;\nm.bm = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.mt = 0;\nm.mx = 0;\nm.mn = 0;\nm.bb = 0;\nm.h1 = 0;\nm.q3 = 0;\nm.q11=div(0.5,Math.asin(1));","frame_eqs_str":"m.wave_a=0; m.zoom=1; m.bb=((m.bb*0.99)+(m.bass*0.02)); m.mm=((m.mm*0.99)+(m.mid*0.02)); m.tt=((m.tt*0.99)+(m.treb*0.02)); m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.h1=div((m.bb-m.mn),(m.mx-m.mn)); m.h2=div((m.mm-m.mn),(m.mx-m.mn)); m.h3=div((m.tt-m.mn),(m.mx-m.mn)); m.v=div(0.07,m.fps); m.bm=(m.bm+((m.h1-m.h2)*m.v)); m.mt=(m.mt+((m.h2-m.h3)*m.v)); m.bt=(m.bt+((m.h1-m.h3)*m.v)); m.w=(m.bm*2); m.q3=Math.sin(m.w); m.q4=Math.cos(m.w); m.q10=m.bm; m.q11=m.mt; m.q12=m.bt;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 3.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((2.0 * (\n    (texture (sampler_blur1, fract((uv + (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, fract((uv - (vec2(1.0, 0.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_6;\n  tmpvar_6 = ((2.0 * (\n    (texture (sampler_blur1, fract((uv + (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, fract((uv - (vec2(0.0, 1.0) * tmpvar_4)))).xyz * scale1)\n   + bias1)));\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  d_2 = -(tmpvar_4);\n  float tmpvar_8;\n  tmpvar_8 = (d_2 * 1.5).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_5.y;\n  tmpvar_9.y = tmpvar_6.y;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_5.x;\n  tmpvar_10.y = tmpvar_6.x;\n  vec2 tmpvar_11;\n  tmpvar_11 = ((uv - (\n    (tmpvar_9 * d_2)\n   * 0.5)) - (tmpvar_10 * tmpvar_8));\n  ret_3.y = texture (sampler_fc_main, (tmpvar_11 - floor(tmpvar_11))).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - tmpvar_7.y)\n   * 0.042) + -0.008));\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_5.x;\n  tmpvar_12.y = tmpvar_6.x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_5.z;\n  tmpvar_13.y = tmpvar_6.z;\n  my_uv_1 = ((uv - (\n    (tmpvar_12 * d_2)\n   * 0.5)) - (tmpvar_13 * tmpvar_8));\n  ret_3.x = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).x;\n  ret_3.x = (ret_3.x + ((\n    (ret_3.x - tmpvar_7.x)\n   * 0.042) + -0.008));\n  vec2 tmpvar_14;\n  tmpvar_14.x = tmpvar_5.z;\n  tmpvar_14.y = tmpvar_6.z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = tmpvar_5.y;\n  tmpvar_15.y = tmpvar_6.y;\n  my_uv_1 = ((uv - (\n    (tmpvar_14 * d_2)\n   * 0.5)) - (tmpvar_15 * tmpvar_8));\n  ret_3.z = texture (sampler_fc_main, (my_uv_1 - floor(my_uv_1))).z;\n  ret_3.z = (ret_3.z + ((\n    (ret_3.z - tmpvar_7.z)\n   * 0.042) + -0.008));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_3;\n  ret = tmpvar_16.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  uv_1 = uv;\n  vec2 dz_2;\n  vec3 dy_3;\n  vec3 dx_4;\n  vec2 d_5;\n  vec3 ret_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((q4 * tmpvar_7.x) - (q3 * tmpvar_7.y));\n  tmpvar_8.y = ((q3 * tmpvar_7.x) + (q4 * tmpvar_7.y));\n  vec2 tmpvar_9;\n  tmpvar_9 = (0.5 + (tmpvar_8 * 2.0));\n  vec2 numerator_10;\n  numerator_10 = (tmpvar_9 - vec2(0.0, 0.5));\n  vec2 denominator_11;\n  denominator_11 = (tmpvar_9 - vec2(1.0, 0.5));\n  vec2 tmpvar_12;\n  tmpvar_12.x = ((numerator_10.x * denominator_11.x) + (numerator_10.y * denominator_11.y));\n  tmpvar_12.y = ((numerator_10.y * denominator_11.x) - (numerator_10.x * denominator_11.y));\n  vec2 tmpvar_13;\n  tmpvar_13 = (((tmpvar_12 / \n    ((denominator_11.x * denominator_11.x) + (denominator_11.y * denominator_11.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_14;\n  tmpvar_14 = sqrt(dot (tmpvar_13, tmpvar_13));\n  float tmpvar_15;\n  float tmpvar_16;\n  tmpvar_16 = (min (abs(\n    (tmpvar_13.x / tmpvar_13.y)\n  ), 1.0) / max (abs(\n    (tmpvar_13.x / tmpvar_13.y)\n  ), 1.0));\n  float tmpvar_17;\n  tmpvar_17 = (tmpvar_16 * tmpvar_16);\n  tmpvar_17 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_17) + 0.05368138) * tmpvar_17) - 0.1173503)\n     * tmpvar_17) + 0.1938925) * tmpvar_17) - 0.3326756)\n   * tmpvar_17) + 0.9999793) * tmpvar_16);\n  tmpvar_17 = (tmpvar_17 + (float(\n    (abs((tmpvar_13.x / tmpvar_13.y)) > 1.0)\n  ) * (\n    (tmpvar_17 * -2.0)\n   + 1.570796)));\n  tmpvar_15 = (tmpvar_17 * sign((tmpvar_13.x / tmpvar_13.y)));\n  if ((abs(tmpvar_13.y) > (1e-08 * abs(tmpvar_13.x)))) {\n    if ((tmpvar_13.y < 0.0)) {\n      if ((tmpvar_13.x >= 0.0)) {\n        tmpvar_15 += 3.141593;\n      } else {\n        tmpvar_15 = (tmpvar_15 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_15 = (sign(tmpvar_13.x) * 1.570796);\n  };\n  vec2 tmpvar_18;\n  tmpvar_18.x = (tmpvar_15 * 0.1591549);\n  tmpvar_18.y = tmpvar_14;\n  vec2 tmpvar_19;\n  tmpvar_19.x = ((tmpvar_18.x * 2.0) + q11);\n  tmpvar_19.y = ((0.2 * log(tmpvar_14)) + q12);\n  uv_1 = (0.5 + ((0.5 - \n    abs(((fract(\n      (tmpvar_19 * 0.5)\n    ) * 2.0) - 1.0))\n  ).yx * 1.06));\n  vec2 tmpvar_20;\n  vec2 tmpvar_21;\n  tmpvar_21 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_20.x = (texture (sampler_main, (uv_1 + tmpvar_21)).xyz - texture (sampler_main, (uv_1 - tmpvar_21)).xyz).y;\n  vec2 tmpvar_22;\n  tmpvar_22 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_20.y = (texture (sampler_main, (uv_1 + tmpvar_22)).xyz - texture (sampler_main, (uv_1 - tmpvar_22)).xyz).y;\n  d_5 = (texsize.zw * 1.2);\n  dx_4 = ((2.0 * (\n    (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * d_5))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * d_5))).xyz * scale1)\n   + bias1)));\n  dy_3 = ((2.0 * (\n    (texture (sampler_blur1, (uv_1 + (vec2(0.0, 1.0) * d_5))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv_1 - (vec2(0.0, 1.0) * d_5))).xyz * scale1)\n   + bias1)));\n  vec2 tmpvar_23;\n  tmpvar_23.x = dx_4.y;\n  tmpvar_23.y = dy_3.y;\n  dz_2 = ((tmpvar_20 * 3.0) + tmpvar_23);\n  ret_6 = (vec3(((\n    pow ((sqrt(dot (dz_2, dz_2)) * 0.8), 0.7)\n   + \n    (((texture (sampler_blur2, uv_1).xyz * scale2) + bias2).y * 0.4)\n  ) - 0.1)) * vec3(0.3, 0.5, 0.7));\n  vec2 tmpvar_24;\n  tmpvar_24.x = dx_4.x;\n  tmpvar_24.y = dy_3.x;\n  vec3 tmpvar_25;\n  tmpvar_25 = mix (mix (ret_6, vec3(0.2, 0.1, 0.0), vec3((texture (sampler_main, \n    (uv_1 + ((tmpvar_24 * texsize.zw) * 18.0))\n  ).x * 6.0))), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv_1).zzz);\n  ret_6 = tmpvar_25;\n  vec4 tmpvar_26;\n  tmpvar_26.w = 1.0;\n  tmpvar_26.xyz = tmpvar_25;\n  ret = tmpvar_26.xyz;\n}\n\n"}