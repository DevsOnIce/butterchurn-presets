{"baseVals":{"rating":0,"gammaadj":1.7,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.32,"wave_scale":1.521,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"zoom":1.00949,"warp":0.01,"sy":1.0017,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":28,"textured":1,"rad":0.81624,"ang":0.62832,"tex_zoom":0.8138,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.border_r=m.q1; m.border_g=m.q2; m.border_b=m.q3; m.ang=((1*Math.sin((m.time*0.44)))*Math.cos((m.time*0.17))); m.x=m.q4; m.y=m.q5;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.redsine = 0;\nm.bluesine = 0;\nm.greenif = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q4 = 0;\nm.redif = 0;\nm.blueif = 0;\nm.vol = 0;\nm.greensine = 0;\nm.q2 = 0;\nm.decay=0.1;","frame_eqs_str":"m.vol=(((m.bass+m.mid)+m.treb_att)*0.3333); m.redsine=(0.5+((0.15*m.bass)*Math.sin((m.time*3)))); m.greensine=(0.5+((0.15*m.mid)*Math.sin((m.time*2)))); m.bluesine=(0.5+((0.15*m.treb)*Math.sin(m.time))); m.redif=((above(m.bass, 1.2)!=0)?(m.redsine):(((above(m.redif, 0.95)!=0)?(0):((m.redif*0.85))))); m.greenif=((above(m.mid, 1.2)!=0)?(m.greensine):(((above(m.greenif, 0.95)!=0)?(0):((m.greenif*0.85))))); m.blueif=((above(m.treb, 1.2)!=0)?(m.bluesine):(((above(m.blueif, 0.95)!=0)?(0):((m.blueif*0.85))))); m.q1=(0.5+((0.1*Math.cos((m.time*0.24)))*Math.sin((m.time*0.68)))); m.q2=(0.5+((0.1*Math.cos((m.time*0.17)))*Math.sin((m.time*0.88)))); m.q4=(0.5+((0.5*Math.sin((m.time*0.52)))*Math.cos((m.time*0.39)))); m.q5=(0.5+((0.05*Math.sin((m.time*0.44)))*Math.cos((m.time*0.71))));\n\t\tm.rkeys = ['zoom','sy','sx'];","pixel_eqs_str":"m.zoom=((m.zoom+(0.015*m.rad))+((0.025*m.treb_att)*m.rad)); m.sy=(m.sy+(0.1*Math.cos((Math.sin(((m.y*40)+m.time))-((Math.sin(((20*m.x)+m.time))*0.5)*m.treb_att))))); m.sx=(m.sx+(0.025*Math.sin((Math.cos(((m.x*40)+m.time))+((Math.cos(((m.y*20)+m.time))*0.5)*m.treb_att)))));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz * (vec3(0.9, 0.9, 9.0) + (0.15 * texture (sampler_noise_hq, uv)).xyz));\n  ret_1 = (ret_1 - 0.002);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 fret_1;\n  vec2 uvpm_2;\n  vec2 uvp_3;\n  vec3 ret_4;\n  uvp_3.x = uv.x;\n  uvp_3.y = (uv.y * 0.38);\n  uvpm_2.x = (uv.x * texture (sampler_noise_hq, vec2(((uv.x - 0.5) + q2))).x);\n  uvpm_2.y = (uvp_3.y * texture (sampler_noise_hq, vec2(((uvp_3.y - 0.5) + q1))).x);\n  vec3 tmpvar_5;\n  tmpvar_5 = ((texture (sampler_blur3, uvp_3).xyz * scale3) + bias3);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uvpm_2);\n  fret_1 = (((0.17 * tmpvar_5) / (texture (sampler_main, uvp_3).xyz * tmpvar_5)).xxx - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 1.35));\n  ret_4 = ((fret_1 * tmpvar_6.xyz) * (1.0 - (tmpvar_6.xyz * tmpvar_6.xyz)));\n  ret_4 = (ret_4 * (1.0 - (\n    (0.5 * fret_1)\n   * \n    (1.0 - (4.0 * ret_4))\n  )));\n  ret_4 = (1.0 - ret_4);\n  ret_4 = (ret_4 * (ret_4 * dot (\n    (ret_4 - ((texture (sampler_blur2, uvp_3).xyz * scale2) + bias2))\n  , vec3(0.32, 0.49, 0.29))));\n  ret_4 = (1.0 - ret_4);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_4;\n  ret = tmpvar_7.xyz;\n}\n\n"}