{"baseVals":{"rating":0,"gammaadj":2,"decay":0.98,"echo_zoom":2,"echo_alpha":0,"echo_orient":0,"wave_mode":6,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":1.069,"wave_scale":2.115,"wave_smoothing":0.63,"wave_mystery":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.772,"zoomexp":5.00873,"fshader":0,"zoom":1.04163,"rot":0.003,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0,"sx":1,"sy":1,"wave_r":0,"wave_g":0.3,"wave_b":0.5,"wave_x":0.5,"wave_y":0.5,"ob_size":0.005,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.01,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0.1,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":30,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.24,"y":0.5,"rad":0.47209,"ang":0,"tex_ang":0.62832,"tex_zoom":0.81952,"r":1,"g":0,"b":0,"a":1,"r2":0.6,"g2":0.6,"b2":0.9,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=((Math.sin((m.time*0.5))*0.5)+0.5);"},{"baseVals":{"enabled":1,"sides":4,"additive":1,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":1.79142,"ang":0,"tex_ang":1.5708,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0.3,"g2":0.2,"b2":0.8,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.80814,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0.4,"g":0.4,"b":0.8,"a":1,"r2":0.7,"g2":0.6,"b2":0.5,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.36457,"ang":0,"tex_ang":0,"tex_zoom":0.49831,"r":1,"g":0,"b":0,"a":0,"r2":0,"g2":1,"b2":0,"a2":0.8,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.tscale = 0;\nm.tp1x = 0;\nm.tp3y = 0;\nm.tri_point = 0;\nm.tp1y = 0;\nm.trot = 0;\nm.t_y = 0;\nm.tp2x = 0;\nm.tp2y = 0;\nm.t_x = 0;\nm.tp3x = 0;\n\n\t\t\tm.rkeys = ['t_y','t_x'];","frame_eqs_str":"","point_eqs_str":"m.tscale=(0.45+(m.bass*0.02)); m.trot=3; m.a=above(m.sample, 0); m.tp1x=(0.5+((Math.cos(((3.1415*0)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp1y=(0.5+(Math.sin(((3.1415*0)+(m.time*m.trot)))*m.tscale)); m.tp2x=(0.5+((Math.cos(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp2y=(0.5+((Math.sin(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tp3x=(0.5+((Math.cos(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp3y=(0.5+((Math.sin(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tri_point=rand(3); m.t_x=(m.t_x+((equal(m.tri_point, 0)*(m.tp1x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 0)*(m.tp1y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 1)*(m.tp2x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 1)*(m.tp2y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 2)*(m.tp3x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 2)*(m.tp3y-m.t_y))*0.5)); m.x=m.t_x; m.y=m.t_y;"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.tscale = 0;\nm.tp1x = 0;\nm.tp3y = 0;\nm.tri_point = 0;\nm.tp1y = 0;\nm.trot = 0;\nm.t_y = 0;\nm.tp2x = 0;\nm.tp2y = 0;\nm.t_x = 0;\nm.tp3x = 0;\n\n\t\t\tm.rkeys = ['t_y','t_x'];","frame_eqs_str":"","point_eqs_str":"m.tscale=(0.45+(m.bass*0.02)); m.trot=3; m.a=above(m.sample, 0); m.tp1x=(0.5+((Math.cos(((3.1415*0)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp1y=(0.5+(Math.sin(((3.1415*0)+(m.time*m.trot)))*m.tscale)); m.tp2x=(0.5+((Math.cos(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp2y=(0.5+((Math.sin(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tp3x=(0.5+((Math.cos(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp3y=(0.5+((Math.sin(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tri_point=rand(3); m.t_x=(m.t_x+((equal(m.tri_point, 0)*(m.tp1x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 0)*(m.tp1y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 1)*(m.tp2x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 1)*(m.tp2y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 2)*(m.tp3x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 2)*(m.tp3y-m.t_y))*0.5)); m.x=m.t_x; m.y=m.t_y;"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.tscale = 0;\nm.tp1x = 0;\nm.tp3y = 0;\nm.tri_point = 0;\nm.tp1y = 0;\nm.trot = 0;\nm.t_y = 0;\nm.tp2x = 0;\nm.tp2y = 0;\nm.t_x = 0;\nm.tp3x = 0;\n\n\t\t\tm.rkeys = ['t_y','t_x'];","frame_eqs_str":"","point_eqs_str":"m.tscale=(0.45+(m.bass*0.02)); m.trot=3; m.a=above(m.sample, 0); m.tp1x=(0.5+((Math.cos(((3.1415*0)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp1y=(0.5+(Math.sin(((3.1415*0)+(m.time*m.trot)))*m.tscale)); m.tp2x=(0.5+((Math.cos(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp2y=(0.5+((Math.sin(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tp3x=(0.5+((Math.cos(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp3y=(0.5+((Math.sin(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tri_point=rand(3); m.t_x=(m.t_x+((equal(m.tri_point, 0)*(m.tp1x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 0)*(m.tp1y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 1)*(m.tp2x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 1)*(m.tp2y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 2)*(m.tp3x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 2)*(m.tp3y-m.t_y))*0.5)); m.x=m.t_x; m.y=m.t_y;"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.tscale = 0;\nm.tp1x = 0;\nm.tp3y = 0;\nm.tri_point = 0;\nm.tp1y = 0;\nm.trot = 0;\nm.t_y = 0;\nm.tp2x = 0;\nm.tp2y = 0;\nm.t_x = 0;\nm.tp3x = 0;\n\n\t\t\tm.rkeys = ['t_y','t_x'];","frame_eqs_str":"","point_eqs_str":"m.tscale=(0.45+(m.bass*0.02)); m.trot=3; m.a=above(m.sample, 0); m.tp1x=(0.5+((Math.cos(((3.1415*0)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp1y=(0.5+(Math.sin(((3.1415*0)+(m.time*m.trot)))*m.tscale)); m.tp2x=(0.5+((Math.cos(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp2y=(0.5+((Math.sin(((3.1415*0.6667)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tp3x=(0.5+((Math.cos(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*0.75)); m.tp3y=(0.5+((Math.sin(((3.1415*1.3333)+(m.time*m.trot)))*m.tscale)*Math.sin(m.time))); m.tri_point=rand(3); m.t_x=(m.t_x+((equal(m.tri_point, 0)*(m.tp1x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 0)*(m.tp1y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 1)*(m.tp2x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 1)*(m.tp2y-m.t_y))*0.5)); m.t_x=(m.t_x+((equal(m.tri_point, 2)*(m.tp3x-m.t_x))*0.5)); m.t_y=(m.t_y+((equal(m.tri_point, 2)*(m.tp3y-m.t_y))*0.5)); m.x=m.t_x; m.y=m.t_y;"}],"init_eqs_str":"m.t = 0;","frame_eqs_str":"m.t=(m.time*12.3); m.rot=(m.rot+(0.030*((0.60*Math.sin((0.38*m.time)))+(0.40*Math.sin((0.54*m.time)))))); m.dx=(m.dx+(0.002*((0.60*Math.sin((0.434*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.002*((0.60*Math.sin((0.384*m.time)))+(0.40*Math.sin((0.477*m.time))))));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"uniform sampler2D sampler_smalltiled_ensign_meat;\nshader_body\n{\n  float tmpvar_1;\n  tmpvar_1 = fract((time * 0.5));\n  float tmpvar_2;\n  tmpvar_2 = pow (0.5, tmpvar_1);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (mix (texture (sampler_fc_main, uv).xyz, (\n    mix (texture (sampler_smalltiled_ensign_meat, (((\n      (tmpvar_3 * tmpvar_2)\n     + 0.5) * texsize.xy) * texsize_smalltiled_ensign_meat.zw)).xyz, texture (sampler_smalltiled_ensign_meat, (((\n      (tmpvar_3 * (tmpvar_2 * 2.0))\n     + 0.5) * texsize.xy) * texsize_smalltiled_ensign_meat.zw)).xyz, vec3(tmpvar_1))\n   * \n    (clamp ((rad * 1.3), 0.0, 1.0) * 1.1)\n  ), vec3(0.15, 0.15, 0.15)) * 0.8);\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \n    (tmpvar_2 * 0.4)\n  )).x * (hue_shader.zxy * hue_shader.zxy)), mix ((\n    pow (hue_shader, vec3(4.0, 4.0, 4.0))\n   * 1.2), vec3(3.0, 3.0, 3.0), texture (sampler_main, uv).zzz), ((texture (sampler_blur1, uv).xyz * scale1) + bias1).yyy);\n  ret = tmpvar_3.xyz;\n}\n\n"}