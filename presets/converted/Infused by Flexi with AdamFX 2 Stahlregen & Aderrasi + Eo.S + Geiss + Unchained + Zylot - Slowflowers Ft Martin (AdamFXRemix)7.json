{"baseVals":{"rating":3.5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.545,"wave_smoothing":0,"modwavealphastart":1.1,"modwavealphaend":1.1,"warpanimspeed":5.996,"warpscale":1.331,"zoom":0.9984,"rot":0.002,"warp":0.01,"wave_r":0,"wave_g":0,"ob_size":0.005,"ob_a":1,"ib_r":0.5,"ib_g":0.9,"ib_b":0.5,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":2,"rad":1.2523,"tex_ang":0.25133,"tex_zoom":1.136,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q29 = 0;\nm.q31 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.x=m.q28; m.y=m.q29; m.rad=m.q32; m.ang=((equal(m.instance, 0)!=0)?(m.q30):(m.q31));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":2,"rad":1.25237,"tex_ang":0.25133,"tex_zoom":1.136,"r2":1,"g2":0,"a2":1,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q25 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.x=m.q23; m.y=m.q24; m.rad=m.q27; m.ang=((equal(m.instance, 0)!=0)?(m.q25):(m.q26));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"r":0},"init_eqs_str":"m.vl = 0;\nm.sw = 0;\nm.vo = 0;\nm.vt = 0;\nm.swi = 0;\nm.vc = 0;\nm.vj = 0;\nm.vk = 0;\nm.it = 0;\nm.q1 = 0;\nm.vb = 0;\nm.vg = 0;\nm.vi = 0;\nm.vn = 0;\nm.lr = 0;\nm.sc = 0;\nm.my = 0;\nm.vd = 0;\nm.si = 0;\nm.vq = 0;\nm.vx = 0;\nm.sa = 0;\nm.let = 0;\nm.sb = 0;\nm.sg = 0;\nm.vy = 0;\nm.sf = 0;\nm.sj = 0;\nm.vr = 0;\nm.se = 0;\nm.sz = 0;\nm.xv = 0;\nm.vp = 0;\nm.mx = 0;\nm.vf = 0;\nm.sh = 0;\nm.sd = 0;\nm.vs = 0;\nm.ve = 0;\nm.ita = 0;\nm.vh = 0;\nm.va = 0;\nm.vm = 0;\n\n\t\t\tm.rkeys = ['it','lr','my','xv','ita'];","frame_eqs_str":"","point_eqs_str":"m.it=(((m.it+1)*above(m.sample, 0))*below(m.it, 53)); m.ita=((m.ita+equal(m.it, 0))*above(m.sample, 0)); m.sw=(1-(equal(m.it, 0)*equal(m.ita, 0))); m.swi=(((equal(m.lr, 9)+equal(m.lr, 5))*equal(m.it, 0))*equal(m.ita, 4)); m.xv=(((m.sw-m.swi)!=0)?(m.xv):(((Math.floor(rand(1001))*0.001)*0.8))); m.mx=(m.xv+(m.ita*0.025)); m.my=(((m.sw-m.swi)!=0)?(m.my):(((Math.floor(rand(1001))*0.001)*0.975))); m.sz=0.01; m.vx=((((((((((((above(m.it, 1)*below(m.it, 39))+(above(m.it, 12)*below(m.it, 28)))-equal(m.it, 20))+equal(m.it, 46))+equal(m.it, 51))+equal(m.it, 41))-equal(m.it, 15))-equal(m.it, 25))+equal(m.it, 10))+equal(m.it, 30))-equal(m.it, 4))-equal(m.it, 36)); m.vy=((((((((((((above(m.it, 17)*below(m.it, 49))+(above(m.it, 22)*below(m.it, 44)))-equal(m.it, 33))+equal(m.it, 7))+equal(m.it, 51))+equal(m.it, 15))-equal(m.it, 41))-equal(m.it, 25))+equal(m.it, 4))+equal(m.it, 10))-equal(m.it, 36))-equal(m.it, 30)); m.se=(((((equal(m.ita, 0)*3)+(equal(m.ita, 1)*8))+(equal(m.ita, 2)*1))+(equal(m.ita, 3)*15))+(equal(m.ita, 4)*19)); m.sf=((((equal(m.ita, 0)*16)+(equal(m.ita, 1)*12))+(equal(m.ita, 2)*1))+(equal(m.ita, 3)*25)); m.sc=(((((equal(m.ita, 0)*13)+(equal(m.ita, 1)*1))+(equal(m.ita, 2)*7))+(equal(m.ita, 3)*9))+(equal(m.ita, 4)*3)); m.sd=(((((equal(m.ita, 0)*18)+(equal(m.ita, 1)*5))+(equal(m.ita, 2)*13))+(equal(m.ita, 3)*9))+(equal(m.ita, 4)*24)); m.sb=(((((equal(m.ita, 0)*19)+(equal(m.ita, 1)*8))+(equal(m.ita, 2)*1))+(equal(m.ita, 3)*4))+(equal(m.ita, 4)*5)); m.sj=(((equal(m.ita, 0)*6)+(equal(m.ita, 1)*21))+(equal(m.ita, 2)*14)); m.sg=((((((((equal(m.ita, 0)*5)+(equal(m.ita, 1)*20))+(equal(m.ita, 2)*8))+(equal(m.ita, 3)*5))+(equal(m.ita, 4)*18))+(equal(m.ita, 5)*5))+(equal(m.ita, 6)*1))+(equal(m.ita, 7)*12)); m.sh=((((((((equal(m.ita, 0)*13)+(equal(m.ita, 1)*9))+(equal(m.ita, 2)*14))+(equal(m.ita, 3)*4))+(equal(m.ita, 4)*6))+(equal(m.ita, 5)*21))+(equal(m.ita, 6)*3))+(equal(m.ita, 7)*11)); m.si=(((((equal(m.ita, 0)*6)+(equal(m.ita, 1)*14))+(equal(m.ita, 2)*15))+(equal(m.ita, 3)*18))+(equal(m.ita, 4)*4)); m.sa=(((((((equal(m.ita, 0)*2)+(equal(m.ita, 1)*12))+(equal(m.ita, 2)*5))+(equal(m.ita, 3)*14))+(equal(m.ita, 4)*4))+(equal(m.ita, 5)*5))+(equal(m.ita, 6)*4)); m.lr=((m.sw!=0)?(m.lr):(Math.floor(rand(10)))); m.let=((((((((((equal(m.lr, 0)*m.sa)+(equal(m.lr, 1)*m.sb))+(equal(m.lr, 2)*m.sc))+(equal(m.lr, 3)*m.sd))+(equal(m.lr, 4)*m.se))+(equal(m.lr, 5)*m.sf))+(equal(m.lr, 6)*m.sg))+(equal(m.lr, 7)*m.sh))+(equal(m.lr, 8)*m.si))+(equal(m.lr, 9)*m.sj)); m.va=((equal(m.let, 23)+equal(m.let, 24))+equal(m.let, 26)); m.vb=((((above(m.let, 0)*below(m.let, 9))+(above(m.let, 10)*below(m.let, 19)))+equal(m.let, 21))+equal(m.let, 23)); m.vc=((((((((equal(m.let, 1)+equal(m.let, 2))+equal(m.let, 5))+equal(m.let, 6))+equal(m.let, 8))+equal(m.let, 11))+equal(m.let, 16))+equal(m.let, 18))+equal(m.let, 19)); m.vd=(((above(m.let, 1)*below(m.let, 9))+(above(m.let, 10)*below(m.let, 24)))-equal(m.let, 20)); m.ve=(((equal(m.let, 13)+equal(m.let, 14))+equal(m.let, 24))+equal(m.let, 25)); m.vf=((((above(m.let, 1)*below(m.let, 8))+equal(m.let, 9))+(above(m.let, 14)*below(m.let, 21)))+equal(m.let, 26)); m.vg=equal(m.let, 1); m.vh=(equal(m.let, 9)+equal(m.let, 20)); m.vi=(((above(m.let, 0)*below(m.let, 5))-equal(m.let, 3))+equal(m.let, 18)); m.vj=((((((above(m.let, 2)*below(m.let, 8))-equal(m.let, 4))+equal(m.let, 9))+(above(m.let, 14)*below(m.let, 21)))-equal(m.let, 18))+equal(m.let, 26)); m.vk=((equal(m.let, 11)+equal(m.let, 13))+(above(m.let, 23)*below(m.let, 27))); m.vl=(((equal(m.let, 8)+equal(m.let, 10))+(above(m.let, 12)*below(m.let, 18)))+(above(m.let, 20)*below(m.let, 24))); m.vm=(((((equal(m.let, 1)+equal(m.let, 2))+equal(m.let, 8))+equal(m.let, 16))+equal(m.let, 18))+equal(m.let, 19)); m.vn=((((((((equal(m.let, 1)+equal(m.let, 7))+equal(m.let, 8))+equal(m.let, 10))+(above(m.let, 12)*below(m.let, 24)))-equal(m.let, 16))-equal(m.let, 18))-equal(m.let, 20))-equal(m.let, 22)); m.vo=(((((equal(m.let, 11)+equal(m.let, 14))+equal(m.let, 17))+equal(m.let, 18))+equal(m.let, 23))+equal(m.let, 24)); m.vp=((((((((((equal(m.let, 3)+equal(m.let, 5))+equal(m.let, 7))+equal(m.let, 9))+equal(m.let, 10))+equal(m.let, 12))+equal(m.let, 15))+equal(m.let, 17))+equal(m.let, 19))+equal(m.let, 21))+equal(m.let, 26)); m.vq=((equal(m.let, 2)+equal(m.let, 4))+equal(m.let, 22)); m.vr=((equal(m.let, 9)+equal(m.let, 20))+equal(m.let, 25)); m.vs=equal(m.let, 22); m.vt=(((((((((above(m.let, 1)*below(m.let, 13))-equal(m.let, 6))-equal(m.let, 8))-equal(m.let, 11))+equal(m.let, 15))+equal(m.let, 17))+equal(m.let, 19))+equal(m.let, 21))+equal(m.let, 26)); m.a=((above(m.it, 51)!=0)?(0):(((above(m.it, 49)!=0)?(m.va):(((above(m.it, 47)!=0)?(m.vb):(((above(m.it, 44)!=0)?(m.vc):(((above(m.it, 42)!=0)?(m.vd):(((above(m.it, 39)!=0)?(m.ve):(((above(m.it, 37)!=0)?(m.vf):(((above(m.it, 34)!=0)?(m.vg):(((above(m.it, 31)!=0)?(m.vh):(((above(m.it, 28)!=0)?(m.vi):(((above(m.it, 26)!=0)?(m.vj):(((above(m.it, 23)!=0)?(m.vk):(((above(m.it, 21)!=0)?(m.vl):(((above(m.it, 18)!=0)?(m.vm):(((above(m.it, 16)!=0)?(m.vn):(((above(m.it, 13)!=0)?(m.vo):(((above(m.it, 11)!=0)?(m.vp):(((above(m.it, 8)!=0)?(m.vq):(((above(m.it, 5)!=0)?(m.vr):(((above(m.it, 2)!=0)?(m.vs):(((m.it!=0)?(m.vt):(0)))))))))))))))))))))))))))))))))))))))))); m.a=((m.a*below(m.ita, 8))*m.q1); m.x=(m.mx+((m.vx*m.sz)*0.75)); m.y=(m.my+((m.vy*m.sz)*1.5));"},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"scaling":81.95444,"smoothing":1,"g":0,"b":0.4},"init_eqs_str":"m.wave_x = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.wave_x=1;","point_eqs_str":"m.x=(Math.floor(rand(1000))*0.001); m.y=(Math.floor(rand(1000))*0.001);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.xx = 0;\nm.bass_residual = 0;\nm.old_treb_flop = 0;\nm.bass_flop = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.treb_flop = 0;\nm.bass_thresh = 0;\nm.old_bass_flop = 0;\nm.treb_thresh = 0;\nm.pulse = 0;\nm.bass_changed = 0;\nm.mid_thresh = 0;\nm.q4 = 0;\nm.mid_changed = 0;\nm.entropy = 0;\nm.old_mid_flop = 0;\nm.mid_residual = 0;\nm.treb_residual = 0;\nm.chaos = 0;\nm.mid_flop = 0;\nm.q2 = 0;\nm.treb_changed = 0;\nm.q3 = 0;\nm.yy = 0;\nm.q7 = 0;\nm.q8 = 0;","frame_eqs_str":"m.warp=0; m.old_bass_flop=m.bass_flop; m.old_treb_flop=m.treb_flop; m.old_mid_flop=m.mid_flop; m.chaos=(0.9+(0.1*Math.sin(m.pulse))); m.entropy=((equal(m.pulse, -20)!=0)?(((((1+m.bass_flop)+m.treb_flop)+m.mid_flop)+Math.floor(rand(2)))):(m.entropy)); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.6)*m.chaos)+1.6))); m.bass_flop=Math.abs((m.bass_flop-equal(m.bass_thresh, 2))); m.treb_thresh=((above(m.treb_att, m.treb_thresh)*2)+((1-above(m.treb_att, m.treb_thresh))*(((m.treb_thresh-1.6)*m.chaos)+1.6))); m.treb_flop=Math.abs((m.treb_flop-equal(m.treb_thresh, 2))); m.mid_thresh=((above(m.mid_att, m.mid_thresh)*2)+((1-above(m.mid_att, m.mid_thresh))*(((m.mid_thresh-1.6)*m.chaos)+1.6))); m.mid_flop=Math.abs((m.mid_flop-equal(m.mid_thresh, 2))); m.bass_changed=bnot(equal(m.old_bass_flop, m.bass_flop)); m.mid_changed=bnot(equal(m.old_mid_flop, m.mid_flop)); m.treb_changed=bnot(equal(m.old_treb_flop, m.treb_flop)); m.bass_residual=((m.bass_changed*Math.sin((m.pulse*3)))+(bnot(m.bass_changed)*m.bass_residual)); m.treb_residual=((m.treb_changed*Math.sin((m.pulse*3)))+(bnot(m.treb_changed)*m.treb_residual)); m.mid_residual=((m.mid_changed*Math.sin((m.pulse*3)))+(bnot(m.mid_changed)*m.mid_residual)); m.pulse=((above(Math.abs(m.pulse), 20)!=0)?(-20):((m.pulse+(((m.bass_thresh+m.mid_thresh)+m.treb_thresh)*0.018)))); m.q2=Math.abs(m.bass_residual); m.q3=m.treb_residual; m.q4=Math.sin(m.pulse); m.q5=Math.cos((m.pulse*(0.5+(0.1*m.entropy)))); m.q6=Math.sin((m.pulse*(0.5+pow(0.25, m.entropy)))); m.q7=(((((above(m.q1, 0)+above(m.q2, 0))+above(m.q3, 0))+(above(m.q3, 0)*m.treb_flop))+(above(m.q2, 0)*m.bass_flop))+(above(m.q1, 0)*m.mid_flop)); m.q8=m.entropy; m.ob_r=(0.2+(0.1*Math.sin(((m.time*2.157)+m.q6)))); m.ob_b=(0.2+(0.1*Math.sin(((m.time*1.689)+m.q5)))); m.ob_g=(0.2+(0.1*Math.sin(((m.time*0.413)+m.q4)))); m.ib_r=(0.8+(0.2*Math.cos(((m.time*1.2)+(m.q1*0.1))))); m.ib_b=(0.2+(0.2*Math.cos(((m.time*2.811)+(m.q2*0.1))))); m.ib_g=(0.7+(0.3*Math.cos(((m.time*1.666)+(m.q3*0.1))))); m.ib_size=(0.03+(0.02*m.q2)); m.ob_size=(0.03+(0.02*Math.sin(((m.time*2.321)+(m.q2*0.2))))); m.ob_a=(0.75+(0.25*m.q3)); m.ib_a=(0.8+(0.2*Math.sin((((m.q2*0.3)+m.q4)+(m.q1*0.5))))); m.mv_r=(m.mv_r+(0.5*Math.sin((m.q4+(m.time*0.678))))); m.mv_b=(m.mv_b+(0.5*Math.sin((m.q4+(m.time*0.789))))); m.mv_g=Math.max((m.mv_g+(0.5*Math.sin((m.q5+(m.time*0.456))))), 0.5); m.mv_a=(0.2*Math.sin(((m.time*1.178)+(m.q5*1.14)))); m.rot=0; m.wave_r=(0.6+(0.4*Math.sin((m.q1+(m.time*2.183))))); m.wave_b=(0.6+(0.4*Math.sin((m.q2+(m.time*1.211))))); m.wave_g=(0.6+(0.4*Math.sin((m.q3+(m.time*1.541))))); m.wave_mystery=(m.wave_mystery+(0.3*Math.sin(((m.time*2.18)+m.q6)))); m.wave_x=((m.wave_x+(0.3*Math.sin((m.time*0.811))))+(0.005*mod(m.frame,3))); m.wave_y=((m.wave_y+(0.3*Math.sin((m.time*0.788))))+(0.005*mod(m.frame,3))); m.wave_a=((3+Math.sin((m.time*1.414)))+m.q3); m.zoom=(m.zoom+(0.05*Math.sin((m.time*1.69)))); m.q1=(0.05*above(((m.bass_thresh+m.mid_thresh)+m.treb_thresh), 5.5));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.xx=(((((m.x-0.5)+(0.03*m.q5))+((0.1*m.y)*m.q6))+(0.1*Math.sin((m.time*0.322))))*2); m.yy=(((((m.y-0.5)+(0.03*m.q6))+((0.1*m.x)*m.q5))+(0.1*Math.sin((m.time*0.427))))*2); m.dx=Math.sin(m.xx); m.dy=Math.sin(m.yy); m.rot=Math.sin((m.rad*(((m.xx*m.q4)+(m.yy*m.q5))+(1.7*m.q6))));","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  float tmpvar_1;\n  tmpvar_1 = abs(((\n    fract((((ang / 6.28) * 7.0) + (time * 0.05)))\n   * 2.0) - 1.0));\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(tmpvar_1);\n  tmpvar_2.y = sin(tmpvar_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (-0.3 + (1.7 * texture (sampler_main, (0.5 + \n    ((pow (rad, 0.5) * 0.5) * tmpvar_2)\n  )).xyz));\n  ret = tmpvar_3.xyz;\n}\n\n"}