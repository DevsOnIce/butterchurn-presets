{"baseVals":{"rating":5,"gammaadj":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.037,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"x":0.72,"y":0.19,"rad":0.59959,"ang":3.76991,"tex_zoom":0.73458,"r":0,"g":1,"a2":1,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.14165,"tex_zoom":0.73458,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.w = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.dt = 0;\nm.dm = 0;\nm.mm = 0;\nm.tt = 0;\nm.q11 = 0;\nm.q16 = 0;\nm.db = 0;\nm.q17 = 0;\nm.bb = 0;\nm.q14 = 0;","frame_eqs_str":"m.warp=0; m.zoom=1; m.rot=0; m.db=((m.db*0.98)+(m.bass*0.2)); m.bb=(m.bb+(m.db*0.1)); m.dt=((m.dt*0.98)+(m.treb*0.2)); m.tt=(m.tt+(m.dt*0.1)); m.dm=((m.dm*0.98)+(m.mid*0.2)); m.mm=(m.mm+(m.dm*0.1)); m.w=((m.bb-m.tt)*0.1); m.q11=Math.sin(m.w); m.q12=Math.cos(m.w); m.q13=(0.5+(Math.sin(((m.bb-m.mm)*0.1))*0.25)); m.q14=(0.5+(Math.sin(((m.tt-m.mm)*0.1))*0.25)); m.q15=4; m.q16=0.06; m.q17=Math.sin(-m.w); m.q18=Math.cos(-m.w);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_orig - 0.5) * vec2(1.82, 1.82));\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((tmpvar_3.x * tmpvar_3.x) - (tmpvar_3.y * tmpvar_3.y));\n  tmpvar_4.y = ((2.0 * tmpvar_3.x) * tmpvar_3.y);\n  my_uv2_1 = (tmpvar_4 + vec2(0.45, 0.704));\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(1.0, 0.0) * tmpvar_5))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_6.y = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(0.0, 1.0) * tmpvar_5))\n  ).xyz * scale1) + bias1)).y;\n  ret_2.y = (texture (sampler_fc_main, (my_uv2_1 + (\n    (tmpvar_6 * texsize.zw)\n   * 2.0))).y - 0.01);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_rr_1;\n  vec2 uv_r_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q13;\n  tmpvar_3.y = q14;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - tmpvar_3) * aspect.xy);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((q12 * tmpvar_4.x) - (q11 * tmpvar_4.y));\n  tmpvar_5.y = ((q11 * tmpvar_4.x) + (q12 * tmpvar_4.y));\n  uv_r_2 = (q15 * tmpvar_5);\n  uv_r_2 = (tmpvar_3 + (uv_r_2 * aspect.zw));\n  uv_r_2 = (1.0 - abs((\n    (fract((uv_r_2 * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_r_2 - tmpvar_3) * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((q18 * tmpvar_6.x) - (q17 * tmpvar_6.y));\n  tmpvar_7.y = ((q17 * tmpvar_6.x) + (q18 * tmpvar_6.y));\n  uv_rr_1 = (q15 * tmpvar_7);\n  uv_rr_1 = (tmpvar_3 + ((\n    (uv_rr_1 - tmpvar_3)\n   * aspect.zw) * q16));\n  uv_rr_1 = (1.0 - abs((\n    (fract((uv_rr_1 * 0.5)) * 2.0)\n   - 1.0)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = texture (sampler_fc_main, uv_rr_1).xyz;\n  ret = tmpvar_8.xyz;\n}\n\n"}