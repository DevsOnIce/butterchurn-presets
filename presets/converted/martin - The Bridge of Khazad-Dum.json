{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":571,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.px = 0;\nm.fov = 0;\nm.q12 = 0;\nm.copy = 0;\nm.q18 = 0;\nm.tht = 0;\nm.q15 = 0;\nm.flim = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.py = 0;\nm.mov1 = 0;\nm.vis = 0;\nm.oz = 0;\nm.k1 = 0;\nm.q11 = 0;\nm.z0 = 0;\nm.q10 = 0;\nm.copies = 0;\nm.v0 = 0;\nm.q4 = 0;\nm.burst = 0;\nm.oy = 0;\nm.rota = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.spur = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.rotmode = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.phi = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.mov1=m.q1; m.rotmode=m.q3; m.burst=m.q10; m.copies=m.q14; m.copy=div(mod(m.instance,m.copies),m.copies); m.k1=div((Math.floor(div(m.instance,m.copies))*m.copies),m.num_inst); m.k1=(div(Math.floor((m.k1*m.burst)),m.burst)+div(m.k1,m.burst)); m.mov1=((m.mov1+m.k1)-(m.copy*m.q2)); m.mov1=(m.mov1-Math.floor(m.mov1)); m.rotmode=(m.rotmode-(m.copy*m.q4)); m.rota=(((m.mov1*m.rotmode)*m.q5)*2); m.mov1=((m.mov1*(1-m.rotmode))+(m.rotmode*(0.5+(0.025*m.k1)))); m.mov1=pow(m.mov1, 0.9); m.tht=(Math.sin(((m.k1*m.k1)*123.2))*(0.2+(m.rotmode*0.0))); m.phi=((m.k1*1613.3)+m.rota); m.v0=((1.0+(0.3*Math.cos((m.k1*13234.7))))*m.q5); m.z0=div(m.q18,m.q5); m.t0=0.4; m.spur=(((m.mov1-m.t0)*above((m.mov1-m.t0), 0))*m.q15); m.py=(m.spur*Math.sin((m.copy*6.28))); m.px=(m.spur*Math.cos((m.copy*6.28))); m.fov=(m.z0*2); m.ox=((((m.mov1-m.q19)*m.v0)*Math.sin(m.tht))*Math.cos(m.phi)); m.oy=((((m.mov1*m.v0)*(1-m.mov1))*Math.cos((2*m.tht)))-0.25); m.oz=(((m.mov1*m.v0)*Math.sin(m.tht))*Math.sin(m.phi)); m.ox=((m.ox+((m.k1-0.5)*m.q17))+m.px); m.oy=(m.oy-m.py); m.oz=(m.oz+(m.py*3)); m.rad=(div((0.025*m.z0),(m.oz+m.z0))*(1-(m.mov1*0.5))); m.x=(0.5+div((m.fov*m.ox),(m.oz+m.z0))); m.y=(0.5+div((m.fov*m.oy),(m.oz+m.z0))); m.vis=((above(m.mov1, m.q11)*below(m.mov1, m.q12))*above(m.oz, -m.z0)); m.a=(div((m.vis*0.7),sqrt(m.copies))*(1+above(m.spur, 0))); m.a2=0.0; m.g=m.flim;"},{"baseVals":{"enabled":1,"sides":13,"additive":1,"num_inst":212,"x":0.65,"y":0.38,"rad":1.26467,"tex_zoom":0.73678,"g":1,"a":0.3,"r2":1,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"m.mov2 = 0;\nm.q25 = 0;\nm.copy = 0;\nm.tht = 0;\nm.q29 = 0;\nm.trel = 0;\nm.mov1 = 0;\nm.oz = 0;\nm.k1 = 0;\nm.z0 = 0;\nm.copies = 0;\nm.k2 = 0;\nm.oy = 0;\nm.stray = 0;\nm.q27 = 0;\nm.size0 = 0;\nm.phase = 0;\nm.t0 = 0;\nm.phi = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trel=m.q25; m.copies=1; m.copy=div(mod(m.instance,m.copies),m.copies); m.k1=div((Math.floor(div(m.instance,m.copies))*m.copies),m.num_inst); m.k2=(m.k1+0.5); m.trel=m.trel; m.t0=0.5; m.phase=above(m.trel, m.t0); m.mov1=(bnot(m.phase)*((m.t0-m.trel)+(0.01*m.k1))); m.mov2=(m.phase*(m.trel-m.t0)); m.stray=(1.2-m.phase); m.tht=((3.14*Math.sin(((1234.2*m.k1)+(m.time*bnot(m.phase)))))*m.stray); m.phi=(3245.1*m.k1); m.size0=0.02; m.ox=((m.mov1*m.q27)+((Math.sin(m.tht)*Math.cos(m.phi))*(m.size0+(m.mov2*(2+m.k1))))); m.oy=((m.mov1*12)+div(((Math.cos(m.tht)*(m.size0+((4*m.mov2)*m.k2)))*(1-(m.mov2*m.k2))),2)); m.oz=((m.mov1*8)+((Math.sin(m.tht)*Math.sin(m.phi))*(m.size0+((m.mov2*2)*(2+m.k1))))); m.z0=1; m.rad=div(div(0.03,(m.oz+m.z0)),(1+div((m.trel*rand(100)),50))); m.x=(0.5+div(m.ox,(m.oz+m.z0))); m.y=((m.q29+0.2)+div(m.oy,(m.oz+m.z0))); m.a=((0.1*bnot(m.phase))+(((m.phase*Math.max(0, (1-(m.mov2*0))))*above((m.oz+m.z0), 0))*0.8));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.stop = 0;\nm.q25 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.vshift = 0;\nm.lo = 0;\nm.xtime = 0;\nm.t0a = 0;\nm.mov1 = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.hpeak = 0;\nm.q10 = 0;\nm.copies = 0;\nm.q4 = 0;\nm.med = 0;\nm.hi = 0;\nm.vs0 = 0;\nm.bursts = 0;\nm.spb_ = 0;\nm.volb = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.vol = 0;\nm.peak = 0;\nm.spur = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.rotmode = 0;\nm.wind = 0;\nm.tmp = 0;\nm.xbase = 0;\nm.speed = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.q32 = 0;\nm.spread = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.volx = 0;\nm.t0a=m.time; m.t0=(m.time+0.5); m.spb_=0.5; m.volb=0.5; m.volx=0.5; m.vol_=1; m.index=0; m.mov1=0;","frame_eqs_str":"m.dec_med=pow(0.85, div(30,m.fps)); m.dec_slow=pow(0.95, div(30,m.fps)); m.vol=div(((m.bass+m.med)+m.treb),1.5); m.vol_=((m.vol_*m.dec_slow)+((1-m.dec_slow)*m.vol)); m.is_beat=(above(m.vol, ((0.1+m.vol_)+(2*m.peak)))*above(m.time, (m.t0+(m.spb_*0.45)))); m.t0a=((m.is_beat!=0)?(m.t0):(m.t0a)); m.t0=((m.is_beat!=0)?(m.time):(m.t0)); m.peak=((m.is_beat!=0)?(m.vol):((m.peak*m.dec_med))); m.index=mod((m.index+m.is_beat),128); m.spb_=((m.is_beat!=0)?(((m.spb_*0.9)+(0.1*Math.min(((m.t0-m.t0a)+0.01), 2)))):(m.spb_)); m.q20=m.vol_; m.q21=above(m.vol, (2.7*m.vol_)); m.q22=(Math.max(0, (m.peak-0.0))+0.01); m.hpeak=((m.hpeak*m.dec_med)+((1-m.dec_med)*m.q21)); m.q23=(m.hpeak*(1+rand(8))); m.q24=m.is_beat; m.volb=((bnot(m.q24)*m.volb)+(m.q24*m.vol_)); m.volx=(m.volx+((div(0.2,m.fps)*Math.max(Math.min((m.volb-m.volx), 1), -1))*bnot(m.rotmode))); m.rotmode=Math.max(Math.min(((Math.sin((div(m.mov1,2.4)-1.5))*4)-3), 1), 0); m.stop=(((bnot(m.stop)!=0)?(bnot(mod(m.index,24))):(below(m.lo, 1)))*bnot(m.rotmode)); m.spread=((below(m.lo, 1)!=0)?(m.spread):(div((rand(2)*rand(12)),20))); m.copies=((below(m.lo, 1)!=0)?(m.copies):((3+(rand(2)*rand(8))))); m.spur=((below(m.lo, 1)!=0)?(m.spur):((above(m.copies, 5)*0.1))); m.bursts=((below(m.lo, 1)!=0)?(m.bursts):((1+(rand(2)*rand(6))))); m.xbase=((below(m.lo, 1)!=0)?(m.xbase):((rand(2)*(div(rand(10),10)-0.5)))); m.vs0=(((m.is_beat*bnot(mod(m.index,77)))!=0)?((div(rand(5),4)-0.7)):(m.vs0)); m.vshift=(m.vshift+(div(3,m.fps)*Math.max(Math.min((m.vs0-m.vshift), 0.04), -0.04))); m.speed=div(div(0.15,m.fps),m.spb_); m.tmp=m.mov1; m.mov1=(m.mov1+m.speed); m.q2=(m.mov1-m.tmp); m.q1=m.mov1; m.tmp=m.rotmode; m.q3=m.rotmode; m.q4=(m.rotmode-m.tmp); m.tmp=m.volx; m.q5=m.volx; m.q6=(m.q5-m.tmp); m.q10=m.bursts; m.lo=((m.stop!=0)?((m.lo+m.speed)):(0)); m.hi=((above(m.lo, 1)!=0)?(0):((m.hi+m.speed))); m.q11=m.lo; m.q12=m.hi; m.q13=(sqrt(m.q22)*0); m.q14=m.copies; m.q15=(m.spur*(1-m.rotmode)); m.q16=0; m.q17=(m.spread*(1-m.rotmode)); m.q18=div(1,Math.min(Math.max((Math.sin(div(m.mov1,2))*10), 1), 4)); m.q19=m.xbase; m.xtime=((((m.stop*m.q21)*above(m.xtime, 2))!=0)?(0):((m.xtime+div(0.2,m.fps)))); m.q25=m.xtime; m.q26=((below(m.xtime, 0.55)!=0)?(pow(32, (-sqr((m.xtime-0.55))*512))):(pow(2, (-sqr((m.xtime-0.55))*3)))); m.q27=(Math.sin(div(m.time,29))*4); m.wind=(m.wind+(div(0.5,m.fps)*(m.volx-1.5))); m.q28=m.wind; m.q29=m.vshift; m.q30=(Math.max((Math.sin(div(m.mov1,2.2))*Math.sin(div(m.time,7))), 0)+m.q26); m.q31=(((m.q5*2)-2)+Math.sin(div(m.time,17))); m.q32=(3+(2*Math.sin(div(m.time,27)))); m.monitor=m.vshift;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1; m.dy=-0.00; m.warp=0.0;","warp":"mat2 ofs;\nfloat xlat_mutablegreen;\nfloat xlat_mutablek1;\nfloat xlat_mutablered;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablewave;\nfloat xlat_mutablezv;\nshader_body\n{\n  mat2 tmpvar_1;\n  tmpvar_1[uint(0)].x = texsize.z;\n  tmpvar_1[uint(0)].y = 0.0;\n  tmpvar_1[1u].x = 0.0;\n  tmpvar_1[1u].y = texsize.w;\n  ofs = (tmpvar_1 * 4.0);\n  float delta_2;\n  float ky_3;\n  vec2 tmpvar_4;\n  tmpvar_4.x = (uv.x - 0.5);\n  tmpvar_4.y = ((uv.y - 0.5) + q29);\n  vec2 v_5;\n  v_5.x = ofs[0].x;\n  v_5.y = ofs[1].x;\n  vec2 v_6;\n  v_6.x = ofs[0].x;\n  v_6.y = ofs[1].x;\n  vec2 v_7;\n  v_7.x = ofs[0].y;\n  v_7.y = ofs[1].y;\n  vec2 v_8;\n  v_8.x = ofs[0].y;\n  v_8.y = ofs[1].y;\n  vec2 tmpvar_9;\n  tmpvar_9.x = (texture (sampler_main, (uv + v_5)) - texture (sampler_main, (uv - v_6))).x;\n  tmpvar_9.y = (texture (sampler_main, (uv + v_7)) - texture (sampler_main, (uv - v_8))).x;\n  xlat_mutablered = (0.5 * texture (sampler_main, (uv - (0.004 * tmpvar_9))).x);\n  xlat_mutablered = (xlat_mutablered + (0.5 * texture (sampler_main, uv).x));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.x;\n  tmpvar_10.y = (0.0078125 * (float(\n    int((tmpvar_4.y * 128.0))\n  ) + abs(\n    (fract((tmpvar_4.y * 128.0)) - 0.5)\n  )));\n  vec2 tmpvar_11;\n  tmpvar_11 = (tmpvar_10 * 4.0);\n  ky_3 = clamp ((-0.5 - tmpvar_11.y), 0.0, 1.0);\n  xlat_mutablek1 = (abs((\n    fract((tmpvar_11.x * 2.0))\n   - 0.5)) * 8.0);\n  xlat_mutablek1 = (xlat_mutablek1 - sign(xlat_mutablek1));\n  delta_2 = (0.1 + (rand_preset * 0.05)).x;\n  xlat_mutablek1 = (xlat_mutablek1 - ((\n    (4.0 * sign(xlat_mutablek1))\n   * ky_3) * ky_3));\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\n  xlat_mutablek1 = (xlat_mutablek1 - ((\n    (8.0 * sign(xlat_mutablek1))\n   * ky_3) * ky_3));\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\n  xlat_mutablek1 = (xlat_mutablek1 - ((\n    (12.0 * sign(xlat_mutablek1))\n   * ky_3) * ky_3));\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\n  xlat_mutablek1 = (xlat_mutablek1 - ((\n    (16.0 * sign(xlat_mutablek1))\n   * ky_3) * ky_3));\n  ky_3 = clamp ((ky_3 - delta_2), 0.0, 1.0);\n  float tmpvar_12;\n  tmpvar_12 = clamp (xlat_mutablek1, -1.6, 1.6);\n  xlat_mutablek1 = tmpvar_12;\n  xlat_mutablegreen = (cos((tmpvar_12 * 2.0)) - 0.1);\n  xlat_mutablewave = ((sin(\n    ((q1 * 8.0) - (uv.x * 6.0))\n  ) / 2.0) * q3);\n  xlat_mutablewave = ((xlat_mutablewave * float(\n    (xlat_mutablewave >= 0.0)\n  )) + (q30 * 0.02));\n  xlat_mutablered = (xlat_mutablered + ((\n    (xlat_mutablewave / abs(sin((\n      (1.0/(tmpvar_12))\n     + \n      (q1 / 8.0)\n    ))))\n   * xlat_mutablegreen) * ky_3));\n  xlat_mutablezv = ((time * 0.08) + (0.2 * sin(\n    ((uv * 16.0) + time)\n  ))).x;\n  vec2 tmpvar_13;\n  tmpvar_13.x = q28;\n  tmpvar_13.y = (0.2 * time);\n  xlat_mutableuv2 = ((tmpvar_4 * 2.0) + tmpvar_13);\n  vec3 tmpvar_14;\n  tmpvar_14.xy = xlat_mutableuv2;\n  tmpvar_14.z = xlat_mutablezv;\n  vec3 tmpvar_15;\n  tmpvar_15.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\n  tmpvar_15.z = (xlat_mutablezv * 2.0);\n  vec3 tmpvar_16;\n  tmpvar_16.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\n  tmpvar_16.z = (xlat_mutablezv * 3.0);\n  vec3 tmpvar_17;\n  tmpvar_17.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\n  tmpvar_17.z = (xlat_mutablezv * 7.0);\n  xlat_mutableuv2 = (tmpvar_4 + ((\n    ((texture (sampler_noisevol_hq, tmpvar_14).z + (texture (sampler_noisevol_hq, tmpvar_15).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_16).z / 4.0))\n   + \n    (texture (sampler_noisevol_hq, tmpvar_17).z / 8.0)\n  ) * 0.1));\n  vec3 tmpvar_18;\n  tmpvar_18.x = xlat_mutablered;\n  tmpvar_18.y = xlat_mutablegreen;\n  tmpvar_18.z = ((1.0 + xlat_mutableuv2.y) * sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)));\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ((tmpvar_18 * 0.8) - 0.005);\n  ret = tmpvar_19.xyz;\n}\n\n","comp":"float trel;\nfloat vshift;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nfloat xlat_mutablesmoke;\nfloat xlat_mutablesmoke2;\nvec2 xlat_mutableuv_l;\nfloat xlat_mutablew;\nfloat xlat_mutablez;\nshader_body\n{\n  trel = (time / 2.0);\n  vshift = (0.5 - q29);\n  vec2 tmpvar_1;\n  tmpvar_1.x = rand_preset.x;\n  tmpvar_1.y = ((-0.1 - (rand_preset.y / 2.0)) + vshift);\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = (0.005 * time);\n  xlat_mutableuv_l = (uv + tmpvar_2);\n  vec2 tmpvar_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  tmpvar_3 = sin(((\n    (tmpvar_4 * aspect.xy)\n   + 0.5) - (tmpvar_1 * aspect.xy)));\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(uv);\n  vec3 tmpvar_6;\n  tmpvar_6 = vec3((texture (sampler_fc_main, tmpvar_5).x + (2.0 * (\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2).x)));\n  vec3 tmpvar_7;\n  tmpvar_7.x = tmpvar_6.x;\n  tmpvar_7.y = pow (tmpvar_6.x, 2.1);\n  tmpvar_7.z = pow (tmpvar_6.x, 4.0);\n  xlat_mutablew = ((uv.y - (\n    ((dot (texture (sampler_noise_hq, vec2((xlat_mutableuv_l.x / 6.0))), vec4(0.32, 0.49, 0.29, 0.0)) + uv.x) - 0.5)\n   / 4.0)) - vshift);\n  xlat_mutablez = (0.2 / xlat_mutablew);\n  float tmpvar_8;\n  tmpvar_8 = clamp ((-0.2 - (\n    (8.0 * q5)\n   * xlat_mutablew)), 0.0, 1.0);\n  xlat_mutablers0.x = (((uv.x - 0.5) * (1.0 + \n    abs(xlat_mutablez)\n  )) * 2.0);\n  xlat_mutablers0.y = xlat_mutablez;\n  xlat_mutablers0 = (xlat_mutablers0 * ((4.0 * \n    float((xlat_mutablez <= 0.0))\n  ) + 1.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = 0.0;\n  tmpvar_9.y = (1.5 + xlat_mutablew);\n  vec2 x_10;\n  x_10 = (xlat_mutablers0 - tmpvar_9);\n  float tmpvar_11;\n  tmpvar_11 = ((q26 / sqrt(\n    dot (x_10, x_10)\n  )) / 4.0);\n  xlat_mutablers0 = (xlat_mutablers0 * (1.0 + (tmpvar_11 * tmpvar_11)));\n  xlat_mutablers.x = (xlat_mutablers0 * 2.0).x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (trel * 0.5));\n  float tmpvar_12;\n  tmpvar_12 = (texture (sampler_main, uv).y * tmpvar_8);\n  vec3 tmpvar_13;\n  tmpvar_13.xy = (xlat_mutablers * 2.0);\n  tmpvar_13.z = (0.2 * trel);\n  float tmpvar_14;\n  tmpvar_14 = dot (((\n    ((2.0 * clamp ((texture (sampler_noisevol_hq, \n      (tmpvar_13 * float((xlat_mutablez >= 0.0)))\n    ) - 0.2), 0.0, 1.0)).xyz * clamp ((texture (sampler_noise_hq, (xlat_mutablers / 16.0)) - 0.5), 0.0, 1.0).x)\n   / \n    sqrt(abs(xlat_mutablez))\n  ) + tmpvar_11), vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_15;\n  tmpvar_15.x = tmpvar_14;\n  tmpvar_15.y = pow (tmpvar_14, 2.1);\n  tmpvar_15.z = pow (tmpvar_14, 6.0);\n  xlat_mutableret1 = (((\n    ((uv.y * (1.0 + q23)) + (0.1 / sqrt(dot (tmpvar_3, tmpvar_3))))\n   * vec3(0.1, 0.1, 0.2)) * tmpvar_8) + (clamp (tmpvar_15, 0.0, 1.0) * (1.0 - \n    clamp ((-1.0 - (12.0 * xlat_mutablew)), 0.0, 1.0)\n  )));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \n    (tmpvar_12 * 8.0)\n  ), 0.0, 1.0));\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_main, fract((tmpvar_4 + 0.5)));\n  xlat_mutablesmoke = (tmpvar_16.z * (tmpvar_16.z * q5));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((1.0 - \n    ((xlat_mutablesmoke * q32) * tmpvar_8)\n  ), 0.0, 1.0));\n  xlat_mutablesmoke2 = (texture (sampler_main, ((tmpvar_4 / 2.0) + 0.5)).z * q30);\n  xlat_mutableret1 = (xlat_mutableret1 + (clamp (tmpvar_7, 0.0, 1.0) - (\n    ((xlat_mutablez * clamp ((xlat_mutablesmoke + \n      (xlat_mutablew * q31)\n    ), 0.0, 1.0)) * vec3(1.0, 0.4, 0.1))\n   * tmpvar_8)));\n  float tmpvar_17;\n  tmpvar_17 = clamp (((\n    (tmpvar_12 * xlat_mutablez)\n   * xlat_mutablez) / 16.0), 0.0, 1.0);\n  vec3 tmpvar_18;\n  tmpvar_18.x = tmpvar_17;\n  tmpvar_18.y = pow (tmpvar_17, 2.1);\n  tmpvar_18.z = pow (tmpvar_17, 6.0);\n  xlat_mutableret1 = (xlat_mutableret1 + clamp (tmpvar_18, 0.0, 1.0));\n  xlat_mutableret1 = (xlat_mutableret1 * clamp ((\n    (((dot (texture (sampler_noise_mq, vec2(\n      ((xlat_mutableuv_l.x / 4.0) + (0.02 * trel))\n    )), vec4(0.32, 0.49, 0.29, 0.0)) / 6.0) - uv.y) + 0.8)\n   * 32.0), 0.0, 1.0));\n  vec3 tmpvar_19;\n  tmpvar_19.x = xlat_mutablesmoke2;\n  tmpvar_19.y = pow (xlat_mutablesmoke2, 2.1);\n  tmpvar_19.z = pow (xlat_mutablesmoke2, 6.0);\n  xlat_mutableret1 = ((xlat_mutableret1 * clamp (\n    (1.0 - xlat_mutablesmoke2)\n  , 0.0, 1.0)) + clamp (tmpvar_19, 0.0, 1.0));\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = (1.0 - exp((\n    -(xlat_mutableret1)\n   * 2.0)));\n  ret = tmpvar_20.xyz;\n}\n\n"}