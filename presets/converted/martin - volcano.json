{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.195131,"wave_scale":2.540833,"wave_smoothing":0.81,"wave_mystery":0.14,"modwavealphastart":0.47,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_b":0.3,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0.05,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0.7},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.trel = 0;\nm.q9 = 0;\nm.k3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.k2 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.q32 = 0;\nm.q7 = 0;\nm.q20 = 0;\nm.p4 = 0;\nm.q8 = 0;","frame_eqs_str":"m.vol=((m.bass+m.mid)+m.treb); m.vol_=((0.9*m.vol_)+(0.1*m.vol)); m.k1=above(m.vol, (m.vol_*1.3)); m.k2=((m.k2*0.9)+(0.1*m.k1)); m.k3=((m.k3*0.9)+(0.1*m.k2)); m.q10=m.k2; m.q11=m.k3; m.q12=m.vol_; m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),2); m.q27=(m.index+1); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trel=div(m.time,8); m.q5=Math.cos(m.trel); m.q6=Math.sin(m.trel); m.q7=-m.q6; m.q8=m.q5; m.q9=(Math.sin(div(m.time,13))+2); m.q32=pow(0.99, div(30,m.fps));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.p1=Math.sin(div(m.time,7)); m.p2=Math.cos(div(m.time,3)); m.p3=(1+Math.cos(div(m.time,6))); m.p4=(0.5*Math.cos(div(m.time,4.5))); m.dx=((0.004*m.p1)*m.rad); m.dy=((0.004*m.p2)*m.rad); m.zoom=(1+div((pow(m.rad, m.p4)*m.p3),50)); m.rot=0;","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot ((texture (sampler_main, (uv + vec2(0.003, 0.0))) - texture (sampler_main, (uv - vec2(0.003, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_2.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.003))) - texture (sampler_main, (uv - vec2(0.0, 0.003)))), vec4(0.32, 0.49, 0.29, 0.0));\n  ret_1 = ((-(\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.1) + ((texture (sampler_main, \n    (uv + (tmpvar_2 * 0.02))\n  ).xyz + \n    (0.06 * vec3(dot (texture (sampler_noise_lq, ((\n      ((texsize.xy * texsize_noise_lq.zw).x * uv)\n     * 4.0) + rand_frame.xy)), vec4(0.32, 0.49, 0.29, 0.0))))\n  ) - (\n    sqrt(dot (tmpvar_2, tmpvar_2))\n   * 0.03)));\n  ret_1 = (ret_1 * q32);\n  ret_1 = (ret_1 - 0.03);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = (0.7 * dot ((texture (sampler_main, \n    (uv + vec2(0.002, 0.0))\n  ) - texture (sampler_main, \n    (uv - vec2(0.002, 0.0))\n  )), vec4(0.32, 0.49, 0.29, 0.0)));\n  tmpvar_1.y = (0.7 * dot ((texture (sampler_main, \n    (uv + vec2(0.0, 0.002))\n  ) - texture (sampler_main, \n    (uv - vec2(0.0, 0.002))\n  )), vec4(0.32, 0.49, 0.29, 0.0)));\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qb.xy;\n  tmpvar_2[1u] = _qb.zw;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = clamp (((\n    -(q9)\n   * \n    abs(texture (sampler_noise_hq, (((\n      ((16.0 * tmpvar_3) * tmpvar_2)\n     + \n      (time / 8.0)\n    ) + (20.0 * \n      (tmpvar_1 - dot (texture (sampler_main, uv).xyz, vec3(0.32, 0.49, 0.29)))\n    )) / 100.0)).x)\n  ) + 1.0), 0.0, 1.0);\n  vec3 tmpvar_5;\n  tmpvar_5.x = tmpvar_4;\n  tmpvar_5.y = ((tmpvar_4 * (tmpvar_4 - 0.55)) * 2.0);\n  tmpvar_5.z = ((tmpvar_4 - 1.0) * 16.0);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (vec3((0.6 * dot (\n    (texture (sampler_main, ((tmpvar_3 * 0.95) + 0.5)).xyz - 0.05)\n  , vec3(0.32, 0.49, 0.29)))) + clamp (tmpvar_5, 0.0, 1.0));\n  ret = tmpvar_6.xyz;\n}\n\n"}