{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1,"mv_r":0.39,"mv_g":0.44,"mv_b":0.9,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":1,"textured":1,"rad":0.13478,"tex_zoom":1.62835,"r":0.3,"g":0.8,"b":1,"a":0.08,"g2":0.5,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":11,"additive":1,"textured":1,"rad":0.1016,"r":0.3,"g":0.6,"b":1,"a":0.38,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.94761,"r":0.5,"g":0.2,"b":0.8,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.a=(((m.mid_att*m.mid_att)*m.mid)*0.002);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"rad":0.01,"tex_zoom":0.04027,"g":0.2,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=(m.time*0.1); m.a=(m.mid*m.mid_att); m.a=Math.min(m.a, 1); m.a=(1-((m.a*0.4)*above(m.treb, 0.9)));"}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"r":0.3,"g":0.7},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.fade = 0;\nm.spark = 0;\nm.r1 = 0;\nm.g2 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.r2 = 0;\nm.ang = 0;\nm.b2 = 0;\nm.zp = 0;\nm.phase = 0;\nm.g1 = 0;\nm.b1 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=(m.sample*6.283); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.phase=((((Math.sin((m.n*3))*Math.sin((m.n*7.9)))*Math.sin((m.n*16.7)))*Math.sin((m.n*63.5)))*6); m.xp=Math.sin((m.n+m.phase)); m.yp=Math.cos((m.n+m.phase)); m.zp=0; m.ang=((m.n*2)+m.phase); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.r1=0.1; m.g1=0.3; m.b1=1; m.r2=0.7; m.g2=0.1; m.b2=1.0; m.fade=((m.xq*0.5)+0.5); m.r=((m.r1*m.fade)+(m.r2*(1-m.fade))); m.g=((m.g1*m.fade)+(m.g2*(1-m.fade))); m.b=((m.b1*m.fade)+(m.b2*(1-m.fade))); m.ang=(m.time*0.1); m.xp=((m.xq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.yp=m.yq; m.zp=((m.xq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.ang=(m.time*0.17); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.zq=(m.zq+3.1); m.xs=div(m.xq,m.zq); m.ys=div(m.yq,m.zq); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.a=((1*0.3)*pow(((Math.sin(((m.n*4)+m.time))*0.5)+0.5), 2)); m.spark=Math.sin((m.phase*35)); m.r=((above(m.spark, 0.93)!=0)?(0.6):(m.r)); m.g=((above(m.spark, 0.93)!=0)?(0.8):(m.g)); m.b=((above(m.spark, 0.93)!=0)?(1.0):(m.b));"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.fade = 0;\nm.r1 = 0;\nm.g2 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.r2 = 0;\nm.ang = 0;\nm.b2 = 0;\nm.wave = 0;\nm.zp = 0;\nm.phase = 0;\nm.g1 = 0;\nm.b1 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=((m.sample*0.03)+(m.time*0.01)); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.phase=((((Math.sin((m.n*3))*Math.sin((m.n*7.9)))*Math.sin((m.n*16.7)))*Math.sin((m.n*63.5)))*6); m.xp=Math.sin((m.n+m.phase)); m.yp=Math.cos((m.n+m.phase)); m.zp=0; m.ang=((m.n*2)+m.phase); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.r1=0.1; m.g1=0.3; m.b1=1; m.r2=1.0; m.g2=0.1; m.b2=0.5; m.fade=((m.xq*0.5)+0.5); m.r=((m.r1*m.fade)+(m.r2*(1-m.fade))); m.g=((m.g1*m.fade)+(m.g2*(1-m.fade))); m.b=((m.b1*m.fade)+(m.b2*(1-m.fade))); m.ang=(m.time*0.1); m.xp=((m.xq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.yp=m.yq; m.zp=((m.xq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.ang=(m.time*0.17); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.zq=(m.zq+3.1); m.xs=div(m.xq,m.zq); m.ys=div(m.yq,m.zq); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.wave=((((Math.sin((m.n*8000))*Math.sin((m.n*690)))*Math.sin((m.n*17000)))*0.5)+0.5); m.a=((m.sample*m.wave)*0.4);"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.fade = 0;\nm.r1 = 0;\nm.g2 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.r2 = 0;\nm.ang = 0;\nm.b2 = 0;\nm.wave = 0;\nm.zp = 0;\nm.phase = 0;\nm.g1 = 0;\nm.b1 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=(((m.sample*0.03)+(m.time*0.01))+2.1); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.phase=((((Math.sin((m.n*3))*Math.sin((m.n*7.9)))*Math.sin((m.n*16.7)))*Math.sin((m.n*63.5)))*6); m.xp=Math.sin((m.n+m.phase)); m.yp=Math.cos((m.n+m.phase)); m.zp=0; m.ang=((m.n*2)+m.phase); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.r1=0.1; m.g1=0.3; m.b1=1; m.r2=1.0; m.g2=0.1; m.b2=0.5; m.fade=((m.xq*0.5)+0.5); m.r=((m.r1*m.fade)+(m.r2*(1-m.fade))); m.g=((m.g1*m.fade)+(m.g2*(1-m.fade))); m.b=((m.b1*m.fade)+(m.b2*(1-m.fade))); m.ang=(m.time*0.1); m.xp=((m.xq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.yp=m.yq; m.zp=((m.xq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.ang=(m.time*0.17); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.zq=(m.zq+3.1); m.xs=div(m.xq,m.zq); m.ys=div(m.yq,m.zq); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.wave=((((Math.sin((m.n*8000))*Math.sin((m.n*690)))*Math.sin((m.n*17000)))*0.5)+0.5); m.a=((m.sample*m.wave)*0.4);"},{"baseVals":{"enabled":1,"thick":1,"additive":1},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.fade = 0;\nm.r1 = 0;\nm.g2 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.r2 = 0;\nm.ang = 0;\nm.b2 = 0;\nm.wave = 0;\nm.zp = 0;\nm.phase = 0;\nm.g1 = 0;\nm.b1 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=(((m.sample*0.03)+(m.time*0.01))+4.2); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.phase=((((Math.sin((m.n*3))*Math.sin((m.n*7.9)))*Math.sin((m.n*16.7)))*Math.sin((m.n*63.5)))*6); m.xp=Math.sin((m.n+m.phase)); m.yp=Math.cos((m.n+m.phase)); m.zp=0; m.ang=((m.n*2)+m.phase); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.r1=0.1; m.g1=0.3; m.b1=1; m.r2=1.0; m.g2=0.1; m.b2=0.5; m.fade=((m.xq*0.5)+0.5); m.r=((m.r1*m.fade)+(m.r2*(1-m.fade))); m.g=((m.g1*m.fade)+(m.g2*(1-m.fade))); m.b=((m.b1*m.fade)+(m.b2*(1-m.fade))); m.ang=(m.time*0.1); m.xp=((m.xq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.yp=m.yq; m.zp=((m.xq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.ang=(m.time*0.17); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.zq=(m.zq+3.1); m.xs=div(m.xq,m.zq); m.ys=div(m.yq,m.zq); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.wave=((((Math.sin((m.n*8000))*Math.sin((m.n*690)))*Math.sin((m.n*17000)))*0.5)+0.5); m.a=((m.sample*m.wave)*0.4);"}],"init_eqs_str":"m.index2 = 0;\nm.q25 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.dx1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.rot1 = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.96, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),4); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.p3=((m.dec_med*m.p3)+((1-m.dec_med)*m.p2)); m.rott=div((m.p3*3.1416),2); m.rot1=(m.rot1+m.q26); m.q25=(0.01*m.rot1); m.q27=(8-m.index); m.q28=m.index3; m.dx1=((m.dec_med*m.dx1)+((1-m.dec_med)*bnot(m.index2))); m.q29=m.dx1; m.monitor=m.q29; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=0; m.dx=(0.02*m.q29); m.zoom=1;","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv - vec2(0.5, 0.5)) * texsize.xy) * 0.015);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (((0.985 * texture (sampler_main, \n    (uv + (((\n      (clamp ((sin(tmpvar_1) / cos(tmpvar_1)), vec2(-12.0, -12.0), vec2(12.0, 12.0)) * cos(((4.0 * \n        (q2 + 1.0)\n      ) * tmpvar_1.yx)))\n     * texsize.zw) * 4.0) * (2.0 + q1)))\n  ).xyz) + vec3(0.01, 0.01, 0.01)) - 0.02);\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.15 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.2));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  float tmpvar_8;\n  tmpvar_8 = (0.15 * time);\n  uv2_3.y = (tmpvar_5 + tmpvar_8);\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_7;\n  tmpvar_9.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_9.y + tmpvar_8);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.5 * crisp_1) * rad);\n  float tmpvar_10;\n  tmpvar_10 = clamp ((1.0 - (200.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_10)) + (tmpvar_10 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_11.xyz;\n}\n\n"}