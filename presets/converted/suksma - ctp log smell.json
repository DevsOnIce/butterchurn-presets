{"baseVals":{"rating":5,"gammaadj":1.7,"decay":0.995,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":0,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":1,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":100,"wave_scale":1.186,"wave_smoothing":0.5,"wave_mystery":0,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1,"warpscale":1,"zoomexp":1,"fshader":1,"zoom":1,"rot":0,"cx":0.5,"cy":0.5,"dx":0.00001,"dy":0.00001,"warp":0.01,"sx":1,"sy":1,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.01,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_dx":0,"mv_dy":0,"mv_l":1,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.22167,"ang":0,"tex_ang":0,"tex_zoom":2.2167,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":1},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=m.q1; m.g=m.q2; m.b=m.q3; m.r2=m.q2; m.g2=m.q3; m.b2=m.q1; m.x=(((m.x+(0.21*Math.cos(m.time)))+(0.121*Math.sin((1.2*m.time))))+(0.15*Math.sin((0.63*m.time)))); m.y=(((m.y+(0.134*Math.cos((1.13*m.time))))+(0.2*Math.sin((0.8*m.time))))+(0.213*Math.sin((0.43*m.time)))); m.border_r=m.q3; m.border_b=m.q2; m.border_g=m.q1; m.ang=(m.ang+(4.52*Math.cos(m.time)));"},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.24486,"ang":0,"tex_ang":0,"tex_zoom":1.48885,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":1},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=m.q2; m.g=m.q3; m.b=m.q1; m.r2=m.q3; m.g2=m.q1; m.b2=m.q2; m.x=(((m.x+(0.11*Math.cos((0.6*m.time))))+(0.122*Math.sin((1.12*m.time))))+(0.155*Math.sin((0.83*m.time)))); m.y=(((m.y+(0.134*Math.cos((0.513*m.time))))+(0.126*Math.sin((1.48*m.time))))+(0.13*Math.sin((0.743*m.time)))); m.border_r=m.q1; m.border_b=m.q2; m.border_g=m.q3; m.ang=(m.ang+(4.52*Math.cos(m.time)));"},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.27048,"ang":0,"tex_ang":0,"tex_zoom":0.55044,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":1},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=m.q3; m.g=m.q1; m.b=m.q2; m.r2=m.q1; m.g2=m.q2; m.b2=m.q3; m.x=(((m.x+(0.201*Math.cos((1.11*m.time))))+(0.1022*Math.sin((1.512*m.time))))+(0.215*Math.sin((0.83*m.time)))); m.y=(((m.y+(0.134*Math.cos((1.03*m.time))))+(0.1026*Math.sin((0.648*m.time))))+(0.2*Math.sin((1.743*m.time)))); m.border_r=m.q1; m.border_b=m.q3; m.border_g=m.q2; m.ang=(m.ang+(4.52*Math.cos(m.time)));"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.treb_tick = 0;\nm.bass_shift = 0;\nm.thresh = 0;\nm.q1 = 0;\nm.dy_r = 0;\nm.bass_tick = 0;\nm.mid_tick = 0;\nm.dx_r = 0;\nm.treb_shift = 0;\nm.mid_shift = 0;\nm.q2 = 0;\nm.q3 = 0;","frame_eqs_str":"m.bass_tick=((above(m.bass_att, m.bass_tick)*2)+((1-above(m.bass_att, m.bass_tick))*(((m.bass_tick-1.3)*0.96)+1.3))); m.treb_tick=((above(m.treb_att, m.treb_tick)*2)+((1-above(m.treb_att, m.treb_tick))*(((m.treb_tick-1.3)*0.96)+1.3))); m.mid_tick=((above(m.mid_att, m.mid_tick)*2)+((1-above(m.mid_att, m.mid_tick))*(((m.mid_tick-1.3)*0.96)+1.3))); m.bass_shift=(((equal(m.bass_tick, 2)*0.95)*Math.sin((m.time*5)))+((1-equal(m.bass_tick, 2))*m.bass_shift)); m.treb_shift=(((equal(m.treb_tick, 2)*0.95)*Math.sin((m.time*5)))+((1-equal(m.treb_tick, 2))*m.treb_shift)); m.mid_shift=(((equal(m.mid_tick, 2)*0.95)*Math.sin((m.time*5)))+((1-equal(m.mid_tick, 2))*m.mid_shift)); m.wave_r=(m.wave_r+m.bass_shift); m.wave_g=(m.wave_g+m.mid_shift); m.wave_b=(m.wave_b+m.treb_shift); m.ob_r=(1-Math.abs(m.wave_r)); m.ob_g=(1-Math.abs(m.wave_g)); m.ob_b=(1-Math.abs(m.wave_b)); m.ib_r=(1-Math.abs(m.wave_b)); m.ib_g=(1-Math.abs(m.wave_r)); m.ib_b=(1-Math.abs(m.wave_r)); m.ob_size=(m.ob_size+(0.15*Math.sin(m.bass_att))); m.ib_size=(m.ib_size+(0.15*Math.cos(m.treb_att))); m.ob_a=(m.ob_a-(0.5*Math.sin(m.bass_att))); m.ib_a=(m.ib_a-(0.5*Math.sin(m.mid_att))); m.q1=m.wave_r; m.q2=m.wave_b; m.q3=m.wave_g;\n\t\tm.rkeys = ['thresh','dx_r','dy_r','sx','sy','rot'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.sx=(m.sx+((16*m.dx_r)*Math.sin((((0.5-(m.rad*3))*2)-Math.sin((2.1*Math.abs(((m.x*13)-(div(m.bass_att,m.y)*m.rad))))))))); m.sy=(m.sy+((16*m.dy_r)*Math.sin((((0.5-(m.rad*3))*2)-Math.sin((2.1*Math.abs(((m.y*13)-(div(m.bass_att,m.x)*m.rad))))))))); m.rot=(m.rot+(0.2*Math.cos((((m.rad*3)*2)-Math.cos((4*Math.abs(((m.rad*12)-(div(m.bass_att,m.x)*m.y)))))))));","warp":"","comp":"shader_body\n{\n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (vec3((0.25 * dot (\n    clamp ((2.0 * ((tmpvar_6.xyz * scale3) + bias3)), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29)))) - (0.8 * dot (\n    clamp (((20.0 * (\n      (0.6 * ((texture (sampler_blur2, uv).xyz * scale2) + bias2))\n     - 0.01)) - 2.0), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = ((ret_2 + dot (\n    clamp (((30.0 * (\n      (texture (sampler_main, uv).xyz + (((tmpvar_7.xyz * scale1) + bias1) * 0.15))\n     - 0.01)) - 2.0), 0.0, 1.0)\n  , vec3(0.32, 0.49, 0.29))) - 0.1);\n  ret_2 = (ret_2 + 0.55);\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (ret_2, (ret_2 * (\n    ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1)\n  )), pow (hue_shader, ret_2));\n  ret2_1 = ((tmpvar_8 - (0.9 * texture (sampler_main, tmpvar_5).xyz)) - 0.1);\n  ret2_1 = (ret2_1 - 0.75);\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (ret2_1, ((1.2 * ret2_1) * (\n    ((tmpvar_6.xyz * scale3) + bias3)\n   - \n    ((tmpvar_7.xyz * scale1) + bias1)\n  )), pow (hue_shader.zxy, tmpvar_8));\n  ret2_1 = tmpvar_9;\n  vec3 tmpvar_10;\n  tmpvar_10 = abs((tmpvar_8 - (1.2 * tmpvar_9)));\n  ret_2 = (tmpvar_10 * tmpvar_10);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n}\n\n"}