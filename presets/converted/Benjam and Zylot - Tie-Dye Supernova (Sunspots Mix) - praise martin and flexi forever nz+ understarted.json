{"baseVals":{"rating":3,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":4.1,"wave_scale":1.157,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":0.22705,"fshader":1,"zoom":1.01,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.44484,"tex_zoom":0.99999,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"m.bd = 0;\n\n\t\t\tm.rkeys = ['bd'];","frame_eqs_str":"m.bd=(above(((m.bass+m.treb)+m.mid), 6)+(m.bd*0.975)); m.sides=((Math.cos(((m.time*0.02)+(m.bd*0.1)))*20)+20); m.border_r=((Math.sin(((m.time*0.331)+0.3))*0.5)+0.5); m.border_g=((Math.sin(((m.time*0.559)+0.3))*0.5)+0.5); m.border_b=((Math.sin(((m.time*0.772)+0.4))*0.5)+0.5);"},{"baseVals":{"enabled":1,"thickoutline":1,"textured":1,"rad":0.44484,"ang":2.89026,"tex_zoom":1.22019,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":1},"init_eqs_str":"m.bd = 0;\n\n\t\t\tm.rkeys = ['bd'];","frame_eqs_str":"m.bd=(above(((m.bass+m.treb)+m.mid), 6)+(m.bd*0.975)); m.sides=((Math.cos(((m.time*0.02)+(m.bd*0.1)))*20)+20); m.r=((Math.sin((m.time*0.331))*0.5)+0.5); m.g=((Math.sin((m.time*0.559))*0.5)+0.5); m.b=((Math.sin((m.time*0.772))*0.5)+0.5); m.border_r=m.r; m.border_g=m.g; m.border_b=m.b; m.rad=((Math.sin((m.time*0.4))*0.2)+0.5);"},{"baseVals":{"enabled":1,"textured":1,"x":0.9,"y":0.88,"rad":1.97884,"ang":0.62832,"tex_ang":6.28319,"tex_zoom":0.51341,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.tex_ang=((Math.sin((m.time*0.0001))*628)+628); m.y=((Math.cos((m.time*0.003))*0.5)+0.5);"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.mq1 = 0;\nm.q25 = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q29 = 0;\nm.q1 = 0;\nm.mq31 = 0;\nm.mq21 = 0;\nm.mq24 = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.mq23 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.atime = 0;\nm.q26 = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.mq22 = 0;\nm.vol = 0;\nm.mq26 = 0;\nm.q27 = 0;\nm.q28 = 0;","frame_eqs_str":"m.chng=Math.sin((m.time*0.5)); m.cthr=0.9999; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq29)); m.mq31=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq31)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q31=m.mq31; m.monitor=m.mq1; m.vol=((m.bass+m.treb)+m.mid); m.atime=(m.atime+m.vol); m.q11=(0.4+(Math.sin((m.atime*0.006))*0.4)); m.q12=(0.4+(Math.cos((m.atime*0.00613828348))*0.4)); m.q13=(0.4+(Math.sin((m.atime*0.00598593455))*0.4)); m.monitor=m.q13; m.wave_r=(m.wave_r+((0.6*Math.sin((m.bass*2.500)))+(0.4*Math.sin((m.time*0.70))))); m.wave_b=(m.wave_b+((0.6*Math.sin((m.treb*2.500)))+(0.4*Math.sin((m.time*0.89))))); m.wave_g=(m.wave_g+((0.6*Math.sin((m.mid*2.500)))+(0.4*Math.sin((m.time*0.74))))); m.q1=(m.rot+(0.005*Math.sin((m.time*0.5))));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=(((m.q1*2)*m.rad)*pow(bitand(0,((4+(2*Math.sin(((m.rad*20)+m.time))))*0.1)), 6));","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\nshader_body\n{\n  vec3 copy_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.5;\n  tmpvar_3.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_3);\n  float tmpvar_4;\n  tmpvar_4 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_4);\n  xlat_mutablers0.y = tmpvar_4;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_4 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_4)\n  , 0.0, 1.0)));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.024 / tmpvar_4));\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.012 / tmpvar_4));\n  copy_1 = (texture (sampler_main, tmpvar_5).xyz + texture (sampler_main, tmpvar_6).xyz);\n  vec2 tmpvar_7;\n  tmpvar_7.x = uv.x;\n  tmpvar_7.y = (uv.y - (0.006 / tmpvar_4));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_7).xyz);\n  ret_2 = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * xlat_mutableuv1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_2.x > (q21 * q13)) && (ret_2.x <= (q24 * q11)))) {\n    ret_2.y = (ret_2.y + (tmpvar_8.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (ret_2.z + (tmpvar_8.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (ret_2.x + (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (1.0 - uv.x);\n  tmpvar_2.y = uv.y;\n  vec3 tmpvar_3;\n  tmpvar_3 = vec3((texture (sampler_main, uv).x + texture (sampler_main, tmpvar_2).x));\n  vec2 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = (((uv - 0.5) * (1.0 - \n    ((tmpvar_5.xyz * scale1) + bias1)\n  .zzz).xy) + 0.5);\n  vec3 tmpvar_6;\n  tmpvar_6 = (tmpvar_3 + clamp ((\n    pow (texture (sampler_main, tmpvar_4).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_3.x * 2.0))\n  ), 0.0, 1.0));\n  vec3 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 + clamp ((\n    pow (((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1).zzz, vec3(0.5, 0.5, 0.5))\n   * \n    (1.0 - (tmpvar_6.x * 2.0))\n  ), 0.0, 1.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = uv.x;\n  tmpvar_8.y = (1.0 - uv.y);\n  ret_1 = (pow (mix (\n    (vec3((((tmpvar_5.xyz * scale1) + bias1).x + ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)) + (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1).x + ((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3).x))\n  , tmpvar_7, tmpvar_7), vec3(5.0, 1.0, 0.5)) + pow ((texture (sampler_main, tmpvar_8).yyy + texture (sampler_main, \n    (1.0 - uv)\n  ).yyy), vec3(0.6, 0.95, 5.0)));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_1.x > (q26 * q13)) && (ret_1.x <= (q23 * q11)))) {\n    ret_1.z = (ret_1.z - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_1.y > (q25 * q11)) && (ret_1.y <= (q22 * q12)))) {\n    ret_1.x = (ret_1.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (ret_1.y - (tmpvar_9.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((slow_roam_sin.xyz * roam_cos.zxy) * 0.5));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_1;\n  ret = tmpvar_10.xyz;\n}\n\n"}