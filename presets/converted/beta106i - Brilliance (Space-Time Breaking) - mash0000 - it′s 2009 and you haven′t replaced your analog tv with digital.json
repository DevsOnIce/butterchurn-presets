{"baseVals":{"rating":0,"gammaadj":1.21,"decay":0.97,"echo_zoom":1,"echo_alpha":0.5,"additivewave":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":100,"wave_scale":2.63,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.thresh = 0;\nm.dy_r = 0;\nm.dx_r = 0;","frame_eqs_str":"m.wave_r=(0.5+(0.5*Math.sin((6*m.time)))); m.wave_g=(0.5+(0.5*Math.sin((4.1*m.time)))); m.wave_b=(-1+(((1-m.wave_r)+1)-m.wave_g)); m.warp=0; m.ob_r=(1-Math.abs(m.wave_r)); m.ob_b=(1-Math.abs(m.wave_b)); m.ob_g=(1-Math.abs(m.wave_g)); m.ib_r=(1-Math.abs(m.ob_r)); m.ib_g=(1-Math.abs(m.ob_g)); m.ib_b=(1-Math.abs(m.ob_b)); m.ob_a=(m.ob_a-Math.sin(m.time)); m.ib_a=(m.ib_a-Math.cos(m.time));\n\t\tm.rkeys = ['thresh','dx_r','dy_r','zoom','dy','dx','sx','sy'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.zoom=(m.zoom-0.03); m.dy=(m.dy+(((((2*m.dy_r)*Math.cos((Math.sin(((1.2*Math.cos((2.7*m.time)))*(0.5-m.x)))*m.y)))*8)*m.dx_r)*Math.sin((1.02*m.time)))); m.dx=(m.dx+(((((2*m.dx_r)*Math.sin((Math.cos(((1.32*Math.sin((1.24*m.time)))*(0.5-m.y)))*m.x)))*8)*m.dy_r)*Math.cos((1.2*m.time)))); m.sx=(m.sx-(((((12*m.dx_r)*Math.cos((Math.sin((((1.1*Math.sin((2.87*m.time)))*1.5)*m.rad))*m.rad)))*12)*m.dx_r)*Math.tan(((m.x*0.8)*m.time)))); m.sy=(m.sy-(((((12*m.dy_r)*Math.sin((Math.sin((((0.67*Math.cos((1.12*m.time)))*1.5)*m.rad))*m.rad)))*12)*m.dy_r)*Math.tan(((m.y*0.9)*m.time))));","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":""}