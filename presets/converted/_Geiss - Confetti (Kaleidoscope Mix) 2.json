{"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"wave_dots":1,"wave_thick":1,"wave_a":1.347,"wave_scale":1.91,"wave_smoothing":0.9,"wave_mystery":-0.1,"warpscale":3.138,"zoom":1.03225,"rot":-0.02,"warp":0.00169,"wave_r":0.5,"wave_g":0.5,"wave_b":0.3,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.lum = 0;\nm.bass_thresh = 0;\nm.dx_residual = 0;\nm.dy_residual = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.650*((0.60*Math.sin((31.437*m.time)))+(0.40*Math.sin((20.970*m.time)))))); m.wave_g=(m.wave_g+(0.650*((0.60*Math.sin((31.344*m.time)))+(0.40*Math.sin((20.841*m.time)))))); m.wave_b=(m.wave_b+(0.650*((0.60*Math.sin((31.251*m.time)))+(0.40*Math.sin((21.055*m.time)))))); m.lum=(((m.wave_r*0.3)+(m.wave_g*0.5))+(m.wave_b*0.2)); m.wave_r=((m.wave_r*0.2)+(0.8*m.lum)); m.wave_g=((m.wave_g*0.2)+(0.8*m.lum)); m.wave_b=((m.wave_b*0.2)+(0.8*m.lum)); m.rot=(m.rot+(0.010*((0.60*Math.sin((0.381*m.time)))+(0.40*Math.sin((0.579*m.time)))))); m.cx=(m.cx+(0.210*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.cy=(m.cy+(0.210*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.dx=(m.dx+(0.001*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.001*((0.60*Math.sin((0.284*m.time)))+(0.40*Math.sin((0.247*m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,6), 0))); m.dx=(m.dx+(m.dx_residual*0.01)); m.dy=(m.dy+(m.dy_residual*0.01)); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.96)+1.3))); m.dx_residual=((((equal(m.bass_thresh, 2.13)*0.016)*Math.sin((m.time*7)))+((1-equal(m.bass_thresh, 2.13))*m.dx_residual))*0.9); m.dy_residual=((((equal(m.bass_thresh, 2.13)*0.012)*Math.sin((m.time*9)))+((1-equal(m.bass_thresh, 2.13))*m.dy_residual))*0.9); m.wave_x=(m.wave_x-(m.dx_residual*7)); m.wave_y=(m.wave_y-(m.dy_residual*7));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_noise_lq, (rand_frame.xy + \n    ((uv * texsize_noise_lq.zw) * texsize.xy)\n  )) * 2.0) - 1.0);\n  ret_1 = (texture (sampler_pw_main, (uv + (\n    (tmpvar_2.zw * texsize.zw)\n   * 0.5))).xyz + ((0.59 - \n    (0.2 * rad)\n  ) * tmpvar_2.xyz));\n  vec3 tmpvar_3;\n  tmpvar_3 = clamp (((\n    (ret_1 - 0.5)\n   * 3.0) + 0.25), 0.0, 1.0);\n  ret_1.x = tmpvar_3.x;\n  ret_1.yz = tmpvar_3.xx;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  float tmpvar_1;\n  tmpvar_1 = abs(((\n    fract((((ang / 6.28) * 7.0) + (time * 0.05)))\n   * 2.0) - 1.0));\n  vec2 tmpvar_2;\n  tmpvar_2.x = cos(tmpvar_1);\n  tmpvar_2.y = sin(tmpvar_1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (-0.3 + (1.7 * texture (sampler_main, (0.5 + \n    ((pow (rad, 0.5) * 0.5) * tmpvar_2)\n  )).xyz));\n  ret = tmpvar_3.xyz;\n}\n\n"}