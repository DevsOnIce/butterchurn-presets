{"baseVals":{"rating":5,"gammaadj":2,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":1,"wrap":0,"darken_center":0,"red_blue":0,"brighten":1,"darken":0,"solarize":0,"invert":0,"wave_a":0.002,"wave_scale":1,"wave_smoothing":0.75,"wave_mystery":0,"modwavealphastart":0.75,"modwavealphaend":0.95,"warpanimspeed":1,"warpscale":1,"zoomexp":1,"fshader":0,"zoom":0.96,"rot":-18.84024,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.00052,"sx":1,"sy":1,"wave_r":0,"wave_g":0.1,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.01,"ib_r":0.2,"ib_g":0.1,"ib_b":0,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":4.95,"mv_r":0.5,"mv_g":0.4,"mv_b":0.3,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":2.66718,"ang":0,"tex_ang":0,"tex_zoom":0.45112,"r":1,"g":1,"b":0,"a":0.15,"r2":0,"g2":0,"b2":0,"a2":0.05,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(0.1+(0.5*Math.sin(m.q1))); m.g=(0.1+(0.5*Math.sin((m.q1*0.9878)))); m.b=(0.1+(0.5*Math.sin((m.q1*0.897))));"},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.35,"y":0,"rad":0.09959,"ang":0,"tex_ang":0,"tex_zoom":0.42497,"r":0,"g":0,"b":1,"a":1,"r2":0,"g2":0,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(0.1+(0.5*Math.sin((m.q1*0.01)))); m.g=(0.1+(0.5*Math.sin((m.q1*0.09878)))); m.b=(0.1+(0.5*Math.sin((m.q1*0.0897)))); m.r2=(0.1+(0.5*Math.sin((m.q1*0.035)))); m.g2=(0.1+(0.5*Math.sin((m.q1*0.09878)))); m.b2=(0.1+(0.5*Math.sin((m.q1*0.0897))));"},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0,"rad":0.10201,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(0.1+(0.5*Math.sin((m.q1*0.01)))); m.g=(0.1+(0.5*Math.sin((m.q1*0.03878)))); m.b=(0.1+(0.5*Math.sin((m.q1*0.0497)))); m.r2=(0.1+(0.5*Math.sin((m.q1*0.065)))); m.g2=(0.1+(0.5*Math.sin((m.q1*0.07878)))); m.b2=(0.1+(0.5*Math.sin((m.q1*0.0597))));"},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.65,"y":0,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":0,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(0.1+(0.5*Math.sin((m.q1*0.0144)))); m.g=(0.1+(0.5*Math.sin((m.q1*0.05878)))); m.b=(0.1+(0.5*Math.sin((m.q1*0.0797)))); m.r2=(0.1+(0.5*Math.sin((m.q1*0.065)))); m.g2=(0.1+(0.5*Math.sin((m.q1*0.07878)))); m.b2=(0.1+(0.5*Math.sin((m.q1*0.0897))));"}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":1,"usedots":0,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":0,"g":0,"b":0,"a":1},"init_eqs_str":"m.z = 0;\nm.basstime = 0;\nm.xs = 0;\nm.x_int = 0;\nm.v = 0;\nm.zs = 0;\nm.ys = 0;\nm.y_int = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['xs','zs','ys'];","frame_eqs_str":"","point_eqs_str":"m.speed=sqrt((m.bass_att*0.005)); m.v=((m.sample*10000)+((m.value2*m.bass)*0.1)); m.xs=(m.xs+((Math.sin((m.v*1))*m.speed)*Math.atan((m.v*1.51)))); m.ys=(m.ys+(Math.sin((m.v*1))*m.speed)); m.zs=(m.zs+(Math.cos((m.v*1.1))*m.speed)); m.x=(0.5+(((0.5*Math.sin((m.xs*0.1)))*Math.cos(((m.time*2)+m.xs)))*Math.atan((m.basstime+(m.zs*0.1))))); m.y=(0.5+(((0.5*Math.sin((m.ys*0.1)))*Math.cos(((m.time*2.1)+m.xs)))*Math.sin(((m.basstime*0.4)+(m.zs*0.12))))); m.z=(0.5+((0.5*Math.sin((m.zs*0.1)))*Math.cos(((m.time*2.1)+m.zs)))); m.x=(m.x+(((m.sample*0.5)*Math.sin(m.basstime))*m.bass)); m.y=(m.y+(((m.sample*0.5)*Math.sin((m.basstime*1.2)))*m.bass)); m.z=((((Math.cos((m.z*m.sample))*m.value1)*m.sample)*10)+2); m.x_int=((m.x*0.6)+0.2); m.y_int=m.y; m.x=((m.x_int*m.z)*0.5); m.y=((m.y_int*m.z)*0.5); m.r=((0.5+((0.5*Math.sin((m.time*6.22)))*m.x_int))+0.1); m.g=(0.4+((0.4*Math.sin((m.time*5.307)))*m.x_int)); m.b=(0.4+((0.4*Math.sin((m.time*4.959)))*m.y_int)); m.xs=((above(m.xs, 1000)!=0)?(0):(m.xs)); m.ys=((above(m.ys, 1000)!=0)?(0):(m.ys));"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.xx = 0;\nm.s = 0;\nm.xs = 0;\nm.xdriftinc = 0;\nm.yval = 0;\nm.ss = 0;\nm.q1 = 0;\nm.xd = 0;\nm.zd = 0;\nm.alphax = 0;\nm.yx = 0;\nm.angle2 = 0;\nm.zs = 0;\nm.angle = 0;\nm.ys = 0;\nm.xn = 0;\nm.burstspeed = 0;\nm.yd = 0;\nm.burst = 0;\nm.angle3 = 0;\nm.state = 0;\nm.yn = 0;\nm.ymax = 0;\nm.q3 = 0;\nm.xdrift = 0;\nm.zx = 0;\nm.flag = 0;\n\n\t\t\tm.rkeys = ['xdriftinc','yval','alphax','burstspeed','burst','state','ymax','xdrift'];","frame_eqs_str":"","point_eqs_str":"m.flag=above(m.q3, 2); m.state=(m.state+(m.flag*equal(m.state, 0))); m.yval=((equal(m.state, 0)!=0)?(0):(m.yval)); m.yval=(m.yval+(0.00004*equal(m.state, 1))); m.ymax=((equal(m.state, 0)!=0)?((rand(100)*0.004)):(m.ymax)); m.state=((above(m.yval, (0.5+m.ymax))!=0)?(2):(m.state)); m.yval=((equal(m.state, 0)!=0)?(0):(m.yval)); m.burst=((equal(m.state, 0)!=0)?(0.001):(m.burst)); m.alphax=((equal(m.state, 0)!=0)?(1):(m.alphax)); m.xdriftinc=((equal(m.state, 0)!=0)?(0):(m.xdriftinc)); m.burstspeed=((equal(m.state, 0)!=0)?(rand(10)):(m.burstspeed)); m.xdrift=((equal(m.state, 0)!=0)?(rand(20)):(m.xdrift)); m.xdriftinc=(((((((((((((((((((m.xdriftinc+((equal(m.xdrift, 0)*equal(m.state, 1))*0.00002))+((equal(m.xdrift, 1)*equal(m.state, 1))*0.000018))+((equal(m.xdrift, 2)*equal(m.state, 1))*0.000016))+((equal(m.xdrift, 3)*equal(m.state, 1))*0.000014))+((equal(m.xdrift, 4)*equal(m.state, 1))*0.000012))+((equal(m.xdrift, 5)*equal(m.state, 1))*0.00001))+((equal(m.xdrift, 6)*equal(m.state, 1))*0.000008))+((equal(m.xdrift, 7)*equal(m.state, 1))*0.000006))+((equal(m.xdrift, 8)*equal(m.state, 1))*0.000004))+((equal(m.xdrift, 9)*equal(m.state, 1))*0.000002))+((equal(m.xdrift, 11)*equal(m.state, 1))*-0.000002))+((equal(m.xdrift, 12)*equal(m.state, 1))*-0.000004))+((equal(m.xdrift, 13)*equal(m.state, 1))*-0.000006))+((equal(m.xdrift, 14)*equal(m.state, 1))*-0.000008))+((equal(m.xdrift, 15)*equal(m.state, 1))*-0.00001))+((equal(m.xdrift, 16)*equal(m.state, 1))*-0.000012))+((equal(m.xdrift, 17)*equal(m.state, 1))*-0.000014))+((equal(m.xdrift, 18)*equal(m.state, 1))*-0.000016))+((equal(m.xdrift, 19)*equal(m.state, 1))*-0.000018)); m.burst=((((((((((m.burst+((equal(m.burstspeed, 0)*equal(m.state, 2))*0.000024))+((equal(m.burstspeed, 1)*equal(m.state, 2))*0.000022))+((equal(m.burstspeed, 2)*equal(m.state, 2))*0.00002))+((equal(m.burstspeed, 3)*equal(m.state, 2))*0.000018))+((equal(m.burstspeed, 4)*equal(m.state, 2))*0.000016))+((equal(m.burstspeed, 5)*equal(m.state, 2))*0.000014))+((equal(m.burstspeed, 6)*equal(m.state, 2))*0.000012))+((equal(m.burstspeed, 7)*equal(m.state, 2))*0.00001))+((equal(m.burstspeed, 8)*equal(m.state, 2))*0.000008))+((equal(m.burstspeed, 9)*equal(m.state, 2))*0.000008)); m.alphax=(m.alphax-(0.00004*equal(m.state, 2))); m.state=((below(m.alphax, 0)!=0)?(0):(m.state)); m.s=((m.sample*3.14)*100); m.ss=((m.sample*6.28)*1000); m.xs=((m.burst+(0.0001*Math.cos(m.s)))*Math.cos(m.ss)); m.ys=((m.burst+(0.0001*Math.cos(m.s)))*Math.sin(m.ss)); m.zs=((0.1*m.burst)*Math.sin(m.s)); m.angle=(Math.sin((-m.q1*0.035))*6.28); m.yx=((m.ys*Math.cos(m.angle))-(m.zs*Math.sin(m.angle))); m.zx=((m.ys*Math.sin(m.angle))+(m.zs*Math.cos(m.angle))); m.xx=m.xs; m.angle2=(Math.sin((-m.q1*0.03))*6.28); m.xd=((m.xx*Math.cos(m.angle2))-(m.zx*Math.sin(m.angle2))); m.zd=((m.xx*Math.sin(m.angle2))+(m.zx*Math.cos(m.angle2))); m.yd=m.yx; m.angle3=(Math.sin((-m.q1*0.022))*6.28); m.xn=((m.xd*Math.cos(m.angle3))-(m.yd*Math.sin(m.angle3))); m.yn=((m.xd*Math.sin(m.angle3))+(m.yd*Math.cos(m.angle3))); m.zd=(m.zd+2); m.x=(((m.xn*m.zd)*0.3)+0.5); m.y=(((m.yn*m.zd)*0.3)*1.2); m.x=(m.x+m.xdriftinc); m.y=((m.y+Math.sin((m.yval*1.5)))-0.18); m.r=(0.5+(0.5*Math.sin((((m.q1*1.3)+m.x)+m.x)))); m.g=(0.5+(0.5*Math.sin((((m.q1*1.1)+m.x)+m.y)))); m.b=(0.5+(0.5*Math.sin((((m.q1*1.66)+m.y)+m.y))));"}],"init_eqs_str":"m.basstime = 0;\nm.stickybit = 0;\nm.volavg2 = 0;\nm.q1 = 0;\nm.q9 = 0;\nm.sample1 = 0;\nm.difftime = 0;\nm.diff = 0;\nm.edge = 0;\nm.volavg = 0;\nm.bit2 = 0;\nm.vol = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.basssum = 0;\nm.sample2 = 0;\nm.state=0;","frame_eqs_str":"m.basstime=(m.basstime+(m.bass*0.06)); m.q1=m.basstime; m.q9=(m.basstime*0.000005); m.basstime=((below(m.basstime, 1000)!=0)?(1000):(m.basstime)); m.vol=pow(((m.bass+m.mid)+m.treb), 2); m.basssum=m.vol; m.stickybit=mod(m.time,2); m.volavg=(m.volavg+(m.vol*equal(m.stickybit, 1))); m.sample1=(m.sample1+equal(m.stickybit, 1)); m.volavg2=(m.volavg2+(m.vol*equal(m.stickybit, 0))); m.sample2=(m.sample2+equal(m.stickybit, 0)); m.edge=bnot(equal(m.bit2, m.stickybit)); m.volavg=(m.volavg-((m.volavg*m.edge)*m.stickybit)); m.volavg2=(m.volavg2-((m.volavg2*m.edge)*equal(m.stickybit, 0))); m.sample1=(m.sample1-((m.sample1*m.edge)*m.stickybit)); m.sample2=(m.sample2-((m.sample2*m.edge)*equal(m.stickybit, 0))); m.diff=((equal(m.stickybit, 1)!=0)?(div(m.basssum,div(m.volavg2,m.sample2))):(0)); m.diff=((equal(m.stickybit, 0)!=0)?(div(m.basssum,div(m.volavg,m.sample1))):(m.diff)); m.q3=m.diff; m.bit2=mod(m.time,2); m.difftime=(m.difftime+(m.diff*0.03)); m.q2=m.difftime; m.difftime=((above(m.difftime, 2000)!=0)?(0):(m.difftime)); m.monitor=m.q1;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=0.98; m.rot=0;","warp":"shader_body\n{\n  vec3 xlat_varoutput_1;\n  vec3 color_2;\n  vec2 uv2_3;\n  uv2_3 = (uv + q3);\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\n  mat2 tmpvar_4;\n  float tmpvar_5;\n  tmpvar_5 = cos(q9);\n  tmpvar_4[uint(0)].x = tmpvar_5;\n  float tmpvar_6;\n  tmpvar_6 = sin(q9);\n  tmpvar_4[uint(0)].y = -(tmpvar_6);\n  tmpvar_4[1u].x = tmpvar_6;\n  tmpvar_4[1u].y = tmpvar_5;\n  vec2 tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (1.0/(texsize.x));\n  tmpvar_7.x = -(tmpvar_8);\n  float tmpvar_9;\n  tmpvar_9 = (1.0/(texsize.y));\n  tmpvar_7.y = 0.0;\n  xlat_varoutput_1 = (0.05 * texture (sampler_main, (uv + tmpvar_7))).xyz;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_8;\n  tmpvar_10.y = 0.0;\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_10))).xyz);\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.0;\n  tmpvar_11.y = tmpvar_9;\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_11))).xyz);\n  vec2 tmpvar_12;\n  tmpvar_12.x = 0.0;\n  tmpvar_12.y = -(tmpvar_9);\n  xlat_varoutput_1 = (xlat_varoutput_1 + (0.05 * texture (sampler_main, (uv + tmpvar_12))).xyz);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  float tmpvar_14;\n  tmpvar_14 = (rad * 0.02);\n  tmpvar_13.xyz = (texture (sampler_main, ((\n    ((((\n      ((uv - 0.5) * (tmpvar_4 - (rad * 0.01)))\n     * \n      (0.97 + tmpvar_14)\n    ) + 0.5) + ((\n      (texture (sampler_blur1, (((\n        (xlat_varoutput_1 + color_2)\n       - 0.5) * 0.9) + 0.5).xy).xyz * scale1)\n     + bias1) * 0.02).xy) - 0.5)\n   * \n    (1.0 - tmpvar_14)\n  ) + 0.5)).xyz - 0.03);\n  ret = tmpvar_13.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret = tmpvar_1.xyz;\n}\n\n"}