{"baseVals":{"rating":1,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":1,"wave_g":0,"wave_b":0.6,"wave_x":0.5,"wave_y":0.5,"ob_size":0.015,"ob_r":0,"ob_g":0,"ob_b":1,"ob_a":0,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.19788,"ang":0,"tex_ang":0.62832,"tex_zoom":0.0402,"r":1,"g":1,"b":1,"a":0.9,"r2":0.9,"g2":1,"b2":1,"a2":0.3,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q22 = 0;\nm.k1 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.a=0.3; m.a2=0; m.k1=(div(m.instance,m.num_inst)*6.28); m.x=(0.5+(0.25*Math.cos(div((m.q27*6.28),4)))); m.y=(0.5+(0.25*Math.sin(div((m.q27*6.28),4)))); m.r=(0.5+(0.5*Math.sin((m.time+div((m.q27*6.28),3))))); m.g=(0.5+(0.5*Math.sin((div(m.time,2)+div(((m.q27+1)*6.28),3))))); m.b=(0.5+(0.5*Math.sin((div(m.time,3)+div(((m.q27+2)*6.28),3))))); m.rad=div(m.q22,18);"},{"baseVals":{"enabled":0,"sides":5,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":4.77803,"ang":0,"tex_ang":0,"tex_zoom":1.78051,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":0.99,"border_b":1,"border_a":0},"init_eqs_str":"m.q24 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ang=Math.sin(div(m.time,65)); m.rad=div(m.q24,8);"},{"baseVals":{"enabled":0,"sides":5,"additive":1,"thickoutline":0,"textured":0,"num_inst":4,"x":0.9,"y":0.5,"rad":0.24732,"ang":0,"tex_ang":0,"tex_zoom":0.40839,"r":1,"g":0.6,"b":0,"a":0.4,"r2":0,"g2":0,"b2":0.6,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.blue = 0;\nm.ampl = 0;\nm.steps = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.green = 0;\nm.red = 0;\nm.trig = 0;\nm.q27 = 0;\nm.q28 = 0;\n\n\t\t\tm.rkeys = ['blue','green','red'];","frame_eqs_str":"m.steps=(m.q28+1); m.steps=4; m.ampl=0.2; m.x=(0.5+(m.ampl*Math.cos(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.y=(0.5+(m.ampl*Math.sin(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.a=0.3; m.a2=0.0; m.trig=(m.q24*bnot(mod(m.q27,4))); m.red=((bnot(m.trig)*m.red)+(div(rand(100),100)*m.trig)); m.green=((bnot(m.trig)*m.green)+(div(rand(100),100)*m.trig)); m.blue=((bnot(m.trig)*m.blue)+(div(rand(100),100)*m.trig)); m.k1=div(m.instance,m.num_inst); m.r=(m.red*m.k1); m.g=(m.green*(1-m.k1)); m.b=(((m.blue*4)*m.k1)*(1-m.k1)); m.r=m.red; m.g=m.green; m.b=m.blue; m.r2=m.r; m.b2=m.b; m.g2=m.g;"},{"baseVals":{"enabled":0,"sides":36,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.01,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0,"g":0.12,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":1,"scaling":0.5033,"smoothing":0.5,"r":0.5,"g":0.1,"b":1,"a":0.1},"init_eqs_str":"m.trel = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.x=(0.5+((0.5*m.sample)*Math.sin((m.sample*50)))); m.y=(0.5+((0.5*m.sample)*Math.cos((m.sample*50)))); m.trel=m.time; m.x=(0.5+((0.5*m.sample)*Math.sin(m.time))); m.y=(0.5+((0.5*m.sample)*Math.cos(m.time))); m.x=div(rand(100),100); m.y=div(rand(100),100); m.a=0.2;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.movz = 0;\nm.trel = 0;\nm.q9 = 0;\nm.rott = 0;\nm.vol__ = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.trel_ = 0;\nm.vx = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.vy = 0;\nm.q4 = 0;\nm.dir = 0;\nm.dir_ = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.beat = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.dec_fast = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.step=0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.96, div(30,m.fps)); m.dec_fast=pow(0.6, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0+m.avg)+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q24=m.is_beat; m.vol=((m.bass_att+m.mid_att)+m.treb_att); m.vol_=((m.dec_med*m.vol_)+((1-m.dec_med)*m.vol)); m.vol__=((m.dec_med*m.vol__)+((1-m.dec_med)*m.vol_)); m.q27=(m.index+1); m.q28=(m.index2+1); m.q23=(m.q22-div(0.1,m.q22)); m.q23=Math.max(m.q23, 1); m.k1=(m.is_beat*equal(mod(m.index,8), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_fast*m.p2)+((1-m.dec_fast)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trig=(m.q24*bnot(mod(m.index,2))); m.vx=((m.vx*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.vy=((m.vy*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.q10=(0.2+((m.vy*m.vy)*2)); m.q11=(div(Math.sin(div(m.time,9)),2)+0.4); m.movz=(m.movz-(div(1,m.fps)*(0.3+m.vx))); m.q9=m.movz; m.q12=(Math.min(m.q22, 6)*2); m.q13=Math.min(2, (1+Math.abs(((8*m.vy)*m.vx)))); m.dir_=(m.bass-1); m.trig=(bnot(mod(m.index,4))*m.q24); m.dir=((bnot(m.trig)*m.dir)+(m.trig*(rand(10)-5))); m.trel=(m.trel+(div(0.1,m.fps)*m.dir)); m.trel_=((m.dec_med*m.trel_)+((1-m.dec_med)*m.trel)); m.q5=Math.cos(m.trel_); m.q6=Math.sin((m.trel_+((0*m.q27)*mod(m.q28,2)))); m.q7=-m.q6; m.q8=m.q5; m.zoom=1.02; m.rot=(0.5*Math.sin((bnot(mod(m.q28,2))*m.q28))); m.rot=(0.0*Math.sin(div(m.time,3))); m.dx=0.0; m.monitor=m.q11;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (12.0 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv1_2 = (tmpvar_3 + ((-0.01 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv1_2 = (uv1_2 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 60.0));\n  uv6_1 = (0.4 * cos((uv1_2 * 6.0)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((0.5 * (\n    ((texture (sampler_main, ((uv1_2 * \n      (0.8 + (0.2 * tmpvar_5))\n    ) + 0.5)).xyz + (vec3((0.01 / \n      (sqrt(dot (uv6_1, uv6_1)) - (0.001 * q27))\n    )) * (0.3 * \n      (1.0 + roam_cos)\n    ).xyz)) * 0.96)\n   - 0.025)) + (0.5 * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"vec3 xlat_mutableneu;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutableneu = neu;\n  xlat_mutablers0 = rs0;\n  xlat_mutablerss = rss;\n  xlat_mutableuv2 = uv2;\n  vec2 uv_1;\n  vec2 ofs_2;\n  vec3 ret1_3;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q5;\n  tmpvar_4.y = q6;\n  uv_1 = (uv_1 + (tmpvar_4 / 4.0));\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)] = _qb.xy;\n  tmpvar_5[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_5);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0) / max (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((uv_1.y / uv_1.x)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\n    if ((uv_1.x < 0.0)) {\n      if ((uv_1.y >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\n  };\n  xlat_mutablers0.x = (((tmpvar_6 / 3.1416) * 6.0) * q28);\n  xlat_mutablers0.y = inversesqrt(dot (uv_1, uv_1));\n  vec2 tmpvar_9;\n  tmpvar_9.x = (xlat_mutablers0.x + (q9 * 8.0));\n  tmpvar_9.y = (xlat_mutablers0.y + ((q9 * q28) * 4.0));\n  xlat_mutablerss = (tmpvar_9 / 12.0);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q5;\n  tmpvar_10.y = q6;\n  ofs_2 = (0.1 * tmpvar_10.yx);\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = -(q9);\n  tmpvar_11 = fract(tmpvar_12);\n  mat2 tmpvar_13;\n  tmpvar_13[uint(0)].x = 1.0;\n  tmpvar_13[uint(0)].y = -0.0;\n  tmpvar_13[1u].x = 0.0;\n  tmpvar_13[1u].y = 1.0;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_11)\n   * tmpvar_13)) * aspect.yx);\n  vec2 tmpvar_14;\n  tmpvar_14 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_14).xyz + ((texture (sampler_blur1, tmpvar_14).xyz * scale1) + bias1));\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), ((xlat_mutableneu * \n    (1.0 - (tmpvar_11 * tmpvar_11))\n  ) * 2.0));\n  float tmpvar_15;\n  tmpvar_15 = fract((tmpvar_12 + 0.3333333));\n  mat2 tmpvar_16;\n  tmpvar_16[uint(0)].x = -0.4990803;\n  tmpvar_16[uint(0)].y = -0.8665558;\n  tmpvar_16[1u].x = 0.8665558;\n  tmpvar_16[1u].y = -0.4990803;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_15)\n   * tmpvar_16)) * aspect.yx);\n  vec2 tmpvar_17;\n  tmpvar_17 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_17).xyz + ((texture (sampler_blur1, tmpvar_17).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_15 * tmpvar_15))\n  ) * 2.0));\n  float tmpvar_18;\n  tmpvar_18 = fract((tmpvar_12 + 0.6666667));\n  mat2 tmpvar_19;\n  tmpvar_19[uint(0)].x = -0.5018377;\n  tmpvar_19[uint(0)].y = 0.8649619;\n  tmpvar_19[1u].x = -0.8649619;\n  tmpvar_19[1u].y = -0.5018377;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_18)\n   * tmpvar_19)) * aspect.yx);\n  vec2 tmpvar_20;\n  tmpvar_20 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_20).xyz + ((texture (sampler_blur1, tmpvar_20).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_18 * tmpvar_18))\n  ) * 2.0));\n  float tmpvar_21;\n  tmpvar_21 = fract((tmpvar_12 + 1.0));\n  mat2 tmpvar_22;\n  tmpvar_22[uint(0)].x = 0.9999949;\n  tmpvar_22[uint(0)].y = 0.003185092;\n  tmpvar_22[1u].x = -0.003185092;\n  tmpvar_22[1u].y = 0.9999949;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_21)\n   * tmpvar_22)) * aspect.yx);\n  vec2 tmpvar_23;\n  tmpvar_23 = fract(((xlat_mutableuv2 + 0.5) + ofs_2));\n  xlat_mutableneu = (texture (sampler_main, tmpvar_23).xyz + ((texture (sampler_blur1, tmpvar_23).xyz * scale1) + bias1));\n  ret1_3 = max (ret1_3, ((xlat_mutableneu * \n    (1.0 - (tmpvar_21 * tmpvar_21))\n  ) * 2.0));\n  vec2 tmpvar_24;\n  tmpvar_24.x = (ret1_3.x + ret1_3.z);\n  tmpvar_24.y = (ret1_3.x - ret1_3.y);\n  vec4 tmpvar_25;\n  tmpvar_25.w = 1.0;\n  tmpvar_25.xyz = ((ret1_3 + (\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\n   * roam_sin).xyz) + ((2.0 * \n    (bass_att * ((texture (sampler_blur1, fract(\n      (xlat_mutablerss + (tmpvar_24 / 2.0))\n    )).xyz * scale1) + bias1).zxy)\n  ) * clamp (\n    (1.0 - (ret1_3 * 4.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_25.xyz;\n}\n\n"}