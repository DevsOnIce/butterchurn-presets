{"baseVals":{"rating":3,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":0,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.004,"wave_scale":0.073,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.04,"ob_size":0,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":4,"x":0,"y":0.5,"rad":1.0363,"ang":0,"tex_ang":0.12566,"tex_zoom":1.51878,"r":0,"g":1,"b":0,"a":0.96,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.w = 0;\nm.q9 = 0;\nm.q10 = 0;\nm.h = 0;\nm.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.rad=2; m.h=sqrt(2); m.w=0.004; m.x=(((1-equal(m.instance, 0))!=0)?((((1-equal(m.instance, 1))!=0)?((((1-equal(m.instance, 2))!=0)?((m.w-((m.h*0.5)*m.q10))):(((1-m.w)+((m.h*0.5)*m.q10))))):(0.5))):(0.5)); m.y=(((1-equal(m.instance, 0))!=0)?((((1-equal(m.instance, 1))!=0)?(0.5):((m.w-((m.h*0.5)*m.q9))))):(((1-m.w)+((m.h*0.5)*m.q9)))); m.g=(((1-equal(m.instance, 0))!=0)?((((1-equal(m.instance, 1))!=0)?(0):(1))):(1)); m.g2=m.g;"},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":1,"textured":0,"num_inst":1,"x":0.5,"y":0.75,"rad":0.05784,"ang":0,"tex_ang":0,"tex_zoom":0.73458,"r":0,"g":0,"b":1,"a":0.5,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=m.q1; m.y=m.q5;"},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.0578,"ang":3.20442,"tex_ang":0,"tex_zoom":6.23873,"r":1,"g":0,"b":0,"a":1,"r2":1,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":1,"textured":0,"num_inst":1,"x":0.5,"y":0.75,"rad":0.07059,"ang":0,"tex_ang":0,"tex_zoom":0.73458,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=m.q1; m.y=m.q5;"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"r":0,"g":0,"b":1,"a":1},"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.tt2 = 0;\nm.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.tt1 = 0;\nm.q9 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.q10 = 0;\nm.yyy = 0;\nm.xxx = 0;\nm.ddd = 0;\nm.dd = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.tt3 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.yy = 0;\nm.q7 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = ['xx','tt2','tt1','dd','tt3','yy','sample'];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t7=m.q7; m.t8=m.q8;","point_eqs_str":"m.sample=(1-m.sample); m.xxx=m.xx; m.yyy=m.yy; m.xx=((((((pow(m.sample, 5)*m.t1)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t1))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t2))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t3))+(((5*pow((1-m.sample), 4))*m.sample)*m.t4))+(pow((1-m.sample), 5)*m.t4)); m.yy=((((((pow(m.sample, 5)*m.t5)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t5))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t6))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t7))+(((5*pow((1-m.sample), 4))*m.sample)*m.t8))+(pow((1-m.sample), 5)*m.t8)); m.d=div(1,sqrt((sqr((m.xx-m.xxx))+sqr((m.yy-m.yyy))))); m.tt3=((m.tt3*0.6)+(m.value1*1)); m.tt2=((m.tt2*0.7)+(m.tt3*0.2)); m.tt1=((m.tt1*0.8)+(m.tt2*0.1)); m.dd=((m.dd*0.9)+(m.tt1*0.2)); m.ddd=((((m.sample*(1-m.sample))*m.dd)*m.d)*4); m.x=(m.xx+((m.yy-m.yyy)*m.ddd)); m.y=(m.yy-((m.xx-m.xxx)*m.ddd)); m.x=(0.5+((m.x-0.5)*m.q9)); m.y=(0.5+((m.y-0.5)*m.q10));"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":2.44415,"smoothing":0,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.q6 = 0;\nm.t8 = 0;\nm.pi3 = 0;\nm.q4 = 0;\nm.t = 0;\nm.c = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t8=1;","point_eqs_str":"m.t8=-m.t8; m.y=(m.sample*0.05); m.x=(0.5+(m.t8*0.005)); m.pi3=((3.1415*2)*0.3333); m.t=((m.q4-m.q6)*10); m.c=2; m.r=(Math.sin(m.t)*m.c); m.g=(Math.sin((m.t+m.pi3))*m.c); m.b=(Math.sin((m.t-m.pi3))*m.c); m.r=((above(m.r, 1)!=0)?(1):(m.r)); m.r=((below(m.r, 0)!=0)?(0):(m.r)); m.g=((above(m.g, 1)!=0)?(1):(m.g)); m.g=((below(m.g, 0)!=0)?(0):(m.g)); m.b=((above(m.b, 1)!=0)?(1):(m.b)); m.b=((below(m.b, 0)!=0)?(0):(m.b));"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":100,"smoothing":0.6,"r":0,"g":0,"b":1,"a":1},"init_eqs_str":"m.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.q7 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t7=m.q7; m.t8=m.q8;","point_eqs_str":"m.y=0.5; m.x=m.sample;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":0,"additive":0,"scaling":2.44415,"smoothing":0,"r":0,"g":0,"b":1,"a":1},"init_eqs_str":"m.t8 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t8=1;","point_eqs_str":"m.t8=-m.t8; m.y=((1+m.t8)*0.01); m.x=m.sample;"}],"init_eqs_str":"m.d = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.q25 = 0;\nm.q12 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.vx3 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.v = 0;\nm.vx4 = 0;\nm.mm = 0;\nm.tt = 0;\nm.t3 = 0;\nm.bm = 0;\nm.x3 = 0;\nm.q23 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.q26 = 0;\nm.x4 = 0;\nm.mt = 0;\nm.r = 0;\nm.x2 = 0;\nm.mx = 0;\nm.mn = 0;\nm.t2 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.bb = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.yy = 0;\nm.y4 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.zoom=1; m.warp=0; m.wave_a=0; m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5+((m.xx1-m.xx2)*2)); m.y1=(0.4+(m.yy1*1.5)); m.dt=div(0.03,m.fps); m.vx2=((m.vx2*(1-(2*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*10))); m.vy2=((m.vy2*(1-(2*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*10)-0.5))); m.vx3=((m.vx3*(1-(2*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*10))); m.vy3=((m.vy3*(1-(2*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*10)-0.5))); m.vx4=((m.vx4*(1-(2*m.dt)))+(m.dt*((m.x3-m.x4)*10))); m.vy4=((m.vy4*(1-(2*m.dt)))+(m.dt*(((m.y3-m.y4)*10)-0.5))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*0.5))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*0.5))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*0.5))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*0.5))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*0.5))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*0.5))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*0.5))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*0.5))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*0.5))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*0.5))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*0.5))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*0.5))); m.q1=m.x1; m.q2=m.x2; m.q3=m.x3; m.q4=m.x4; m.q5=m.y1; m.q6=m.y2; m.q7=m.y3; m.q8=m.y4; m.q9=div(1,m.aspectx); m.q10=div(1,m.aspecty); m.q11=m.aspectx; m.q12=m.aspecty; m.bb=((m.bb*0.99)+(m.bass*0.02)); m.mm=((m.mm*0.99)+(m.mid*0.02)); m.tt=((m.tt*0.99)+(m.treb*0.02)); m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.t1=div((m.bb-m.mn),(m.mx-m.mn)); m.t2=div((m.mm-m.mn),(m.mx-m.mn)); m.t3=div((m.tt-m.mn),(m.mx-m.mn)); m.v=div(0.1,m.fps); m.bm=(m.bm+((m.t1-m.t2)*m.v)); m.mt=(m.mt+((m.t2-m.t3)*m.v)); m.q22=0; m.q21=1; m.q25=0; m.q23=-1; m.q26=-m.bm; m.q27=m.mt;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.x=(0.5+((m.x-0.5)*m.q11)); m.y=(0.5+((m.y-0.5)*m.q12)); m.xx=m.q4; m.yy=(1-m.q8); m.dx=0; m.dy=0; m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.11; m.v=20; m.dx=((m.v*((Math.sin((m.y-m.yy))*(m.d-m.r))-((m.x-m.xx)*(m.d-div(m.r,2)))))*(1.00-sigmoid((m.d-m.r), 100))); m.dy=((-m.v*((Math.sin((m.x-m.xx))*(m.d-m.r))+((m.y-m.yy)*(m.d-div(m.r,2)))))*(1.00-sigmoid((m.d-m.r), 100)));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1.y = texture (sampler_fc_main, uv).y;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"vec2 xlat_mutablec;\nfloat xlat_mutablecutoff;\nvec2 xlat_mutabledenominator;\nvec2 xlat_mutablefraction;\nvec2 xlat_mutablenumerator;\nfloat xlat_mutables;\nshader_body\n{\n  xlat_mutablec = c;\n  xlat_mutabledenominator = denominator;\n  xlat_mutablefraction = fraction;\n  xlat_mutablenumerator = numerator;\n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * 4.0));\n  xlat_mutablecutoff = 2.0;\n  xlat_mutablen = 1;\n  xlat_mutables = 0.33;\n  xlat_mutabledepth = 2;\n  for (int i_3 = 0; i_3 < xlat_mutabledepth; i_3++) {\n    xlat_mutablec = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_4;\n    tmpvar_4.x = q21;\n    tmpvar_4.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec + tmpvar_4) * 64.0);\n    vec2 tmpvar_5;\n    tmpvar_5.x = q23;\n    tmpvar_5.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec + tmpvar_5);\n    vec2 tmpvar_6;\n    tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_6 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec = (xlat_mutablefraction - 0.5);\n    float tmpvar_7;\n    float tmpvar_8;\n    tmpvar_8 = (min (abs(\n      (xlat_mutablec.x / xlat_mutablec.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec.x / xlat_mutablec.y)\n    ), 1.0));\n    float tmpvar_9;\n    tmpvar_9 = (tmpvar_8 * tmpvar_8);\n    tmpvar_9 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n       * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n     * tmpvar_9) + 0.9999793) * tmpvar_8);\n    tmpvar_9 = (tmpvar_9 + (float(\n      (abs((xlat_mutablec.x / xlat_mutablec.y)) > 1.0)\n    ) * (\n      (tmpvar_9 * -2.0)\n     + 1.570796)));\n    tmpvar_7 = (tmpvar_9 * sign((xlat_mutablec.x / xlat_mutablec.y)));\n    if ((abs(xlat_mutablec.y) > (1e-08 * abs(xlat_mutablec.x)))) {\n      if ((xlat_mutablec.y < 0.0)) {\n        if ((xlat_mutablec.x >= 0.0)) {\n          tmpvar_7 += 3.141593;\n        } else {\n          tmpvar_7 = (tmpvar_7 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_7 = (sign(xlat_mutablec.x) * 1.570796);\n    };\n    vec2 tmpvar_10;\n    tmpvar_10.x = ((0.3183098 * (\n      float(xlat_mutablen)\n     * tmpvar_7)) + q26);\n    tmpvar_10.y = (((xlat_mutables * aspect.w) * log(\n      sqrt(dot (xlat_mutablec, xlat_mutablec))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_10 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  uv_1 = (0.5 + (uv_1 - 0.5));\n  xlat_mutablecutoff = 1.6;\n  xlat_mutablen = 4;\n  xlat_mutables = 1.0;\n  xlat_mutabledepth = 1;\n  for (int i_1_2 = 0; i_1_2 < xlat_mutabledepth; i_1_2++) {\n    xlat_mutablec = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_11;\n    tmpvar_11.x = q21;\n    tmpvar_11.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec + tmpvar_11) * 64.0);\n    vec2 tmpvar_12;\n    tmpvar_12.x = q23;\n    tmpvar_12.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec + tmpvar_12);\n    vec2 tmpvar_13;\n    tmpvar_13.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_13.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_13 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec = (xlat_mutablefraction - 0.5);\n    float tmpvar_14;\n    float tmpvar_15;\n    tmpvar_15 = (min (abs(\n      (xlat_mutablec.x / xlat_mutablec.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec.x / xlat_mutablec.y)\n    ), 1.0));\n    float tmpvar_16;\n    tmpvar_16 = (tmpvar_15 * tmpvar_15);\n    tmpvar_16 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n       * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n     * tmpvar_16) + 0.9999793) * tmpvar_15);\n    tmpvar_16 = (tmpvar_16 + (float(\n      (abs((xlat_mutablec.x / xlat_mutablec.y)) > 1.0)\n    ) * (\n      (tmpvar_16 * -2.0)\n     + 1.570796)));\n    tmpvar_14 = (tmpvar_16 * sign((xlat_mutablec.x / xlat_mutablec.y)));\n    if ((abs(xlat_mutablec.y) > (1e-08 * abs(xlat_mutablec.x)))) {\n      if ((xlat_mutablec.y < 0.0)) {\n        if ((xlat_mutablec.x >= 0.0)) {\n          tmpvar_14 += 3.141593;\n        } else {\n          tmpvar_14 = (tmpvar_14 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_14 = (sign(xlat_mutablec.x) * 1.570796);\n    };\n    vec2 tmpvar_17;\n    tmpvar_17.x = ((0.3183098 * (\n      float(xlat_mutablen)\n     * tmpvar_14)) + q26);\n    tmpvar_17.y = (((xlat_mutables * aspect.w) * log(\n      sqrt(dot (xlat_mutablec, xlat_mutablec))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_17 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  vec2 x_18;\n  x_18 = -(uv_1);\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = mix (mix (vec3(0.0, 1.0, 2.0), vec3(-2.0, -2.0, 0.0), vec3((\n    (-(texture (sampler_main, uv_1).y) + 0.5)\n   + \n    sqrt(dot (x_18, x_18))\n  ))), vec3(1.0, 0.5, 0.0), vec3((sqrt(\n    dot (uv_1, uv_1)\n  ) * 0.666)));\n  ret = tmpvar_19.xyz;\n}\n\n"}