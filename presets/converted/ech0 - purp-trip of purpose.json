{"baseVals":{"rating":4,"gammaadj":1,"decay":0.9,"echo_zoom":1,"echo_alpha":0,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"wave_mystery":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":0.267,"zoomexp":1,"fshader":0,"zoom":1.16,"rot":-0.04,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.00052,"sx":1,"sy":1,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0,"ib_size":0.01,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":20.16,"mv_dx":0,"mv_dy":0,"mv_l":0.4,"mv_r":1,"mv_g":0.4,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":1.20321,"ang":0,"tex_ang":0,"tex_zoom":1.22019,"r":1,"g":0,"b":0,"a":0,"r2":0,"g2":1,"b2":0,"a2":0.5,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1.12682,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1.12682,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1.12682,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1.12682,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"}],"init_eqs_str":"m.basstime = 0;\nm.stickybit = 0;\nm.volavg2 = 0;\nm.q1 = 0;\nm.sample1 = 0;\nm.difftime = 0;\nm.diff = 0;\nm.edge = 0;\nm.volavg = 0;\nm.bit2 = 0;\nm.state = 0;\nm.vol = 0;\nm.q2 = 0;\nm.spintime = 0;\nm.q3 = 0;\nm.basssum = 0;\nm.sample2 = 0;\nm.q8 = 0;\nm.spintime=0.5;","frame_eqs_str":"m.basstime=(m.basstime+(m.bass_att*0.03)); m.q1=m.basstime; m.vol=pow(((m.bass+m.mid)+m.treb), 2); m.basssum=m.vol; m.basstime=((below(m.basstime, 465)!=0)?(465):(m.basstime)); m.stickybit=mod(m.time,2); m.volavg=(m.volavg+(m.vol*equal(m.stickybit, 1))); m.sample1=(m.sample1+equal(m.stickybit, 1)); m.volavg2=(m.volavg2+(m.vol*equal(m.stickybit, 0))); m.sample2=(m.sample2+equal(m.stickybit, 0)); m.edge=bnot(equal(m.bit2, m.stickybit)); m.volavg=(m.volavg-((m.volavg*m.edge)*m.stickybit)); m.volavg2=(m.volavg2-((m.volavg2*m.edge)*equal(m.stickybit, 0))); m.sample1=(m.sample1-((m.sample1*m.edge)*m.stickybit)); m.sample2=(m.sample2-((m.sample2*m.edge)*equal(m.stickybit, 0))); m.diff=((equal(m.stickybit, 1)!=0)?(div(m.basssum,div(m.volavg2,m.sample2))):(0)); m.diff=((equal(m.stickybit, 0)!=0)?(div(m.basssum,div(m.volavg,m.sample1))):(m.diff)); m.q3=m.diff; m.bit2=mod(m.time,2); m.difftime=(m.difftime+(m.diff*0.03)); m.q2=m.difftime; m.difftime=((above(m.difftime, 2000)!=0)?(0):(m.difftime)); m.spintime=(m.spintime+((m.bass*0.03)*((equal(mod(m.state,2), 1)!=0)?(1):(-1)))); m.q8=m.spintime; m.state=(m.state+above(m.diff, 10)); m.monitor=m.spintime;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=(1.05-(Math.sin(m.q3)*0.04)); m.rot=0;","warp":"shader_body\n{\n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).z;\n  ret_2.y = mix (mix (texture (sampler_fc_main, tmpvar_3).x, ret_2.x, 0.5), texture (sampler_main, uv_orig).y, 0.75);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.998) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (abs((\n    ((texture (sampler_blur2, uv_1).xyz * scale2) + bias2)\n   - texture (sampler_main, uv_1).xyz)) * 6.0);\n  ret_2 = (ret_2 * 0.65);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n}\n\n"}