{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.096,"warpscale":1.442,"zoomexp":0.05354,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"y":0.69,"rad":0.23298,"tex_zoom":0.91434,"r":0,"b":1,"g2":0,"border_a":0},"init_eqs_str":"m.xx = 0;\nm.s = 0;\nm.x1 = 0;\nm.q1 = 0;\nm.q4 = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.ox = 0;\nm.vx=0;\n\t\t\tm.rkeys = ['ox'];","frame_eqs_str":"m.x1=(0.5+((m.q1-0.5)*1.7)); m.x2=((0.5+m.ox)+(Math.sin(m.q2)*0.3)); m.y2=0.78; m.s=0.5; m.y=(((1-m.s)*m.y2)+m.s); m.x=((m.s*m.x1)+((1-m.s)*m.x2)); m.xx=m.q1; m.ox=((m.q4-0.5)*0.2);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"y":0.4,"rad":0.4769,"ang":5.15221,"tex_zoom":0.7568,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.xx = 0;\nm.w = 0;\nm.s = 0;\nm.x1 = 0;\nm.q1 = 0;\nm.q4 = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.ox = 0;\nm.vx=0;\n\t\t\tm.rkeys = ['ox'];","frame_eqs_str":"m.x1=(0.5+((m.q1-0.5)*0.5)); m.x2=((0.5+m.ox)+(Math.sin(m.q2)*0.3)); m.y2=0.78; m.s=0.5; m.w=div((Math.asin(1)*1),3); m.ang=m.w; m.y=(((((1-m.s)*m.y2)+m.s)-0.17)-((Math.sin(m.w)*(0.5-m.q1))*0.4)); m.x=((((m.s*m.x1)+((1-m.s)*m.x2))-0.08)-((Math.cos(m.w)*(0.5-m.q1))*0.4)); m.xx=m.q1; m.ox=((m.q4-0.5)*0.2);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"y":0.4,"rad":0.47693,"ang":5.15221,"tex_zoom":0.75683,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.xx = 0;\nm.w = 0;\nm.s = 0;\nm.x1 = 0;\nm.q1 = 0;\nm.q4 = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.ox = 0;\nm.vx=0;\n\t\t\tm.rkeys = ['ox'];","frame_eqs_str":"m.x1=(0.5+((m.q1-0.5)*0.5)); m.x2=((0.5+m.ox)+(Math.sin(m.q2)*0.3)); m.y2=0.78; m.s=0.5; m.w=div((-Math.asin(1)*1),3); m.ang=m.w; m.y=(((((1-m.s)*m.y2)+m.s)-0.17)-((Math.sin(m.w)*(0.5-m.q1))*0.4)); m.x=((((m.s*m.x1)+((1-m.s)*m.x2))+0.08)-((Math.cos(m.w)*(0.5-m.q1))*0.4)); m.xx=m.q1; m.ox=((m.q4-0.5)*0.2);"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":1,"y":0.4,"rad":1.46816,"tex_zoom":0.53425,"r":0,"b":1,"g2":0,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.q4 = 0;\nm.q2 = 0;\nm.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=(0.5+((m.q4-0.5)*0.2)); m.ang=m.q2;"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.y3 = 0;\nm.y1 = 0;\nm.spx3 = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.spy2 = 0;\nm.dt = 0;\nm.spy3 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.spx2 = 0;\nm.vx4 = 0;\nm.spx4 = 0;\nm.grav = 0;\nm.x3 = 0;\nm.q11 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.spy4 = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.x4 = 0;\nm.x2 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.spring = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.resist = 0;\nm.y4 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.xx4 = 0;\nm.xx1 = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.decay=0.05; m.xx1=((m.xx1*0.96)+(m.bass*0.005)); m.xx2=((m.xx2*0.96)+(m.treb*0.005)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5-((m.xx1-m.xx2)*5)); m.y1=(1-(m.yy1*0.75)); m.x1=Math.max(0.2, Math.min(0.8, m.x1)); m.spring=15; m.grav=0.65; m.resist=0.005; m.dt=0.0005; m.spx2=(((m.x1+m.x3)-(2*m.x2))*m.spring); m.spy2=(((m.y1+m.y3)-(2*m.y2))*m.spring); m.spx3=(((m.x2+m.x4)-(2*m.x3))*m.spring); m.spy3=(((m.y2+m.y4)-(2*m.y3))*m.spring); m.spx4=((m.x3-m.x4)*m.spring); m.spy4=((m.y3-m.y4)*m.spring); m.vx2=((m.vx2*(1-m.resist))+(m.dt*m.spx2)); m.vy2=((m.vy2*(1-m.resist))+(m.dt*(m.spy2-m.grav))); m.vx3=((m.vx3*(1-m.resist))+(m.dt*m.spx3)); m.vy3=((m.vy3*(1-m.resist))+(m.dt*(m.spy3-(m.grav*1.5)))); m.vx4=((m.vx4*(1-m.resist))+(m.dt*m.spx4)); m.vy4=((m.vy4*(1-m.resist))+(m.dt*(m.spy4-(m.grav*4)))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*0.8))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*0.8))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*0.8))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*0.8))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*0.8))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*0.8))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*0.8))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*0.8))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*0.8))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*0.8))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*0.8))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*0.8))); m.q1=m.x1; m.q2=m.x2; m.q3=m.x3; m.q4=m.x4; m.q5=m.y1; m.q6=m.y2; m.q7=m.y3; m.q8=m.y4; m.q2=(Math.sin((Math.atan2((m.x4-m.x3), (m.y4-m.y3))-(Math.asin(1)*2)))*0.175); m.q13=0; m.q11=((1-m.x4)*4); m.monitor=(m.xx4*0.01); m.zoom=0.998; m.rot=0.00; m.warp=0.02; m.wave_a=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((\n    (0.5 + ((uv - 0.5) * 0.996))\n   - \n    (vec2(0.0, 1.0) * texsize.zw)\n  ) - (\n    (tmpvar_5 * texsize.zw)\n   * 4.0)));\n  ret_1.x = texture (sampler_main, tmpvar_6).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur2, tmpvar_6).xyz * scale2) + bias2))\n  .x * 0.4) + 0.004));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.z;\n  tmpvar_8.y = -(tmpvar_3.z);\n  ret_1.y = max (((\n    clamp ((((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1).x - 0.4), 0.0, 1.0)\n   * 1.2) * ret_1.x), (texture (sampler_fc_main, (\n    ((uv + (vec2(0.0, 2.0) * texsize.zw)) - ((tmpvar_7 * texsize.zw) * 2.0))\n   + \n    ((tmpvar_8 * texsize.zw) * 16.0)\n  )).y - 0.004));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = tmpvar_4.z;\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv - (tmpvar_5 * 0.1)) + (tmpvar_6 * 0.06));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv);\n  ret_1 = (((\n    ((texture (sampler_blur2, tmpvar_7).xyz * scale2) + bias2)\n  .x * \n    clamp ((1.0 - tmpvar_8.y), 0.0, 1.0)\n  ) * pow (hue_shader.yxz, vec3(8.0, 8.0, 8.0))) * 3.0);\n  ret_1 = (mix (ret_1, (\n    pow (hue_shader.yzx, vec3(8.0, 8.0, 8.0))\n   * 1.4), vec3((\n    (texture (sampler_main, tmpvar_7).x * 0.8)\n   + \n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x))) * clamp ((1.0 - \n    (((texture (sampler_blur1, uv).xyz * scale1) + bias1).z * 4.0)\n  ), 0.0, 1.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec3 tmpvar_10;\n  vec3 tmpvar_11;\n  tmpvar_11 = pow (hue_shader, vec3(8.0, 8.0, 8.0));\n  tmpvar_10 = mix (mix (ret_1, vec3(1.0, 1.0, 1.0), (\n    (tmpvar_11 * texture (sampler_main, clamp ((uv - (tmpvar_9 * 2.0)), 0.0, 1.0)).y)\n   * 1.2)), (tmpvar_11.zxy * 1.8), tmpvar_8.zzz);\n  ret_1 = tmpvar_10;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_10;\n  ret = tmpvar_12.xyz;\n}\n\n"}