{"baseVals":{"rating":4,"wave_mode":5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":1.136,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"fshader":1,"zoom":1.004,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"num_inst":92,"x":0.8,"rad":0.02705,"ang":1.5708,"tex_ang":1.25664,"tex_zoom":3.07268,"g":1,"b":1,"g2":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.xang = 0;\nm.ampl = 0;\nm.fov = 0;\nm.t1 = 0;\nm.yang = 0;\nm.my = 0;\nm.oz = 0;\nm.k1 = 0;\nm.t_rel = 0;\nm.k2 = 0;\nm.mz = 0;\nm.oy = 0;\nm.mx = 0;\nm.zang = 0;\nm.sample = 0;\nm.t_abs = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=(m.time-Math.floor(m.time)); m.sample=div(m.instance,m.num_inst); m.t_abs=(m.sample*3); m.t_rel=(m.sample-div(m.time,5)); m.ampl=div((2*m.t_abs),2); m.k1=Math.sin(div(m.time,13)); m.k2=Math.sin(div(m.time,12)); m.ox=((m.ampl*Math.sin((m.t_abs*(31+(5*m.k1)))))+((Math.sin(div(m.time,25))*(1-m.t_abs))*0.4)); m.oy=(m.ampl*Math.cos((m.t_abs*(31+(5*m.k2))))); m.oz=-1; m.r=sqr(Math.sin((m.t_rel*3.4))); m.g=sqr(Math.sin(m.t_rel)); m.b=sqr(Math.cos((m.t_rel*1.8))); m.xang=div(m.time,9.5); m.yang=div((0*m.time),7); m.zang=div(-m.time,22); m.fov=0.5; m.mx=((m.ox*Math.cos(m.zang))-(m.oy*Math.sin(m.zang))); m.my=((m.ox*Math.sin(m.zang))+(m.oy*Math.cos(m.zang))); m.ox=m.mx; m.oy=m.my; m.mx=((m.ox*Math.cos(m.yang))+(m.oz*Math.sin(m.yang))); m.mz=((-m.ox*Math.sin(m.yang))+(m.oz*Math.cos(m.yang))); m.ox=m.mx; m.oz=m.mz; m.my=((m.oy*Math.cos(m.xang))-(m.oz*Math.sin(m.xang))); m.mz=((m.oy*Math.sin(m.xang))+(m.oz*Math.cos(m.xang))); m.oy=m.my; m.oz=m.mz; m.oz=(m.oz-6); m.x=(div((m.ox*m.fov),m.oz)+0.5); m.y=(div((m.oy*m.fov),m.oz)+0.5); m.a=(div(1,m.mz)*0.5); m.rad=(div(1,m.mz)*0.005);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.du = 0;\nm.q1 = 0;\nm.mult = 0;\nm.ang2 = 0;\nm.dv = 0;\nm.q2 = 0;\nm.dist = 0;","frame_eqs_str":"m.mv_g=(m.mv_g+(0.2*((0.60*Math.sin((0.835*m.time)))+(0.40*Math.sin((1.081*m.time)))))); m.mv_b=(m.mv_b+(0.2*((0.60*Math.sin((0.814*m.time)))+(0.40*Math.sin((1.011*m.time)))))); m.q1=(((m.cx*2)-1)+(0.6*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.q2=(((m.cy*2)-1)+(0.6*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.ob_r=(1-(0.4*Math.abs(m.q1))); m.ob_g=(0.3*Math.abs(m.q2)); m.ob_b=(0.4*Math.abs(m.q1)); m.wave_x=((1-Math.abs(m.q2))-0.05); m.wave_y=((1-Math.abs(m.q1))-0.06); m.wave_r=(m.wave_r+(0.4*((0.60*Math.sin((0.514*m.time)))+(0.40*Math.sin((1.211*m.time)))))); m.wave_b=(m.wave_b+(0.4*((0.60*Math.sin((0.714*m.time)))+(0.40*Math.sin(m.q2))))); m.wave_g=(m.wave_g+(0.4*((0.60*Math.sin((10*m.q1)))+(0.40*Math.sin((10*m.q2))))));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.du=(((m.x*2)-1)-m.q1); m.dv=(((m.y*2)-1)-m.q2); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=(Math.atan2(m.du, m.dv)+(m.time*0.15)); m.mult=(0.6*Math.sin((m.dist*0.05)));","warp":"shader_body\n{\n  vec2 my_uv_1;\n  float dy_2;\n  float dx_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (texsize.zw * 12.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur2, \n    ((uv + (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv + (vec2(1.0, 0.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(1.0, 0.0) * tmpvar_5)) - floor((uv - (vec2(1.0, 0.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_6.y = (((texture (sampler_blur2, \n    ((uv + (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv + (vec2(0.0, 1.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    ((uv - (vec2(0.0, 1.0) * tmpvar_5)) - floor((uv - (vec2(0.0, 1.0) * tmpvar_5))))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - (tmpvar_6 * 0.08));\n  ret_4.y = texture (sampler_fc_main, (tmpvar_7 - floor(tmpvar_7))).y;\n  ret_4.y = (ret_4.y + ((\n    (ret_4.y - ((texture (sampler_blur1, (tmpvar_7 - \n      floor(tmpvar_7)\n    )).xyz * scale1) + bias1).y)\n   * 0.125) + 0.02));\n  dx_3 = (((\n    ((texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2) + bias2)\n  ).x * 1280.0) * texsize.z);\n  dy_2 = (((\n    ((texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2) + bias2)\n   - \n    ((texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2) + bias2)\n  ).x * 1024.0) * texsize.w);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dx_3;\n  tmpvar_8.y = dy_2;\n  my_uv_1 = (uv + (tmpvar_8 * 0.01));\n  ret_4.x = texture (sampler_fw_main, my_uv_1).x;\n  ret_4.x = (ret_4.x + ((\n    (ret_4.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   - 0.02) * 0.2));\n  vec2 tmpvar_9;\n  tmpvar_9.x = dy_2;\n  tmpvar_9.y = -(dx_3);\n  my_uv_1 = (uv - (tmpvar_9 * 0.04));\n  ret_4.z = texture (sampler_fw_main, my_uv_1).z;\n  ret_4.z = (ret_4.z + (ret_4.z - (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1).z));\n  ret_4.z = (ret_4.z * (0.9 * (\n    (ret_4.x + (ret_4.y * 0.64))\n   - 1.0)));\n  ret_4.z = (ret_4.z + 0.02);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_4;\n  ret = tmpvar_10.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - tmpvar_2);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q2;\n  tmpvar_4.y = q1;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - tmpvar_4);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, fract(uv));\n  vec3 tmpvar_10;\n  tmpvar_10 = (((tmpvar_9.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) - sin(time)) * (tmpvar_9.xyz / (1.0 - \n    cos(((tmpvar_6 - (12.0 * \n      sqrt(dot (tmpvar_3, tmpvar_3))\n    )) - ((0.2 * q11) - time)))\n  )).x);\n  vec3 tmpvar_11;\n  tmpvar_11 = (1.0 - tmpvar_10);\n  vec2 tmpvar_12;\n  tmpvar_12.x = uv.x;\n  tmpvar_12.y = (uv.y * 0.75);\n  ret_1 = ((texture (sampler_main, tmpvar_12).xyz * tmpvar_11) + (0.55 * tmpvar_10));\n  vec3 tmpvar_13;\n  tmpvar_13 = mix (ret_1, tmpvar_11, vec3((1.5 * clamp (\n    dot (tmpvar_10, tmpvar_11)\n  , 0.0, 1.0))));\n  ret_1 = tmpvar_13;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = tmpvar_13;\n  ret = tmpvar_14.xyz;\n}\n\n"}