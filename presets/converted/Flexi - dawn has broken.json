{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":1.224,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.772,"zoomexp":5.00873,"zoom":1.011,"rot":0.003,"warp":0,"wave_r":0,"wave_g":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"x":0.57,"y":0.41,"rad":0.09234,"tex_zoom":0.73458,"g2":0,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":36,"additive":1,"rad":1.38306,"r":0,"g":0.03,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.c_inv_i = 0;\nm.translation_x = 0;\nm.w = 0;\nm.a_i = 0;\nm.c_r = 0;\nm.a_r = 0;\nm.iangle = 0;\nm.q18 = 0;\nm.q13 = 0;\nm.scale = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.ac_i = 0;\nm.itranslation_u = 0;\nm.q1 = 0;\nm.itranslation_v = 0;\nm.q5 = 0;\nm.c_inv_r = 0;\nm.d_i = 0;\nm.angle = 0;\nm.mu_i = 0;\nm.bcad_r = 0;\nm.iscale = 0;\nm.q4 = 0;\nm.b_r = 0;\nm.mu_r = 0;\nm.q16 = 0;\nm.t = 0;\nm.bcad_i = 0;\nm.c_i = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.ac_r = 0;\nm.translation_y = 0;\nm.q3 = 0;\nm.b_i = 0;\nm.q7 = 0;\nm.d_r = 0;\nm.q8 = 0;","frame_eqs_str":"m.t=(m.time*12.3); m.rot=(m.rot+(0.030*((0.60*Math.sin((0.38*m.time)))+(0.40*Math.sin((0.54*m.time)))))); m.dx=(m.dx+(0.002*((0.60*Math.sin((0.434*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.002*((0.60*Math.sin((0.384*m.time)))+(0.40*Math.sin((0.477*m.time)))))); m.w=(m.time*0.1); m.q13=Math.sin(m.w); m.q14=Math.cos(m.w); m.q15=0.5; m.q16=0.5; m.q17=1.1; m.q18=0.5; m.q19=0.5; m.scale=1; m.angle=(m.time*0.5); m.translation_x=0; m.translation_y=0.1; m.iscale=1; m.iangle=0.2; m.itranslation_u=0; m.itranslation_v=0; m.a_r=(Math.cos(m.angle)*m.scale); m.a_i=(Math.sin(m.angle)*m.scale); m.b_r=m.translation_x; m.b_i=m.translation_y; m.c_r=(-Math.cos(m.iangle)*m.iscale); m.c_i=(-Math.sin(m.iangle)*m.iscale); m.d_r=m.itranslation_u; m.d_i=m.itranslation_v; m.c_inv_r=div(m.c_r,((m.c_r*m.c_r)+(m.c_i*m.c_i))); m.c_inv_i=div(m.c_i,((m.c_r*m.c_r)+(m.c_i*m.c_i))); m.ac_r=((m.a_r*m.c_inv_r)-(m.a_i*m.c_inv_i)); m.ac_i=((m.a_r*m.c_inv_i)-(m.a_i*m.c_inv_r)); m.bcad_r=(((m.b_r*m.c_r)-(m.b_i*m.c_i))-((m.a_r*m.d_r)-(m.a_i*m.d_i))); m.bcad_i=(((m.b_r*m.c_i)-(m.b_i*m.c_r))-((m.a_r*m.d_i)-(m.a_i*m.d_r))); m.mu_r=((m.bcad_r*m.c_inv_r)-(m.bcad_i*m.c_inv_i)); m.mu_i=((m.bcad_r*m.c_inv_i)-(m.bcad_i*m.c_inv_r)); m.q1=m.ac_r; m.q2=m.ac_i; m.q3=m.mu_r; m.q4=m.mu_i; m.q5=m.c_r; m.q6=m.c_i; m.q7=m.d_r; m.q8=m.d_i;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv2_1;\n  vec2 d_2;\n  vec3 ret_3;\n  ret_3.y = texture (sampler_main, uv).y;\n  ret_3.y = (ret_3.y + ((\n    (ret_3.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n   * 0.1) - 0.015));\n  ret_3.z = ((texture (sampler_main, (uv_orig + \n    ((uv_orig - uv) * 0.8)\n  )).z * 0.94) - 0.004);\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv_orig - 0.5) * vec2(1.75, 1.75));\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((tmpvar_4.x * tmpvar_4.x) - (tmpvar_4.y * tmpvar_4.y));\n  tmpvar_5.y = ((2.0 * tmpvar_4.x) * tmpvar_4.y);\n  my_uv2_1 = (tmpvar_5 + vec2(0.4, 0.74));\n  d_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1)).x;\n  tmpvar_6.y = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1)).x;\n  ret_3.x = texture (sampler_fc_main, (my_uv2_1 + ((tmpvar_6 * texsize.zw) * 4.0))).x;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_3;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"uniform sampler2D sampler_sunrise;\nshader_body\n{\n  vec2 d_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q1;\n  tmpvar_2.y = q2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = q7;\n  tmpvar_3.y = q8;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.wz);\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((tmpvar_4.x * q5) - (tmpvar_4.y * q6));\n  tmpvar_5.y = ((tmpvar_4.x * q6) - (tmpvar_4.y * q5));\n  vec2 tmpvar_6;\n  tmpvar_6 = ((tmpvar_5 * aspect.yx) + tmpvar_3);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((q3 * tmpvar_6.x) + (q4 * tmpvar_6.y));\n  tmpvar_7.y = ((q4 * tmpvar_6.x) - (q3 * tmpvar_6.y));\n  d_1 = (texsize.zw * 4.0);\n  vec3 tmpvar_8;\n  tmpvar_8 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_9;\n  tmpvar_9 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_8.y;\n  tmpvar_10.y = tmpvar_9.y;\n  vec2 tmpvar_11;\n  tmpvar_11.x = tmpvar_8.x;\n  tmpvar_11.y = tmpvar_9.x;\n  vec2 tmpvar_12;\n  tmpvar_12.x = tmpvar_8.y;\n  tmpvar_12.y = tmpvar_9.y;\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_8.z;\n  tmpvar_13.y = tmpvar_9.z;\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = mix (mix (mix (texture (sampler_sunrise, \n    fract((0.5 + ((\n      (1.0 - abs(((\n        fract((((\n          ((tmpvar_7 / ((tmpvar_6.x * tmpvar_6.x) + (tmpvar_6.y * tmpvar_6.y))) + tmpvar_2)\n         * 0.5) - (tmpvar_10 * 0.2)) + (tmpvar_11 * 0.1)))\n       * 2.0) - 1.0)))\n     - 0.5) * 0.99)))\n  ).xyz, vec3(-2.0, -2.0, -2.0), vec3(\n    (texture (sampler_main, (uv + (tmpvar_12 * 0.1))).x * 0.1)\n  )), vec3(-1.0, -1.0, -1.0), vec3((texture (sampler_main, \n    (uv - (tmpvar_13 * 0.024))\n  ).z * 0.4))), vec3(1.0, 1.0, 1.0), vec3(clamp ((texture (sampler_main, uv).y - \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3).y * 2.0)\n  ), 0.0, 1.0)));\n  ret = tmpvar_14.xyz;\n}\n\n"}