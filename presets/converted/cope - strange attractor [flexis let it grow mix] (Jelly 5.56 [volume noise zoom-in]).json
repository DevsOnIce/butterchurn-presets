{"baseVals":{"rating":5,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_alpha":0,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":1,"darken":1,"solarize":1,"invert":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"wave_mystery":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":1,"zoom":0.99951,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.5,"wave_y":0.5,"ob_size":0.005,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":1.248,"mv_dx":0,"mv_dy":0,"mv_l":5,"mv_r":1,"mv_g":1,"mv_b":0,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.z = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.t3 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q7 = 0;\nm.q8 = 0;\nm.t1=0.5; m.t2=0.5;\n\t\t\tm.rkeys = ['t1','t3','t2'];","frame_eqs_str":"","point_eqs_str":"m.x=((1.4*Math.sin((m.q2*m.t2)))-(m.t3*Math.cos((0.5*m.t1)))); m.y=((m.t3*Math.sin((-m.q1*m.t1)))-Math.cos((-0.5*m.t2))); m.z=(1*Math.sin(m.t1)); m.t1=m.x; m.t2=m.y; m.t3=m.z; m.x=((m.x*0.4)+0.45); m.y=((m.y*0.4)+0.8); m.r=m.q8; m.b=m.q7; m.g=m.q6;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":0.07},"init_eqs_str":"m.z = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.t3 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q7 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = ['t1','t3','t2'];","frame_eqs_str":"","point_eqs_str":"m.x=((1.4*Math.sin((m.q2*m.t2)))-(m.t3*Math.cos((0.5*m.t1)))); m.y=((m.t3*Math.sin((-m.q1*m.t1)))-Math.cos((-0.5*m.t2))); m.z=(1*Math.sin(m.t1)); m.t1=m.x; m.t2=m.y; m.t3=m.z; m.x=((m.x*0.4)+0.45); m.y=((m.y*0.4)+0.8); m.r=m.q8; m.b=m.q7; m.g=m.q6;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.q6 = 0;\nm.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.q7 = 0;\nm.q8 = 0;","frame_eqs_str":"m.q1=-Math.abs((1*Math.sin((m.time*0.3)))); m.q2=(1*Math.sin((m.time*0.45))); m.q3=(1*Math.cos((m.time*0.6))); m.wave_r=(m.wave_r+(0.45*((0.6*Math.sin((m.time*1.3)))+(0.4*Math.sin((0.98*m.time)))))); m.wave_b=(m.wave_b+(0.45*((0.6*Math.sin((m.time*1.1)))+(0.4*Math.sin((0.78*m.time)))))); m.wave_g=(m.wave_g+(0.45*((0.6*Math.sin((m.time*1.2)))+(0.4*Math.sin((0.6*m.time)))))); m.q8=1; m.q7=1; m.q6=1; m.warp=0; m.zoom=1;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_1))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_2.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_1))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_fc_main, (uv + (\n    (tmpvar_2 * texsize.zw)\n   * 6.0))).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)).xxx - 0.5)\n   * 0.04) - 0.008));\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 6.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - (0.25 * tmpvar_5));\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (tmpvar_3, vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (tmpvar_4, vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + (0.25 * tmpvar_7));\n  ret_1 = ((0.8 * (\n    (texture (sampler_blur3, tmpvar_6).xyz * scale3)\n   + bias3)) - ((texture (sampler_blur1, tmpvar_6).xyz * scale1) + bias1));\n  ret_1 = (ret_1 + (0.6 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 - ((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + ((1.2 * texture (sampler_main, tmpvar_8).xyz) + (0.15 * \n    ((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1)\n  )));\n  ret_1 = (ret_1 + 1.0);\n  vec3 tmpvar_9;\n  tmpvar_9.xy = (uv * 1.5);\n  tmpvar_9.z = (0.1 * time);\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) - (0.2 * dot (texture (sampler_noisevol_lq, tmpvar_9), vec4(0.32, 0.49, 0.29, 0.0))));\n  ret_1 = (mix (ret_1, (\n    (0.75 * ret_1)\n   * \n    dot ((((0.6 * \n      ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n    ) - (0.7 * texture (sampler_main, uv).xyz)) - (0.3 * (\n      (texture (sampler_blur1, tmpvar_8).xyz * scale1)\n     + bias1))), vec3(0.32, 0.49, 0.29))\n  ), pow (hue_shader, ret_1)) * 0.8);\n  ret_1 = (ret_1 * ret_1);\n  vec3 tmpvar_10;\n  tmpvar_10 = sqrt(ret_1);\n  ret_1 = tmpvar_10;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = tmpvar_10;\n  ret = tmpvar_11.xyz;\n}\n\n"}