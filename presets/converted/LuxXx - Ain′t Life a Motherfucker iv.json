{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.626,"warpscale":1.331,"zoomexp":1.00001,"zoom":0.99951,"warp":0.08925,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.ma=0.5; m.my=0.5; m.md=0;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=(m.bass*0.1); m.r=(m.bass*0.5);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.5; m.md=1;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=(m.bass*0.1); m.g=(m.treb*0.5);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.5; m.md=2;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=(m.bass*0.1);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=(m.bass*0.1);"}],"init_eqs_str":"m.y3 = 0;\nm.y1 = 0;\nm.q12 = 0;\nm.w2 = 0;\nm.ref_ang = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.vx1 = 0;\nm.x3 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.vr3 = 0;\nm.vr2 = 0;\nm.q4 = 0;\nm.bounce = 0;\nm.vr = 0;\nm.v2r = 0;\nm.w1 = 0;\nm.r = 0;\nm.x2 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.vy1 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.vr1 = 0;\nm.v1 = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.v2 = 0;\nm.q8 = 0;\nm.x1=0.5; m.y1=0.6; m.x2=0.9; m.y2=0.14; m.x3=0.5; m.y3=0.2; m.vr1=0.50001; m.vr2=0.0; m.vr3=0.0; m.vx1=0; m.vx2=0.4; m.vx3=0.9;","frame_eqs_str":"m.zoom=1; m.warp=0.01; m.wave_a=1; m.r=(0.04+((m.bass_att+m.treb_att)*0.01)); m.monitor=m.aspecty; m.vr=(Math.sin(m.vr1)*m.r); m.bounce=below(m.y1, (m.r-((m.aspectx-1)*0.5))); m.y1=(m.y1+m.vy1); m.vy1=((m.bounce!=0)?(((Math.abs(m.vy1)*0.96)+(((m.r-m.y1)-((m.aspectx-1)*0.5))*0.1))):((m.vy1-div((0.0003*60),m.fps)))); m.vx1=((m.bounce!=0)?((m.vx1+((m.vr-m.vx1)*0.15))):(m.vx1)); m.vr=((m.bounce!=0)?((m.vr+((m.vx1-m.vr)*0.85))):(m.vr)); m.vr1=Math.asin(div(m.vr,m.r)); m.bounce=above(m.x1, ((1-m.r)+((m.aspecty-1)*0.5))); m.vx1=((m.bounce!=0)?(((-Math.abs(m.vx1)*0.96)+((((1-m.r)-m.x1)+((m.aspecty-1)*0.5))*0.1))):(m.vx1)); m.vy1=((m.bounce!=0)?((m.vy1+((m.vr-m.vy1)*0.15))):(m.vy1)); m.vr=((m.bounce!=0)?((m.vr+((m.vy1-m.vr)*0.85))):(m.vr)); m.vr1=Math.asin(div(m.vr,m.r)); m.bounce=below(m.x1, (m.r-((m.aspecty-1)*0.5))); m.x1=(m.x1+m.vx1); m.vx1=((m.bounce!=0)?(((Math.abs(m.vx1)*0.96)+(((m.r-m.x1)-((m.aspecty-1)*0.5))*0.1))):(m.vx1)); m.vy1=((m.bounce!=0)?((m.vy1+((-m.vr-m.vy1)*0.15))):(m.vy1)); m.vr=((m.bounce!=0)?((m.vr-((m.vy1+m.vr)*0.85))):(m.vr)); m.vr1=Math.asin(div(m.vr,m.r)); m.vr=(Math.sin(m.vr2)*m.r); m.bounce=below(m.y2, (m.r-((m.aspectx-1)*0.5))); m.y2=(m.y2+m.vy2); m.vy2=((m.bounce!=0)?(((Math.abs(m.vy2)*0.96)+(((m.r-m.y2)-((m.aspectx-1)*0.5))*0.1))):((m.vy2-div((0.0003*60),m.fps)))); m.vx2=((m.bounce!=0)?((m.vx2+((m.vr-m.vx2)*0.15))):(m.vx2)); m.vr=((m.bounce!=0)?((m.vr+((m.vx2-m.vr)*0.85))):(m.vr)); m.vr2=Math.asin(div(m.vr,m.r)); m.bounce=above(m.x2, ((1-m.r)+((m.aspecty-1)*0.5))); m.vx2=((m.bounce!=0)?(((-Math.abs(m.vx2)*0.96)+((((1-m.r)-m.x2)+((m.aspecty-1)*0.5))*0.1))):(m.vx2)); m.vy2=((m.bounce!=0)?((m.vy2+((m.vr-m.vy2)*0.15))):(m.vy2)); m.vr=((m.bounce!=0)?((m.vr+((m.vy2-m.vr)*0.85))):(m.vr)); m.vr2=Math.asin(div(m.vr,m.r)); m.bounce=below(m.x2, (m.r-((m.aspecty-1)*0.5))); m.x2=(m.x2+m.vx2); m.vx2=((m.bounce!=0)?(((Math.abs(m.vx2)*0.96)+(((m.r-m.x2)-((m.aspecty-1)*0.5))*0.1))):(m.vx2)); m.vy2=((m.bounce!=0)?((m.vy2+((-m.vr-m.vy2)*0.15))):(m.vy2)); m.vr=((m.bounce!=0)?((m.vr-((m.vy2+m.vr)*0.85))):(m.vr)); m.vr2=Math.asin(div(m.vr,m.r)); m.vr=(Math.sin(m.vr3)*m.r); m.bounce=below(m.y3, (m.r-((m.aspectx-1)*0.5))); m.y3=(m.y3+m.vy3); m.vy3=((m.bounce!=0)?(((Math.abs(m.vy3)*0.96)+(((m.r-m.y3)-((m.aspectx-1)*0.5))*0.1))):((m.vy3-div((0.0003*60),m.fps)))); m.vx3=((m.bounce!=0)?((m.vx3+((m.vr-m.vx3)*0.15))):(m.vx3)); m.vr=((m.bounce!=0)?((m.vr+((m.vx3-m.vr)*0.85))):(m.vr)); m.vr3=Math.asin(div(m.vr,m.r)); m.bounce=above(m.x3, ((1-m.r)+((m.aspecty-1)*0.5))); m.vx3=((m.bounce!=0)?(((-Math.abs(m.vx3)*0.96)+((((1-m.r)-m.x3)+((m.aspecty-1)*0.5))*0.1))):(m.vx3)); m.vy3=((m.bounce!=0)?((m.vy3+((m.vr-m.vy3)*0.15))):(m.vy3)); m.vr=((m.bounce!=0)?((m.vr+((m.vy3-m.vr)*0.85))):(m.vr)); m.vr3=Math.asin(div(m.vr,m.r)); m.bounce=below(m.x3, (m.r-((m.aspecty-1)*0.5))); m.x3=(m.x3+m.vx3); m.vx3=((m.bounce!=0)?(((Math.abs(m.vx3)*0.96)+(((m.r-m.x3)-((m.aspecty-1)*0.5))*0.1))):(m.vx3)); m.vy3=((m.bounce!=0)?((m.vy3+((-m.vr-m.vy3)*0.15))):(m.vy3)); m.vr=((m.bounce!=0)?((m.vr-((m.vy3+m.vr)*0.85))):(m.vr)); m.vr3=Math.asin(div(m.vr,m.r)); m.bounce=below(sqrt((sqr((((m.x1+m.vx1)-m.x2)-m.vx2))+sqr((((m.y1+m.vy1)-m.y2)-m.vy2)))), (2*m.r)); m.bounce=(m.bounce*below(sqrt((sqr((((m.x1+m.vx1)-m.x2)-m.vx2))+sqr((((m.y1+m.vy1)-m.y2)-m.vy2)))), sqrt((sqr((m.x1-m.x2))+sqr((m.y1-m.y2)))))); m.ref_ang=(Math.atan2((m.x2-m.x1), (m.y2-m.y1))+Math.asin(1)); m.v1=sqrt(((m.vx1*m.vx1)+(m.vy1*m.vy1))); m.v2=sqrt(((m.vx2*m.vx2)+(m.vy2*m.vy2))); m.w1=Math.atan2(m.vx1, m.vy1); m.w2=Math.atan2(m.vx2, m.vy2); m.vr=(Math.sin(m.vr1)*m.r); m.v2r=(Math.sin(m.vr2)*m.r); m.vx1=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vx1)); m.vy1=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vy1)); m.vx2=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vx2)); m.vy2=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vy2)); m.vr=((m.bounce!=0)?((m.vr+(((Math.cos((m.w1-m.ref_ang))*(m.v1-m.v2))-m.vr)*0.9))):(m.vr)); m.vr1=Math.asin(div(m.vr,m.r)); m.v2r=((m.bounce!=0)?((m.v2r+(((Math.cos((m.w2-m.ref_ang))*(m.v2-m.v1))-m.v2r)*0.9))):(m.v2r)); m.vr2=Math.asin(div(m.v2r,m.r)); m.bounce=below(sqrt((sqr((((m.x1+m.vx1)-m.x3)-m.vx3))+sqr((((m.y1+m.vy1)-m.y3)-m.vy3)))), (2*m.r)); m.bounce=(m.bounce*below(sqrt((sqr((((m.x1+m.vx1)-m.x3)-m.vx3))+sqr((((m.y1+m.vy1)-m.y3)-m.vy3)))), sqrt((sqr((m.x1-m.x3))+sqr((m.y1-m.y3)))))); m.ref_ang=(Math.atan2((m.x3-m.x1), (m.y3-m.y1))+Math.asin(1)); m.v1=sqrt(((m.vx1*m.vx1)+(m.vy1*m.vy1))); m.v2=sqrt(((m.vx3*m.vx3)+(m.vy3*m.vy3))); m.w1=Math.atan2(m.vx1, m.vy1); m.w2=Math.atan2(m.vx3, m.vy3); m.vr=(Math.sin(m.vr1)*m.r); m.v2r=(Math.sin(m.vr3)*m.r); m.vx1=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vx1)); m.vy1=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vy1)); m.vx3=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vx3)); m.vy3=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vy3)); m.vr=((m.bounce!=0)?((m.vr+(((Math.cos((m.w1-m.ref_ang))*(m.v1-m.v2))-m.vr)*0.9))):(m.vr)); m.vr1=Math.asin(div(m.vr,m.r)); m.v2r=((m.bounce!=0)?((m.v2r+(((Math.cos((m.w2-m.ref_ang))*(m.v2-m.v1))-m.v2r)*0.9))):(m.v2r)); m.vr3=Math.asin(div(m.v2r,m.r)); m.bounce=below(sqrt((sqr((((m.x3+m.vx3)-m.x2)-m.vx2))+sqr((((m.y3+m.vy3)-m.y2)-m.vy2)))), (2*m.r)); m.bounce=(m.bounce*below(sqrt((sqr((((m.x2+m.vx2)-m.x3)-m.vx3))+sqr((((m.y2+m.vy2)-m.y3)-m.vy3)))), sqrt((sqr((m.x2-m.x3))+sqr((m.y2-m.y3)))))); m.ref_ang=(Math.atan2((m.x2-m.x3), (m.y2-m.y3))+Math.asin(1)); m.v1=sqrt(((m.vx3*m.vx3)+(m.vy3*m.vy3))); m.v2=sqrt(((m.vx2*m.vx2)+(m.vy2*m.vy2))); m.w1=Math.atan2(m.vx3, m.vy3); m.w2=Math.atan2(m.vx2, m.vy2); m.vr=(Math.sin(m.vr3)*m.r); m.v2r=(Math.sin(m.vr2)*m.r); m.vx3=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vx3)); m.vy3=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+(((m.vr-m.v2r)-((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v2)*Math.cos(((m.w2-m.ref_ang)-Math.asin(1)))))):(m.vy3)); m.vx2=((m.bounce!=0)?(((((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.sin((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vx2)); m.vy2=((m.bounce!=0)?(((((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+(((m.v2r-m.vr)-((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang))))*0.1))+((Math.cos((m.ref_ang+Math.asin(1)))*m.v1)*Math.cos(((m.w1-m.ref_ang)-Math.asin(1)))))):(m.vy2)); m.vr=((m.bounce!=0)?((m.vr+(((Math.cos((m.w1-m.ref_ang))*(m.v1-m.v2))-m.vr)*0.9))):(m.vr)); m.vr3=Math.asin(div(m.vr,m.r)); m.v2r=((m.bounce!=0)?((m.v2r+(((Math.cos((m.w2-m.ref_ang))*(m.v2-m.v1))-m.v2r)*0.9))):(m.v2r)); m.vr2=Math.asin(div(m.v2r,m.r)); m.q1=m.aspectx; m.q2=m.aspecty; m.q3=(m.r*2); m.q4=m.x1; m.q5=m.y1; m.q6=m.vr1; m.q7=m.x2; m.q8=m.y2; m.q9=m.vr2; m.q10=m.x3; m.q11=m.y3; m.q12=m.vr3; m.q13=Math.atan2((div(((m.x1+m.x2)+m.x3),3)-0.5), (div(((m.y1+m.y2)+m.y3),3)-0.5)); m.q14=(sigmoid(sqrt((sqr((div(((m.x1+m.x2)+m.x3),3)-0.5))+sqr((div(((m.y1+m.y2)+m.y3),3)-0.5)))), 2)*0.2);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_fc_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = ((max (tmpvar_6, \n    (texture (sampler_main, (uv - (tmpvar_2 * 2.0))) * 0.9)\n  ).xyz - 0.005) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.05));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 1.5);\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\n  uv3_2.y = (tmpvar_5 + q30);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + (2.0 * texture (sampler_main, uv3_2).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_9.xyz;\n}\n\n"}