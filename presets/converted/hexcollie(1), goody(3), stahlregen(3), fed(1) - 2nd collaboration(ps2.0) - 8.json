{"baseVals":{"rating":2,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":4.142,"wave_scale":1.107,"wave_smoothing":0.648,"wave_mystery":-0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":11.20207,"zoom":1.00949,"warp":0.01,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.7,"mv_g":0.7,"mv_b":0.7,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"additive":1,"thickoutline":1,"textured":1,"rad":0.36457,"border_a":1},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=m.q1; m.b=m.q2; m.g=m.q3; m.r2=(1-Math.abs(m.q1)); m.b2=m.q2; m.g2=m.q3; m.ang=(m.ang+(12*Math.tan(m.time))); m.x=(m.x+(0.15*Math.sin(m.time))); m.y=(m.y+(0.15*Math.cos(m.time))); m.a=(0.5+(0.5*Math.sin(m.bass_att))); m.a2=(0.5+(0.5*Math.cos(m.bass_att)));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;\nm.dvy = 0;\nm.vx = 0;\nm.vy = 0;\nm.vang = 0;\nm.xv = 0;\nm.dvx = 0;\nm.bb = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.yv = 0;","frame_eqs_str":"m.q1=(0.5+(0.4*Math.sin(((0.43*m.time)+(0.12*m.bass_att))))); m.q2=(0.5+(0.4*Math.sin(((0.63*m.time)+(0.14*m.bass_att))))); m.q3=(0.5+(0.4*Math.sin(((0.83*m.time)+(0.16*m.bass_att))))); m.ob_b=(mod(m.frame,40)*0.01); m.bb=(((m.bass_att*0.8)*0.02)+(m.bb*0.98)); m.mv_x=(m.bb*30); m.mv_dx=(((m.mv_dx+(Math.sin(m.time)*0.1))+(m.mv_x*0.01))-0.3); m.monitor=m.mv_x; m.wave_mystery=((Math.floor(rand(150))*0.01)-(Math.floor(rand(150))*0.01));\n\t\tm.rkeys = ['sx','sy','rot'];","pixel_eqs_str":"m.xv=(((Math.sin((m.time*0.333))*m.x)*Math.cos((m.time*0.667)))*m.x); m.yv=(((Math.cos((m.time*0.333))*m.y)*Math.sin((m.time*0.667)))*m.y); m.x=m.xv; m.y=m.yv; m.vang=(((Math.sin((m.time*0.2))*3.14159)*0.02)-1.68); m.vx=((((m.x-0.5)*Math.cos(m.vang))-((m.y-0.5)*Math.sin(m.vang)))+0.5); m.vy=((((m.x-0.5)*Math.sin(m.vang))+((m.y-0.5)*Math.cos(m.vang)))+0.5); m.dvx=(0.01+(Math.floor(rand(2))*0.01)); m.dvy=-0.01; m.dx=((m.dvx*Math.cos(m.vang))-(m.dvy*Math.sin(m.vang))); m.dy=((-m.dvx*Math.sin(m.vang))-(m.dvy*Math.cos(m.vang))); m.dy=((below(m.y, 0.2)*m.dy)+(above(m.y, 0.1)*0.01)); m.dx=((below(m.x, 0.2)*m.dx)+(above(m.x, 0.1)*0.01)); m.sx=(m.sx+(0.075*Math.sin((m.x*3)))); m.sy=(m.sy+(0.075*Math.sin((m.y*3.1)))); m.cx=(0.5+(0.15*Math.sin(m.time))); m.cy=(0.5+(0.15*Math.cos(m.time))); m.rot=((m.rot+((0.05*Math.sin(((m.rad*10)-(m.time*5))))*m.treb_att))-(0.005*Math.cos((m.time*m.rad))));","warp":"uniform sampler2D sampler_fw_clouds;\nshader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz - (0.85 * (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret_1 = (ret_1 + (texture (sampler_fw_clouds, uv) * 0.25).xyz);\n  ret_1 = ((ret_1 - 0.05) * 0.98);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (uv.x + 0.001);\n  tmpvar_3.y = uv.y;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = abs(((\n    (((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) - tmpvar_4.x)\n   - tmpvar_4.y) - tmpvar_4.z));\n  if ((tmpvar_5 > 0.1)) {\n    ret_1 = ((texture (sampler_blur2, uv).xyz * scale2) + bias2);\n  } else {\n    ret_1 = ((texture (sampler_blur3, uv).xyz * scale3) + bias3);\n  };\n  ret_1 = (ret_1 + (0.66 * (\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2)));\n  float tmpvar_6;\n  tmpvar_6 = ret_1.x;\n  ret_1 = (ret_1 * 2.0);\n  float tmpvar_7;\n  tmpvar_7 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_8;\n  tmpvar_8 = mix ((0.75 * vec3(tmpvar_7)), (vec3(tmpvar_7) * (\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n   - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  )), ((\n    (0.5 * rand_preset)\n  .xyz + \n    (0.5 * _qa.xyz)\n  ) * vec3(tmpvar_7)));\n  ret_1 = (tmpvar_8 + (tmpvar_6 * tmpvar_8));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n}\n\n"}