{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":1.549,"warpscale":2.94,"zoomexp":1.03315,"fshader":1,"zoom":1.56481,"warp":1.45984,"sx":0.93272,"sy":0.89632,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"x":0.14,"y":0.13,"rad":0.20388,"ang":0.6283,"tex_zoom":1.17257,"border_a":0},"init_eqs_str":"m.vx=0; m.vy=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.n = 0;\nm.w = 0;\nm.n2 = 0;\nm.res = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.j3 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.n1 = 0;\nm.q9 = 0;\nm.x = 0;\nm.v = 0;\nm.diff = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.j2 = 0;\nm.k = 0;\nm.r = 0;\nm.y = 0;\nm.beat = 0;\nm.vol = 0;\nm.j1 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.q3 = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.v=0.8; m.j1=((m.j1*0.95)+(sqr((m.bass*4))*m.v)); m.j2=((m.j2*0.95)+(sqr((m.mid*4))*m.v)); m.j3=((m.j3*0.95)+(sqr((m.treb*4))*m.v)); m.n=(m.n+(m.j1*0.0052)); m.n1=(m.n1+(m.j2*0.0052)); m.n2=(m.n2+(m.j3*0.0052)); m.q12=(m.n*0.01); m.q13=(m.n1*0.01); m.q14=(m.n2*0.01); m.k=((m.k*0.99)+sqr((m.mid_att*2))); m.q5=(m.k*0.00); m.zoom=0.99; m.rot=-0.00; m.w=-0.46; m.q1=Math.sin(m.w); m.q2=Math.cos(m.w); m.w=(m.n*0.001); m.q3=Math.sin(m.w); m.q4=Math.cos(m.w); m.q9=(m.n1*0.004); m.q10=(m.n2*0.004); m.vol=(((m.bass*8)+(m.mid*4))+(m.treb*2)); m.vol=(m.vol*above(m.vol, 17)); m.monitor=m.vol; m.beat=above(m.vol, m.res); m.diff=(((1-m.beat)*m.diff)+(m.beat*(m.vol-m.res))); m.res=((m.beat*(m.vol+(2*m.diff)))+((1-m.beat)*(m.res-div((((m.diff*0.04)+0.12)*60),m.fps)))); m.res=Math.max(0, m.res); m.monitor=m.res; m.x=((m.beat!=0)?(((rand(60)*0.01)+0.2)):(m.x)); m.y=((m.beat!=0)?(((rand(60)*0.01)+0.2)):(m.y)); m.q21=m.x; m.q22=m.y; m.wave_x=m.q1; m.wave_y=(1-m.q2);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.cx=m.q21; m.cy=m.q22; m.d=pow(sqrt((sqr((m.x-m.cx))+sqr((m.y-m.cy)))), 0.8); m.r=0.2; m.v=0.2; m.dx=(((m.x-m.cx)*m.v)*(m.d-m.r)); m.dy=(((m.y-m.cy)*m.v)*(m.d-m.r));","warp":"shader_body\n{\n  vec2 uv6_1;\n  vec2 uv5_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(-1.0, 1.0) * uv);\n  ret_3.x = (((texture (sampler_fc_main, \n    ((uv.yx * 4.0) - vec2(3.0, 0.0))\n  ).z + texture (sampler_fc_main, \n    (vec2(0.45, 0.55) + (tmpvar_4 * 1.15))\n  ).x) + (texture (sampler_fc_main, \n    (vec2(-1.0, 0.0) + (((tmpvar_5 + vec2(1.0, 0.0)) - 0.5) * 4.0))\n  ).x + texture (sampler_fc_main, \n    (vec2(1.0, 2.0) + (((\n      (vec2(1.0, -1.0) * uv)\n     + vec2(0.0, 1.0)) - 0.5) * 4.0))\n  ).x)) * 1.075);\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_4 * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((q2 * tmpvar_6.x) - (q1 * tmpvar_6.y));\n  tmpvar_7.y = ((q1 * tmpvar_6.x) + (q2 * tmpvar_6.y));\n  uv5_2 = (vec2(1.05, 1.05) * tmpvar_7);\n  uv5_2 = (vec2(0.47, 0.53) + (uv5_2 * aspect.zw));\n  ret_3.z = ((texture (sampler_fc_main, (vec2(-1.0, 0.0) + \n    (((tmpvar_5 + vec2(1.0, 0.0)) - 0.5) * 4.0)\n  )).x + texture (sampler_fc_main, uv5_2).z) * 1.075);\n  vec2 tmpvar_8;\n  tmpvar_8 = ((tmpvar_4 * aspect.xy) * 2.0);\n  vec2 tmpvar_9;\n  tmpvar_9.x = ((q4 * tmpvar_8.x) - (q3 * tmpvar_8.y));\n  tmpvar_9.y = ((q3 * tmpvar_8.x) + (q4 * tmpvar_8.y));\n  uv6_1 = (vec2(1.05, 1.05) * tmpvar_9);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q9;\n  tmpvar_10.y = q10;\n  uv6_1 = ((0.5 + (uv6_1 * aspect.zw)) + tmpvar_10);\n  uv6_1 = (1.0 - abs((\n    (fract((uv6_1 * 0.5)) * 2.0)\n   - 1.0)));\n  ret_3.y = max (texture (sampler_fc_main, uv6_1).z, (texture (sampler_fc_main, uv6_1).y * 0.5));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_3;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.z;\n  tmpvar_4.y = -(tmpvar_2.z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = -(tmpvar_2.z);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    (mix (mix (vec3(0.2, 0.2, 0.0), vec3(0.6, 0.6, 0.0), vec3((\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n    .y * 8.0))), vec3(1.0, 1.0, 1.0), vec3(((\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\n  , vec3(0.0, 1.0, 0.0), vec3(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\n  )), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\n  ret = tmpvar_8.xyz;\n}\n\n"}