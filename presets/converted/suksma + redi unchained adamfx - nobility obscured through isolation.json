{"baseVals":{"rating":0,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_orient":1,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":3.39416,"zoom":1.00815,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"additive":1,"thickoutline":1,"rad":0.20068,"tex_zoom":4.59158},"init_eqs_str":"m.xx = 0;\nm.aa = 0;\nm.tr = 0;\nm.ss = 0;\nm.gg = 0;\nm.q5 = 0;\nm.mi = 0;\nm.ba = 0;\nm.bb = 0;\nm.rr = 0;\nm.yy = 0;\n\n\t\t\tm.rkeys = ['xx','aa','ss','gg','bb','rr','yy'];","frame_eqs_str":"m.ba=(m.bass-0.9); m.tr=(m.treb-0.9); m.mi=(m.mid-0.9); m.xx=((m.xx+(m.ba*0.01))-(m.tr*0.001)); m.yy=((m.yy+(m.tr*0.01))-(m.ba*0.001)); m.xx=((above(1, m.xx)!=0)?(((below(0, m.xx)!=0)?(m.xx):(1))):(0)); m.yy=((above(1, m.yy)!=0)?(((below(0, m.yy)!=0)?(m.yy):(1))):(0)); m.rad=(((m.ba+m.tr)+m.mi)*0.333); m.ss=(m.ss+(m.mi*0.5)); m.ss=((above(8, m.ss)!=0)?(((below(3, m.ss)!=0)?(m.ss):(8))):(3)); m.aa=(m.aa+(0.01*((((m.bass+m.bass_att)+m.treb)+m.treb_att)-3.5))); m.sides=m.ss; m.ang=m.aa; m.textured=((below(((m.bass+m.treb)+m.mid), m.q5)!=0)?(1):(0)); m.rr=(m.rr+(m.ba*0.4)); m.gg=(m.gg+(m.tr*0.4)); m.bb=(m.bb+(m.mi*0.4)); m.r=(m.rr-(0.5*m.gg)); m.b=(m.gg-(0.5*m.bb)); m.g=(m.bb-(0.5*m.rr)); m.r2=m.b; m.b2=m.g; m.g2=m.r; m.x=m.xx; m.y=m.yy;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"m.y1 = 0;\nm.xx = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.tr = 0;\nm.bt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.mi = 0;\nm.ry = 0;\nm.rx = 0;\nm.ba = 0;\nm.x2 = 0;\nm.t2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.yy = 0;\n\n\t\t\tm.rkeys = ['bt'];","frame_eqs_str":"m.ba=(m.bass-0.9); m.tr=(m.treb-0.9); m.mi=(m.mid-0.9); m.xx=((m.xx+(m.ba*0.01))-(m.tr*0.001)); m.yy=((m.yy+(m.tr*0.01))-(m.ba*0.001)); m.xx=(m.xx+((Math.cos((((m.frame*6.28)+m.bass)-1))*0.05)*m.q2)); m.yy=(m.yy+((Math.sin(((m.time*3.14)*m.q5))*0.05)*m.q2)); m.xx=((above(1, m.xx)!=0)?(((below(0, m.xx)!=0)?(m.xx):(1))):(0)); m.yy=((above(1, m.yy)!=0)?(((below(0, m.yy)!=0)?(m.yy):(1))):(0)); m.t1=m.xx; m.t2=m.yy;","point_eqs_str":"m.x1=((Math.cos(div((m.sample*360),6.28))*Math.sin(div((m.sample*360),6.28)))+0.5); m.y1=(Math.sin(div((m.sample*360),6.28))*Math.sin(div((m.sample*360),6.28))); m.x2=m.x1; m.y2=m.y1; m.ry=(0.5+(m.treb-m.q5)); m.rx=(0.5+(m.bass-m.q5)); m.y1=((m.y1*m.ry)+0.25); m.x1=((m.x1*m.rx)+0.25); m.y1=(m.y1+(m.t1-0.5)); m.x1=(m.x1+(m.t2-0.5)); m.x1=((above(1, m.x1)!=0)?(((below(0, m.x1)!=0)?(m.x1):(m.x1))):(m.x1)); m.y1=((above(1, m.y1)!=0)?(((below(0, m.y1)!=0)?(m.y1):(m.y1))):(m.y1)); m.y=m.y1; m.x=m.x1; m.r=(Math.sin((m.sample*m.value2))*0.5); m.g=(Math.sin((((((m.bass+m.treb)+m.q2)+m.q1)+m.q5)+(m.value1*m.bass)))*0.5); m.bt=(m.bt+(m.value1*0.002)); m.b=(Math.sin((m.bt+m.value1))*0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.timer_base = 0;\nm.sx_temp = 0;\nm.grid = 0;\nm.q1 = 0;\nm.sy_temp = 0;\nm.centerx = 0;\nm.wave_size = 0;\nm.crad = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.centery = 0;","frame_eqs_str":"m.warp=0; m.wave_r=(m.wave_r+((above(m.bass_att, 1.4)!=0)?(1):((0.49*Math.sin((m.time*2)))))); m.wave_g=(m.wave_g+((above(m.bass_att, 1.4)!=0)?(0):(((above(m.treb_att, 1.4)!=0)?(1):((0.49*Math.sin((m.time*3)))))))); m.wave_b=(m.wave_b+((above(m.treb_att, 1.4)!=0)?(0):((0.49*Math.sin(m.time))))); m.timer_base=0.5; m.q1=Math.sin(((m.time*m.timer_base)*4)); m.q2=Math.sin(((m.time*m.timer_base)*2)); m.q3=Math.sin((m.time*m.timer_base)); m.rot=((above(m.q1, 0)!=0)?(((above(m.q2, 0)!=0)?(0.1):(-0.1))):(0)); m.zoom=((m.zoom+(0.05*m.q2))+(0.05*m.q1)); m.wave_mystery=((m.wave_mystery+(0.7*m.q1))+(0.3*m.q2)); m.wave_size=(m.wave_size+(0.5*m.q3)); m.cx=(m.cx+(0.2*m.q1)); m.cy=(m.cy+(0.2*m.q3));\n\t\tm.rkeys = ['sx','sy'];","pixel_eqs_str":"m.centerx=0.5; m.centery=0.5; m.crad=(Math.abs((m.rad-0.5))*m.q2); m.grid=(mod(Math.abs(((m.x*10)-5)),2)+mod(Math.abs(((m.y*10)-5)),2)); m.sx_temp=((equal(m.grid, 0)!=0)?(((above(m.x, m.centerx)!=0)?(((m.sx-m.crad)-m.centerx)):(((m.sx+m.crad)-m.centerx)))):(m.sx)); m.sy_temp=((equal(m.grid, 0)!=0)?(((above(m.y, m.centery)!=0)?(((m.sy-m.crad)-m.centery)):(((m.sy+m.crad)-m.centery)))):(m.sy)); m.sx=((below(m.q1, 0)!=0)?((m.sx-((m.sx_temp*m.q2)*0.1))):(m.sx)); m.sy=((below(m.q1, 0)!=0)?((m.sy-((m.sx_temp*m.q2)*0.1))):(m.sy));","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = normalize((uv_orig - 0.5));\n  float tmpvar_3;\n  tmpvar_3 = (time * 7.0);\n  uv_1 = (mix (uv_orig, uv, vec2((\n    clamp ((((bass / bass_att) - 0.9) * 13.0), 0.0, 1.0)\n   * 0.3))) + ((\n    (tmpvar_2 * texsize.zw)\n   * \n    cos(((rad * 170.0) - tmpvar_3))\n  ) * 2.0));\n  uv_1 = (uv_1 + ((\n    (vec2(5.0, -5.0) * texsize.zw)\n   * \n    cos(((ang * 30.0) - tmpvar_3))\n  ) * tmpvar_2.yx));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ((texture (sampler_main, uv_1).xyz - 0.004) * 0.83);\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\n  ret_1.y = (ret_1 * 0.7).y;\n  ret_1.x = (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x * 2.0);\n  ret_1.z = (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 3.0);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}