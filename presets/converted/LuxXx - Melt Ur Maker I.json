{"baseVals":{"rating":2,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_alpha":0,"echo_orient":1,"wave_mode":2,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":1,"wrap":0,"darken_center":1,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":3.222,"wave_scale":0.685,"wave_smoothing":0.75,"wave_mystery":0,"modwavealphastart":0.75,"modwavealphaend":0.95,"warpanimspeed":1,"warpscale":1,"zoomexp":2.21668,"fshader":1,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0.00001,"dy":0.00001,"warp":0.01,"sx":1,"sy":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.5,"wave_y":0.5,"ob_size":0.05,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ob_a":0,"ib_size":0.025,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":5,"mv_r":0,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":1.79142,"ang":0,"tex_ang":0.06283,"tex_zoom":1,"r":1,"g":1,"b":1,"a":0.08,"r2":1,"g2":1,"b2":1,"a2":0.08,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = ['a'];","frame_eqs_str":"m.additive=m.q1; m.a=((m.q1!=0)?(1):(m.a)); m.a2=m.a; m.r=m.q1; m.r2=m.q1; m.tex_zoom=(3-(3*m.bass));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":1.79142,"ang":0,"tex_ang":0.06283,"tex_zoom":1,"r":1,"g":0,"b":1,"a":0.08,"r2":1,"g2":1,"b2":0,"a2":0.08,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = ['a'];","frame_eqs_str":"m.additive=m.q1; m.a=((m.q1!=0)?(1):(m.a)); m.a2=m.a; m.r=m.q1; m.r2=m.q1; m.tex_zoom=(3-(2*m.bass));"},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":1,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.91974,"ang":0,"tex_ang":0.62832,"tex_zoom":1.0303,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = ['tex_zoom'];","frame_eqs_str":"m.tex_zoom=(m.q1+m.tex_zoom); m.a2=1; m.border_a=m.q1;"},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.13887,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":0.05,"r2":0,"g2":1,"b2":0,"a2":0.05,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.r=(0.5+(0.49*Math.sin((m.time*0.2754)))); m.b=(0.5+(0.49*Math.sin((m.time*0.6254)))); m.g=(0.5+(0.49*Math.sin((m.time*0.514)))); m.r2=(0.5+(0.49*Math.sin((m.time*0.475)))); m.b2=(0.5+(0.49*Math.sin((m.time*0.2107)))); m.g2=(0.5+(0.49*Math.sin((m.time*0.7714))));"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.maxdbass = 0;\nm.dbass = 0;\nm.q1 = 0;\nm.cheat = 0;\nm.midphase = 0;\nm.lastbeat = 0;\nm.interval = 0;\nm.pbass = 0;\nm.beat = 0;\nm.q2 = 0;\nm.phase = 0;\nm.q3 = 0;\nm.sure = 0;","frame_eqs_str":"m.sure=((equal(m.sure, 0)!=0)?(0.6):(m.sure)); m.interval=((equal(m.interval, 0)!=0)?(40):(m.interval)); m.lastbeat=((equal(m.lastbeat, 0)!=0)?((m.frame-m.fps)):(m.lastbeat)); m.dbass=div((m.bass-m.pbass),m.fps); m.beat=(above(m.dbass, (0.6*m.maxdbass))*above((m.frame-m.lastbeat), div(m.fps,3))); m.sure=(((m.beat*below(Math.abs((m.frame-(m.interval+m.lastbeat))), div(m.fps,5)))!=0)?(Math.min((0.095+m.sure), 1)):(((m.beat*(m.sure-0.095))+(((1-m.beat)*m.sure)*0.9996)))); m.sure=Math.max(0.5, m.sure); m.cheat=(((above(m.frame, ((m.lastbeat+m.interval)+Math.floor(div(m.fps,10))))*above(m.sure, 0.91))!=0)?(1):(m.cheat)); m.beat=((m.cheat!=0)?(1):(m.beat)); m.sure=((m.cheat!=0)?((0.95*m.sure)):(m.sure)); m.maxdbass=Math.max((m.maxdbass*0.999), m.dbass); m.maxdbass=Math.max(0.012, m.maxdbass); m.maxdbass=Math.min(0.02, m.maxdbass); m.interval=((m.beat!=0)?((m.frame-m.lastbeat)):(m.interval)); m.lastbeat=((m.beat!=0)?((m.frame-(m.cheat*Math.floor(div(m.fps,10))))):(m.lastbeat)); m.cheat=0; m.pbass=m.bass; m.wave_r=(0.8*Math.abs(Math.cos((((0.07*m.time)+0.532)+Math.sin(((0.125*m.time)+0.789)))))); m.wave_g=(0.8*Math.abs(Math.cos((((0.092*m.time)+2.1)+Math.sin(((0.045*m.time)+1.52)))))); m.wave_b=(0.8*Math.abs(Math.cos((((0.1*m.time)+1.452)+Math.sin(((0.112*m.time)+2.98)))))); m.q1=m.beat; m.ib_a=m.beat; m.ib_r=(1-m.wave_r); m.ib_g=(1-m.wave_g); m.ib_b=(1-m.wave_b); m.wave_mystery=(1-(1.5*Math.min(div((m.frame-m.lastbeat),m.interval), 1))); m.wave_a=((above(div((m.frame-m.lastbeat),m.interval), 1)!=0)?(0):(1)); m.phase=((equal(mod(m.frame,m.interval), 0)!=0)?((m.phase+1)):(m.phase)); m.phase=((equal(mod(m.phase,18), 17)!=0)?(0):(m.phase)); m.midphase=Math.min(div((m.frame-m.lastbeat),m.interval), 1); m.sx=(((equal(m.phase, 15)*equal(mod(m.frame,m.interval), 0))!=0)?(-1):(m.sx)); m.sy=(((equal(m.phase, 26)*equal(mod(m.frame,m.interval), 0))!=0)?(-1):(m.sy)); m.phase=(((equal(mod(m.frame,m.interval), 0)*below(Math.cos(div(m.time,6)), -0.5))!=0)?((mod((m.phase+rand(13)),14)+1)):(m.phase)); m.q2=m.phase; m.q3=m.midphase;\n\t\tm.rkeys = ['rot','sx','sy','dy','dx'];","pixel_eqs_str":"m.zoom=(1+(0.01*Math.sin((13.28*m.rad)))); m.zoom=(m.zoom+(((equal(m.q2, 1)*m.q3)*0.1)*(m.x-0.5))); m.zoom=(m.zoom+(((equal(m.q2, 2)*m.q3)*0.1)*(0.5-m.x))); m.zoom=(m.zoom+(((equal(m.q2, 5)*m.q3)*0.1)*(0.5-m.y))); m.zoom=(m.zoom+(((equal(m.q2, 4)*m.q3)*0.1)*(m.y-0.5))); m.rot=(m.rot+((equal(m.q2, 3)*m.q3)*0.3)); m.rot=(m.rot-((equal(m.q2, 6)*m.q3)*0.3)); m.sx=(m.sx+((equal(m.q2, 7)*m.q3)*0.2)); m.sy=(m.sy-((equal(m.q2, 8)*m.q3)*0.2)); m.sx=(m.sx-((equal(m.q2, 9)*m.q3)*0.2)); m.sy=(m.sy+((equal(m.q2, 10)*m.q3)*0.2)); m.dy=(m.dy+((((equal(m.q2, 11)*Math.abs((0.5-m.x)))*sign((0.5-m.x)))*m.q3)*0.2)); m.dx=(m.dx+((((equal(m.q2, 12)*Math.abs((0.5-m.y)))*sign((0.5-m.y)))*m.q3)*0.2)); m.dx=(m.dx-((((equal(m.q2, 14)*Math.abs((0.5-m.y)))*sign((0.5-m.y)))*m.q3)*0.2)); m.dy=(m.dy-((((equal(m.q2, 13)*Math.abs((0.5-m.x)))*sign((0.5-m.x)))*m.q3)*0.2));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    ((texture (sampler_noise_lq, ((\n      (uv_orig * texsize.xy)\n     * \n      (texsize_noise_lq.zw * 0.4)\n    ) + rand_frame.xy)).xyz - 0.5) / 256.0)\n   * 122.0) * clamp (\n    (treb_att - 1.0)\n  , 0.0, 1.0)));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nshader_body\n{\n  xlat_mutabled = (texsize.zw * 8.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((\n    -(xlat_mutabledx)\n   + xlat_mutabledy) + 1.0) * 1.2);\n  xlat_mutabled = (texsize.zw * 2.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_3;\n  tmpvar_3.x = xlat_mutabledx.x;\n  tmpvar_3.y = xlat_mutabledy.x;\n  float tmpvar_4;\n  tmpvar_4 = sqrt(dot (tmpvar_3, tmpvar_3));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (((vec3(0.5, 0.4, 0.6) * tmpvar_1.x) * tmpvar_2.x), (vec3(8.0, 5.0, 2.0) * tmpvar_4), vec3((tmpvar_4 * 4.2)));\n  vec2 tmpvar_6;\n  tmpvar_6.x = xlat_mutabledx.z;\n  tmpvar_6.y = xlat_mutabledy.z;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = mix (mix (tmpvar_5, (4.0 * tmpvar_5), (\n    (tmpvar_1.y * 0.5)\n   - \n    (vec3(0.09, 0.3, 0.3) * ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z)\n  )), vec3(2.0, 2.0, 0.0), vec3((sqrt(\n    dot (tmpvar_6, tmpvar_6)\n  ) * 0.7)));\n  ret = tmpvar_7.xyz;\n}\n\n"}