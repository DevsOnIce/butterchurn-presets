{"baseVals":{"rating":0,"gammaadj":2.4,"decay":0.975,"echo_zoom":1.051,"echo_alpha":0.5,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.003,"wave_scale":0.573,"wave_smoothing":0,"modwavealphastart":0.24,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.85235,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"y":0.15,"rad":0.23067,"ang":6.03186,"tex_ang":5.78053,"tex_zoom":1.04059,"g":1,"b":1,"r2":1,"b2":1,"a2":0.4,"border_a":0.7},"init_eqs_str":"m.trebdiff = 0;\nm.meanbass = 0;\nm.meantreb = 0;\nm.meanmid = 0;\nm.middiff = 0;\nm.o = 0;\nm.bassdiff = 0;\n\n\t\t\tm.rkeys = ['meanbass','meantreb','meanmid'];","frame_eqs_str":"m.meanbass=(0.01*((m.meanbass*99)+m.bass)); m.meantreb=(0.01*((m.meantreb*99)+m.treb)); m.meanmid=(0.01*((m.meanmid*99)+m.mid)); m.bassdiff=((m.bass-m.meanbass)*15); m.trebdiff=((m.treb-m.meantreb)*15); m.middiff=((m.mid-m.meanmid)*15); m.bassdiff=(above(m.bassdiff, 0)*m.bassdiff); m.trebdiff=(above(m.trebdiff, 0)*m.trebdiff); m.middiff=(above(m.middiff, 0)*m.middiff); m.o=1; m.g=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.trebdiff))))); m.r=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.middiff))))); m.b=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.bassdiff))))); m.g2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.trebdiff))))); m.r2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.middiff))))); m.b2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.bassdiff))))); m.x=((m.x+(Math.sin((m.time*0.7))*0.06))-(0.1*m.o)); m.y=((m.y+(Math.sin((m.time*0.5))*0.06))+(0.7*m.o)); m.ang=Math.sin(m.time); m.rad=((m.rad-0.4)+(0.05*m.bass));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.82,"y":0.22,"rad":0.50627,"g":1,"b":1,"a":0.89,"b2":1,"a2":0.31,"border_a":0},"init_eqs_str":"m.flag = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['flag'];","frame_eqs_str":"m.flag=Math.abs((m.flag-m.q1)); m.y=((m.flag!=0)?(0.8):(0.2));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.18,"y":0.8,"rad":0.59958,"g":1,"b":1,"r2":1,"border_a":0},"init_eqs_str":"m.flag = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['flag'];","frame_eqs_str":"m.flag=Math.abs((m.flag-m.q1)); m.y=((m.flag!=0)?(0.2):(0.8));"},{"baseVals":{"enabled":1,"x":0.56,"y":0.15,"rad":0.23067,"ang":5.40354,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"a2":0.4},"init_eqs_str":"m.trebdiff = 0;\nm.meanbass = 0;\nm.meantreb = 0;\nm.meanmid = 0;\nm.middiff = 0;\nm.o = 0;\nm.bassdiff = 0;\n\n\t\t\tm.rkeys = ['meanbass','meantreb','meanmid'];","frame_eqs_str":"m.meanbass=(0.01*((m.meanbass*99)+m.bass)); m.meantreb=(0.01*((m.meantreb*99)+m.treb)); m.meanmid=(0.01*((m.meanmid*99)+m.mid)); m.bassdiff=((m.bass-m.meanbass)*15); m.trebdiff=((m.treb-m.meantreb)*15); m.middiff=((m.mid-m.meanmid)*15); m.bassdiff=(above(m.bassdiff, 0)*m.bassdiff); m.trebdiff=(above(m.trebdiff, 0)*m.trebdiff); m.middiff=(above(m.middiff, 0)*m.middiff); m.o=0; m.g=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.trebdiff))))); m.r=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.middiff))))); m.b=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.bassdiff))))); m.g2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.trebdiff))))); m.r2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.middiff))))); m.b2=Math.abs(((1*m.o)-Math.min(1, Math.max(0, (0.2*m.bassdiff))))); m.x=((m.x+(Math.sin((m.time*0.7))*0.06))-(0.1*m.o)); m.y=((m.y+(Math.sin((m.time*0.5))*0.06))+(0.7*m.o)); m.ang=Math.sin(m.time); m.rad=((m.rad-0.4)+(0.05*m.bass));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.tic = 0;\nm.slide = 0;\nm.toc = 0;\nm.vt = 0;\nm.nu = 0;\nm.bt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.ocoy = 0;\nm.mid_avg = 0;\nm.pox = 0;\nm.dis = 0;\nm.tt = 0;\nm.tin = 0;\nm.modx = 0;\nm.bass_avg = 0;\nm.vav = 0;\nm.cox = 0;\nm.q4 = 0;\nm.mox = 0;\nm.zm = 0;\nm.oy = 0;\nm.mt = 0;\nm.mod = 0;\nm.ra = 0;\nm.treb_avg = 0;\nm.vol = 0;\nm.sp = 0;\nm.q2 = 0;\nm.moy = 0;\nm.q3 = 0;\nm.mody = 0;\nm.poy = 0;\nm.coy = 0;","frame_eqs_str":"m.warp=0; m.tic=Math.min((m.time-m.tin), 0.1); m.tin=m.time; m.vol=(((m.bass_att+m.treb_att)+m.mid_att)*0.333333); m.ra=(div(1,m.tic)*0.1); m.treb_avg=(m.tic*((m.treb_avg*(div(1,m.tic)-m.ra))+(m.ra*m.treb))); m.mid_avg=(m.tic*((m.mid_avg*(div(1,m.tic)-m.ra))+(m.ra*m.mid))); m.bass_avg=(m.tic*((m.bass_avg*(div(1,m.tic)-m.ra))+(m.ra*m.bass))); m.vav=(m.tic*((m.vav*(div(1,m.tic)-m.ra))+((m.ra*((m.bass+m.treb)+m.mid))*0.33333))); m.tt=(m.tt+(m.tic*m.treb)); m.mt=(m.mt+(m.tic*m.mid)); m.bt=(m.bt+(m.tic*m.bass)); m.vt=(m.vt+(m.tic*m.vav)); m.sp=(Math.abs((m.vav-m.slide))*0.1); m.slide=(((above(m.slide, m.vav)!=0)?((m.slide-(m.tic*m.sp))):((m.slide+(m.tic*m.sp))))+(((1-m.toc)*m.vav)*0.2)); m.toc=1; m.q1=0; m.q2=((m.bt*0.5)+5); m.q3=((m.mt*0.5)+3); m.q4=(m.tt*0.5); m.q5=(0.1+((m.treb_avg+m.mid_avg)*0.2)); m.zoom=(1-(m.bass_avg*0.2)); m.monitor=m.q5;\n\t\tm.rkeys = ['q1','ocoy','cox','mox','oy','moy','coy'];","pixel_eqs_str":"m.coy=((m.coy+below(m.y, m.oy))*above(m.q1, 0)); m.cox=(((m.cox+1)*above(m.q1, 0))*equal(m.coy, m.ocoy)); m.moy=Math.max(m.coy, m.moy); m.mox=Math.max(m.cox, m.mox); m.nu=4; m.pox=((div(m.cox,m.nu)-Math.floor(div(m.cox,m.nu)))*m.nu); m.poy=((div(m.coy,m.nu)-Math.floor(div(m.coy,m.nu)))*m.nu); m.mod=((1-(2*above(m.x, 0.5)))*(1-(2*above(m.y, 0.5)))); m.dx=(((equal(mod(m.coy,2), 0)!=0)?((-equal(m.pox, 1)+equal(m.pox, 2))):((equal(m.pox, 0)-equal(m.pox, 3))))*0.001); m.dy=((((equal(mod(m.coy,2), 0)!=0)?((-equal(m.pox, 1)+equal(m.pox, 2))):((equal(m.pox, 0)-equal(m.pox, 3))))*0.001)*m.mod); m.dis=(m.x+(1-m.y)); m.mod=((above(m.dis, 1)!=0)?((m.dis-1)):((1-m.dis))); m.mod=(below(m.mod, 0.2)+(((1-Math.min(1, ((m.mod-0.2)*4)))*above(m.mod, 0.2))*1)); m.zm=m.q5; m.modx=((above(m.dis, 1)!=0)?(m.zm):(-m.zm)); m.mody=((above(m.dis, 1)!=0)?(-m.zm):(m.zm)); m.dx=((m.dx*m.mod)+((1-m.mod)*m.modx)); m.dy=((m.dy*m.mod)+((1-m.mod)*m.mody)); m.rot=(0.3*m.mod); m.oy=m.y; m.ocoy=m.coy; m.q1=(m.q1+1);","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec3 tmpvar_2;\n  tmpvar_2 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  ret_1 = (ret_1 + (mix (\n    (ret_1 - tmpvar_2)\n  , \n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) - tmpvar_2) * 2.0)\n  , vec3(rad)) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (mix (ret_1, vec3(0.5, 0.5, 0.5), vec3(0.03, 0.03, 0.03)) + (19.52 * (\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.02, 0.02, 0.02));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\n  ret_1.y = (ret_1 * 0.7).y;\n  ret_1.x = (((texture (sampler_blur1, uv).xyz * scale1) + bias1).x - 0.03);\n  ret_1.z = (((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2).z * 1.5) - 0.05);\n  ret_1 = (ret_1 * 2.3);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}