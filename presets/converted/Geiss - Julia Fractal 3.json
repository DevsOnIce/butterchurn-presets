{"baseVals":{"rating":0,"echo_zoom":1.01,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"wave_thick":1,"wave_a":7.74,"wave_scale":0.656,"wave_smoothing":0.8,"warpscale":1.772,"zoomexp":1.96,"zoom":0.98,"warp":0.513,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0,"ob_a":0.5,"ib_size":0.07,"ib_a":0.025,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.blah = 0;","frame_eqs_str":"m.wave_x=(m.wave_x+(0.500*((0.60*Math.sin((2.121*m.time)))+(0.40*Math.sin((1.621*m.time)))))); m.wave_y=(m.wave_y+(0.500*((0.60*Math.sin((1.742*m.time)))+(0.40*Math.sin((2.322*m.time)))))); m.wave_r=(m.wave_r+(0.500*((0.60*Math.sin((0.823*m.time)))+(0.40*Math.sin((0.916*m.time)))))); m.wave_g=(m.wave_g+(0.500*((0.60*Math.sin((0.900*m.time)))+(0.40*Math.sin((1.023*m.time)))))); m.wave_b=(m.wave_b+(0.500*((0.60*Math.sin((0.808*m.time)))+(0.40*Math.sin((0.949*m.time)))))); m.zoom=(m.zoom+(0.070*((0.60*Math.sin((0.239*m.time)))+(0.40*Math.sin((0.296*m.time)))))); m.rot=(m.rot+(0.038*((0.60*Math.sin((0.381*m.time)))+(0.40*Math.sin((0.539*m.time)))))); m.cx=(m.cx+(0.030*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.194*m.time)))))); m.cy=(m.cy+(0.037*((0.60*Math.sin((0.274*m.time)))+(0.40*Math.sin((0.394*m.time)))))); m.dx=(m.dx+(0.025*((0.60*Math.sin((0.334*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.025*((0.60*Math.sin((0.384*m.time)))+(0.40*Math.sin((0.247*m.time)))))); m.sx=(m.sx+(0.015*((0.60*Math.sin((0.313*m.time)))+(0.40*Math.sin((0.383*m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,50), 0))); m.ib_r=(m.ib_r+(0.2*Math.sin((m.time*0.5413)))); m.ib_g=(m.ib_g+(0.2*Math.sin((m.time*0.3459)))); m.ib_b=(m.ib_b+(0.2*Math.sin((m.time*0.4354)))); m.blah=div(3.0,((m.ib_r+m.ib_g)+m.ib_b)); m.ib_r=(m.ib_r*m.blah); m.ib_g=(m.ib_g*m.blah); m.ib_b=(m.ib_b*m.blah);\n\t\tm.rkeys = ['rot'];","pixel_eqs_str":"m.rot=(m.rot+((m.rad*0.25)*Math.sin((0.3986*m.time))));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_main, uv);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ((max (tmpvar_1.xyz, texture (sampler_main, \n    (uv + (vec2(0.0, 16.0) * ((tmpvar_1.xy - 0.5) * texsize.zw)))\n  ).xyz) - 0.008) * 0.96);\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = abs((texture (sampler_main, uv).xyz - texture (sampler_main, (\n    -(((uv - 0.5) * 1.01))\n   + 0.5)).zyx));\n  ret = tmpvar_1.xyz;\n}\n\n"}