{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":4.1,"wave_scale":0.01,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":0.99951,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.ym = 0;\nm.xs = 0;\nm.xm = 0;\nm.ys = 0;\nm.fran=1; m.xs=1; m.ys=1; m.xm=0.5; m.ym=0.5;\n\t\t\tm.rkeys = ['ym','xs','xm','ys'];","frame_eqs_str":"m.xs=(m.xs*((1-(2*above(m.xm, 0.99)))-(2*below(m.xm, 0.01)))); m.ys=(m.ys*((1-(2*above(m.ym, 0.99)))-(2*below(m.ym, 0.01)))); m.xm=(m.xm+((0.03*m.xs)*((Math.sin((m.time*0.53))*0.4)+(0.6*Math.cos((m.time*0.62)))))); m.ym=(m.ym+((0.03*m.ys)*((Math.sin((m.time*0.29))*0.5)+(0.5*Math.cos((m.time*0.78)))))); m.x=m.xm; m.y=m.ym; m.r=((0.5+(0.25*Math.sin((m.x*12))))+(0.25*Math.sin((m.y*3)))); m.g=((0.5+(0.25*Math.sin((m.x*7))))+(0.25*Math.sin((m.y*32)))); m.b=((0.5+(0.25*Math.sin((m.x*21))))+(0.25*Math.sin((m.y*16)))); m.r2=m.r; m.g2=m.g; m.b2=m.b; m.rad=div((0.2*((m.bass_att+m.mid_att)+m.treb_att)),3);"},{"baseVals":{"enabled":1,"sides":44,"rad":0.03347,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.ym = 0;\nm.xs = 0;\nm.xm = 0;\nm.ys = 0;\nm.fran=1; m.xs=1; m.ys=1; m.xm=0.5; m.ym=0.5;\n\t\t\tm.rkeys = ['ym','xs','xm','ys'];","frame_eqs_str":"m.xs=(m.xs*((1-(2*above(m.xm, 0.99)))-(2*below(m.xm, 0.01)))); m.ys=(m.ys*((1-(2*above(m.ym, 0.99)))-(2*below(m.ym, 0.01)))); m.xm=(m.xm+((0.03*m.xs)*((Math.sin((m.time*0.53))*0.6)+(0.4*Math.cos((m.time*0.62)))))); m.ym=(m.ym+((0.03*m.ys)*((Math.sin((m.time*0.29))*0.7)+(0.3*Math.cos((m.time*0.78)))))); m.x=m.xm; m.y=m.ym; m.r=((0.5+(0.25*Math.sin((m.x*12))))+(0.25*Math.sin((m.y*3)))); m.g=((0.5+(0.25*Math.sin((m.x*7))))+(0.25*Math.sin((m.y*32)))); m.b=((0.5+(0.25*Math.sin((m.x*21))))+(0.25*Math.sin((m.y*16)))); m.r2=m.r; m.g2=m.g; m.b2=m.b; m.rad=div((0.2*((m.bass_att+m.mid_att)+m.treb_att)),3);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"m.wave_g=(m.wave_g+(0.5*Math.cos((m.time*2.23)))); m.wave_b=(m.wave_b+(0.5*Math.tan((m.time*2.33))));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=((0.01*m.time)-m.rad); m.zoom=((1+(0.1*Math.sin((0.1*m.bass))))-(0.1*Math.tan((0.1*m.treb))));","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":""}