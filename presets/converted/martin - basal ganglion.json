{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.002217,"wave_scale":0.092461,"wave_smoothing":0,"wave_mystery":-0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":0,"ob_g":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0.25,"ib_a":1,"mv_x":31.999998,"mv_y":24.000004,"mv_dx":0,"mv_dy":0,"mv_l":5,"mv_r":0.2999,"mv_g":0.4999,"mv_b":0.3999,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"additive":0,"thickoutline":0,"textured":0,"x":0.5,"y":0.5,"rad":0.084012,"ang":0,"tex_ang":0.5026,"tex_zoom":1.125188,"r":0.8,"g":0,"b":0.8,"a":0.2,"r2":0,"g2":0,"b2":0,"a2":1,"border_r":0.7,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.2*Math.sin(div(m.time,12)))); m.y=(0.5+(0.2*Math.cos(div(m.time,17)))); m.r=(0.5+(0.2*Math.sin(div(m.time,31)))); m.g=(0.5+(0.2*Math.sin(div(m.time,41)))); m.b=(0.5+(0.2*Math.sin(div(m.time,17)))); m.x=0.5; m.y=0.5; m.rad=0.05; m.a=0.2; m.a2=0;"},{"baseVals":{"enabled":0,"sides":63,"additive":0,"thickoutline":0,"textured":0,"x":0.5,"y":0.5,"rad":0.022167,"ang":0,"tex_ang":0,"tex_zoom":0.499805,"r":1,"g":1,"b":1,"a":0.1,"r2":1,"g2":1,"b2":1,"a2":0.07,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=0.5; m.y=0.5; m.a=0.03; m.a2=0.0; m.rad=div(m.bass_att,20);"},{"baseVals":{"enabled":1,"sides":14,"additive":1,"thickoutline":0,"textured":1,"x":0.59,"y":0,"rad":1.215236,"ang":0.062832,"tex_ang":0.879646,"tex_zoom":0.514935,"r":0.6,"g":0.5,"b":0.7,"a":0.1,"r2":0.7,"g2":0.5,"b2":0.6,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.3*Math.cos(div(m.time,78)))); m.y=(0.5+(0.3*Math.sin(div(m.time,78)))); m.tex_zoom=div(0.2,(Math.sin(div(m.time,31))+1.1));"},{"baseVals":{"enabled":1,"sides":63,"additive":1,"thickoutline":0,"textured":1,"x":0.76,"y":0.75,"rad":0.686364,"ang":0.439823,"tex_ang":0.502655,"tex_zoom":0.6159,"r":0.7,"g":0.7,"b":0.7,"a":0.15,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.3*Math.cos(div(m.time,59)))); m.y=(0.5+(0.3*Math.sin(div(m.time,59))));"}],"waves":[{"baseVals":{"enabled":0,"samples":132,"sep":49,"spectrum":0,"usedots":1,"thick":0,"additive":0,"scaling":0.067077,"smoothing":0.82,"r":1,"g":0.2,"b":0,"a":0.6},"init_eqs_str":"m.k1 = 0;\nm.k2 = 0;\nm.t2 = 0;\nm.t1=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t2=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t3=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t4=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t5=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t6=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t7=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t8=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3));\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t2=(m.t2+m.bass_att);","point_eqs_str":"m.k1=mod(((100*m.sample)+(m.time*2)),2); m.k2=mod(((100*m.sample)+(m.time*5)),2); m.x=(0.5+(0.5*Math.sin(((m.sample*76)+div(m.time,337))))); m.y=(0.5+(0.5*Math.sin((m.sample*126)))); m.r=0.4; m.g=0.8; m.b=(1*m.k2); m.a=(0.3*m.k1);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":0.891519,"smoothing":0.82,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.t1=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t2=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t3=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t4=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t5=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t6=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t7=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t8=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3));\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":0.891519,"smoothing":0.82,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.tva = 0;\nm.tic = 0;\nm.t5 = 0;\nm.t1 = 0;\nm.tvc = 0;\nm.q1 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.tin = 0;\nm.t6 = 0;\nm.tvb = 0;\nm.t7 = 0;\nm.sz = 0;\nm.tm = 0;\nm.t2 = 0;\nm.len = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.t1=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t2=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t3=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t4=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t5=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t6=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t7=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t8=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3));\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.tm=(m.time*0.1); m.t1=((m.t1*Math.sin((m.tm*m.t4)))+((1-m.t1)*Math.sin((m.tm*m.t7)))); m.t2=((m.t2*Math.sin((m.tm*m.t5)))+((1-m.t2)*Math.sin((m.tm*m.t8)))); m.t3=((m.t3*Math.sin((m.tm*m.t6)))+((1-m.t3)*Math.sin((m.tm*1)))); m.tic=Math.min((m.time-m.tin), 1); m.tin=m.time; m.tva=((m.tic*m.q1)*0.5); m.tvb=((m.tic*m.q2)*0.5); m.tvc=((m.tic*m.q3)*0.5); m.q1=m.tva; m.q2=m.tvb; m.q3=m.tvc; m.sz=0.5; m.len=1; m.t4=m.len;","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.movex = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q9 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.movez = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p1=2000; m.p2=200; m.p3=50;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),5); m.monitor=m.index2; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=((m.is_beat*bnot(m.index))*bnot(m.index2)); m.p1=(m.index2-2); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.p3=((m.dec_med*m.p3)+((1-m.dec_med)*m.p2)); m.rott=(m.rott+(div((0.002*30),m.fps)*m.p3)); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.movex=((m.movex*m.dec_slow)+div(((0.1*m.q1)*30),m.fps)); m.q9=m.movex; m.movez=(m.movez+(div((0.01*30),m.fps)*(m.p3+3))); m.q10=m.movez; m.q30=(0.3*(Math.sin(div(m.time,45))+1.5)); m.mv_x=30; m.mv_y=20; m.mv_a=((0.08*pow(div(30,m.fps), 1))*(1+m.q22)); m.mv_l=0; m.q32=pow(0.98, div(30,m.fps));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1; m.warp=(0.0*(1-m.rad)); m.warp=0.05;","warp":"vec3 xlat_mutablemus;\nshader_body\n{\n  vec3 crisp_1;\n  float tmpvar_2;\n  tmpvar_2 = (dot (texture (sampler_noise_hq, (\n    (q30 * uv)\n   + \n    (0.001 * time)\n  )), vec4(0.32, 0.49, 0.29, 0.0)) * 3.14);\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = cos(tmpvar_2);\n  tmpvar_3[uint(0)].y = sin(tmpvar_2);\n  tmpvar_3[1u].x = -(sin(tmpvar_2));\n  tmpvar_3[1u].y = cos(tmpvar_2);\n  xlat_mutablemus = (abs(vec3((0.2 / \n    (sqrt(((\n      (uv - 0.5)\n     * aspect.xy) * tmpvar_3).y) + 0.2)\n  ))) * vec3(1.0, 0.96, 0.9));\n  xlat_mutablemus = (xlat_mutablemus * (vec3(1.0, 0.96, 0.9) + (0.1 * \n    (texture (sampler_noise_lq, uv) - 0.5)\n  .xyz)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))) - texture (sampler_main, (uv - vec2(0.004, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))) - texture (sampler_main, (uv - vec2(0.0, 0.004)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.5 * texture (sampler_main, uv)).xyz);\n  crisp_1 = (crisp_1 * 0.667);\n  crisp_1 = (crisp_1 + (vec3(0.018, 0.018, 0.018) - (\n    sqrt(dot (tmpvar_5, tmpvar_5))\n   * tmpvar_4)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    (crisp_1 - (tmpvar_4 * 0.03))\n   + \n    (0.04 * xlat_mutablemus)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"float xlat_mutabledist;\nfloat xlat_mutabledist2;\nfloat xlat_mutableinten;\nfloat xlat_mutablem;\nfloat xlat_mutablemask;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv2;\nshader_body\n{\n  vec2 uv_1;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)] = _qa.xy;\n  tmpvar_2[1u] = _qa.zw;\n  uv_1 = (uv_1 * tmpvar_2);\n  int tmpvar_3;\n  tmpvar_3 = int(q10);\n  xlat_mutablem = (1.0 - float(tmpvar_3));\n  float tmpvar_4;\n  tmpvar_4 = -(q10);\n  xlat_mutabledist = (1.0 - fract((0.25 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  xlat_mutableret1 = (texture (sampler_main, xlat_mutableuv2).xyz * xlat_mutableinten);\n  xlat_mutablem = (2.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.5 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_5.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_5.xyz * xlat_mutableinten));\n  xlat_mutablem = (3.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((0.75 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_6.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_6.xyz * xlat_mutableinten));\n  xlat_mutablem = (4.0 - float(tmpvar_3));\n  xlat_mutabledist = (1.0 - fract((1.0 - \n    (fract(tmpvar_4) / 4.0)\n  )));\n  xlat_mutableuv2 = ((uv_1 * (float(mod (xlat_mutablem, 2.0)))) + (uv_1.yx * (float(mod (\n    (xlat_mutablem + 1.0)\n  , 2.0)))));\n  xlat_mutabledist2 = (xlat_mutabledist * xlat_mutabledist);\n  xlat_mutableinten = ((3.0 * sqrt(xlat_mutabledist)) * (1.0 - (xlat_mutabledist * xlat_mutabledist)));\n  xlat_mutableuv2 = (((\n    (4.0 * xlat_mutableuv2)\n   * xlat_mutabledist) + (0.35 * xlat_mutablem)) + (q9 * xlat_mutabledist2));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, xlat_mutableuv2);\n  xlat_mutablemask = (1.0 - ((0.9 * \n    clamp ((8.0 * xlat_mutabledist), 0.0, 1.0)\n  ) * clamp (\n    (64.0 * tmpvar_7.xyz)\n  , 0.0, 1.0))).x;\n  xlat_mutableret1 = ((xlat_mutableret1 * xlat_mutablemask) + (tmpvar_7.xyz * xlat_mutableinten));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (1.8 * xlat_mutableret1);\n  ret = tmpvar_8.xyz;\n}\n\n"}