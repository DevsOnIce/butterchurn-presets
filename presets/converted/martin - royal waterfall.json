{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"y":0.39,"rad":0.5113,"tex_zoom":0.86135,"g":1,"b":1,"r2":1,"b2":1,"a2":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.tex_ang=div(m.time,8); m.x=(0.5+(0.1*Math.sin(div(m.time,23)))); m.y=(0.5+(0.1*Math.cos(div(m.time,16))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.6,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.05+div(rand(900),1000)); m.y=(0.05+div(rand(900),1000)); m.ang=div(rand(320),100); m.r=(0.5+(0.5*Math.sin(div(m.time,7)))); m.g=(0.5+(0.5*Math.sin(div(m.time,12)))); m.b=(0.5+(0.5*Math.sin(div(m.time,4)))); m.r2=(0.5+(0.5*Math.sin(div(m.time,4)))); m.g2=(0.5+(0.5*Math.sin(div(m.time,9)))); m.b2=(0.5+(0.5*Math.sin(div(m.time,17))));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),2); m.q27=(m.index+1); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.zoom=1.01; m.rot=(-0.00*m.index); m.q32=pow(0.996, div(30,m.fps));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \n    ((tmpvar_2 * texsize.zw) * 18.0)\n  )).xyz * 0.99) - 0.01);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\nshader_body\n{\n  xlat_mutableuv1 = (uv - 0.5);\n  xlat_mutablez = (0.2 / abs((xlat_mutableuv1.y * xlat_mutableuv1.x)));\n  xlat_mutablers.x = ((xlat_mutableuv1.x * xlat_mutablez) + (time * sign(xlat_mutableuv1.x)));\n  xlat_mutablers.y = (xlat_mutablez / 2.0);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\n  )) - 0.5);\n  float tmpvar_2;\n  tmpvar_2 = clamp ((64.0 * xlat_mutableuv1.y), 0.0, 1.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(((\n    (xlat_mutableuv1 * (1.0 - abs(xlat_mutableuv1.x)))\n   - 0.5) - (\n    (xlat_mutableret1 * 0.05)\n   * tmpvar_2).xy));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (1.0 - tmpvar_3.x);\n  tmpvar_4.y = tmpvar_3.y;\n  vec3 tmpvar_5;\n  tmpvar_5 = ((0.5 * texture (sampler_main, tmpvar_3)) + (0.5 * texture (sampler_main, tmpvar_4))).xyz;\n  xlat_mutableret1 = tmpvar_5;\n  float x_6;\n  x_6 = (tmpvar_3.y - 0.52);\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\n  vec2 tmpvar_7;\n  tmpvar_7 = cos(((xlat_mutableuv1 * 2.0) + 2.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((\n    (tmpvar_5 * 2.0)\n   + \n    (((0.03 * rand_preset) / (0.02 + sqrt(\n      (x_6 * x_6)\n    ))) * (1.0 - dot ((tmpvar_5 * 2.0), vec3(0.32, 0.49, 0.29))))\n  .xyz) + clamp (\n    (0.03 / sqrt(dot (tmpvar_7, tmpvar_7)))\n  , 0.0, 1.0)) + ((\n    ((rand_preset * clamp ((0.5 - uv.y), 0.0, 1.0)) * (1.0 + slow_roam_cos))\n   / 4.0) * (1.0 - tmpvar_2)).xyz);\n  ret = tmpvar_8.xyz;\n}\n\n"}