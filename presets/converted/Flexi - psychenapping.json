{"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.cx1 = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.cy1 = 0;\nm.q12 = 0;\nm.x1 = 0;\nm.x3 = 0;\nm.dir = 0;\nm.t = 0;\nm.r = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.q11=div(0.5,Math.asin(1));","frame_eqs_str":"m.ib_r=((Math.sin(((m.time*1.25)*4))*0.3)+0.7); m.ib_g=((Math.sin((m.time*4))*0.3)+0.3); m.ib_b=((Math.sin((div(m.time,3)*4))*0.5)+0.5); m.wave_r=(1-m.ib_r); m.wave_g=(1-m.ib_g); m.wave_b=(1-m.ib_b); m.wave_x=(0.5+(Math.sin((m.time*3))*0.3)); m.wave_y=(0.5+(Math.cos((m.time*2.187))*0.3)); m.t=(m.t+div(2.5,m.fps)); m.t=((above(m.t, 2)!=0)?((m.t-2)):(m.t)); m.q12=-m.t;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.r=div(m.bass,4); m.cx1=(0.5+(Math.sin((m.time*0.618))*0.2)); m.cy1=(0.5+(Math.cos((m.time*1.618))*0.2)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((m.bass*((m.r*m.r)-(m.d*m.d)))*0.3); m.x1=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y1=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((m.time*2.618))*0.3)); m.cy1=(0.5+(Math.cos((m.time*3.14))*0.3)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.mid*((m.r*m.r)-(m.d*m.d)))*0.3); m.x2=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y2=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((-m.time*2.618))*0.4)); m.cy1=(0.5+(Math.cos((-m.time*1.14))*0.4)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.treb*((m.r*m.r)-(m.d*m.d)))*0.3); m.x3=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y3=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.dx=((m.x1+m.x2)+m.x3); m.dy=((m.y1+m.y2)+m.y3);","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, fract(uv)).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv - 0.5) * aspect.wz);\n  float tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = (min (abs(\n    (tmpvar_1.x / tmpvar_1.y)\n  ), 1.0) / max (abs(\n    (tmpvar_1.x / tmpvar_1.y)\n  ), 1.0));\n  float tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\n  tmpvar_4 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\n  tmpvar_4 = (tmpvar_4 + (float(\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\n  ) * (\n    (tmpvar_4 * -2.0)\n   + 1.570796)));\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\n    if ((tmpvar_1.y < 0.0)) {\n      if ((tmpvar_1.x >= 0.0)) {\n        tmpvar_2 += 3.141593;\n      } else {\n        tmpvar_2 = (tmpvar_2 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\n  };\n  vec2 tmpvar_5;\n  tmpvar_5.x = ((tmpvar_2 * q11) * 1.5);\n  tmpvar_5.y = (((0.666 * \n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\n  ) - (tmpvar_2 * q11)) + q12);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = texture (sampler_main, clamp ((0.5 + (\n    (0.5 - abs(((\n      fract((tmpvar_5 * 0.5))\n     * 2.0) - 1.0)))\n   * vec2(0.96, 1.02))), 0.0, 1.0)).xyz;\n  ret = tmpvar_6.xyz;\n}\n\n"}