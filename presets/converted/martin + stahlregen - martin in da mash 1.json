{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":3.749,"wave_scale":2.466,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"textured":1,"rad":0.72072,"tex_zoom":1.24291,"g":0.4,"b":0.89,"a":0.8,"r2":1,"g2":0,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.tex_ang=(0.7+(0.3*Math.sin(m.time)));"},{"baseVals":{"enabled":1,"sides":63,"textured":1,"x":0.81,"y":0.3,"rad":0.3971,"tex_ang":2.51327,"tex_zoom":0.90799,"g":1,"b":1,"a":0.6,"r2":1,"b2":1,"a2":0.47,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":63,"x":0.323,"y":0,"rad":0.27319,"tex_zoom":0.49981,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_r":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=div(rand(100),100); m.y=div(rand(100),100); m.a=0.8; m.r=0; m.b=1; m.g=1; m.a2=1; m.r2=0; m.b2=0; m.g2=0; m.rad=0.02;"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.stag = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.drot = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p4 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.4+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),12); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q27=(m.index+1); m.q28=m.index2; m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.drot=div(((mod(m.index,4)-2)*30),m.fps); m.p3=((m.p3*m.dec_slow)+(div(((1-m.dec_slow)*30),m.fps)*m.drot)); m.q30=m.p3; m.stag=(m.q27+(m.index2*1)); m.stag=Math.max(m.stag, 1); m.p4=((m.dec_med*m.p4)+((1-m.dec_med)*m.stag)); m.q31=m.p4; m.zoom=(1+(0.05*m.q1)); m.rot=(-0.007*m.index); m.q32=pow(0.996, div(30,m.fps)); m.monitor=m.index2;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = (((0.2 * q28) * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  float tmpvar_5;\n  tmpvar_5 = (0.5 + (rand_preset * 10.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(\n    -(tmpvar_5)\n  ), vec2(tmpvar_5)) / 12.0));\n  uv6_2 = (0.4 * sin((\n    (tmpvar_3 * 2.0)\n   * \n    (4.0 + q26)\n  )));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((q24 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.06 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q24) * (texture (sampler_main, uv_orig).xyz - 0.0015)));\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.05));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = (tmpvar_5 * 1.5);\n  uv2_3.y = (tmpvar_6.y + (0.1 * time));\n  uv2_3.x = (tmpvar_7 + (0.02 * time));\n  uv3_2.y = (tmpvar_5 + q30);\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = ((texture (sampler_main, uv2_3).xyz + (2.0 * texture (sampler_main, uv3_2).xyz)) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_8;\n  tmpvar_8 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((crisp_1 + (\n    ((vec3(1.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_8)) + (tmpvar_8 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_9.xyz;\n}\n\n"}