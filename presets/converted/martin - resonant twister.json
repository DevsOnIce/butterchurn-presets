{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":0,"additivewave":1,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":1,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.005,"wave_scale":0.118,"wave_smoothing":0.9,"wave_mystery":-0.48,"modwavealphastart":0.4,"modwavealphaend":1.6,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":0.5,"b1ed":0},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":1,"textured":0,"num_inst":150,"x":0.5,"y":0.5,"rad":0.02211,"ang":0,"tex_ang":1.00531,"tex_zoom":0.12726,"r":1,"g":0,"b":0,"a":1,"r2":0.1,"g2":0,"b2":0.3,"a2":0.5,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.sample = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.x=m.sample; m.y=0.75; m.r=0.7; m.g=0; m.b=0; m.r2=(m.r*0.3); m.g2=(m.g*0.3); m.b2=0; m.a=1; m.a2=1;"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":100,"x":0.26,"y":0.2,"rad":0.02007,"ang":0,"tex_ang":0,"tex_zoom":0.9355,"r":1,"g":0,"b":0,"a":1,"r2":0.4,"g2":0,"b2":0,"a2":1,"border_r":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.sample = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.x=m.sample; m.y=0.25; m.r=0.7; m.g=0; m.b=0; m.r2=(m.r*0.3); m.g2=(m.g*0.3); m.b2=0; m.a=1; m.a2=1;"},{"baseVals":{"enabled":1,"sides":14,"additive":0,"thickoutline":0,"textured":0,"num_inst":400,"x":0.65,"y":0.38,"rad":0.01645,"ang":0,"tex_ang":0,"tex_zoom":0.73678,"r":0.6,"g":0.4,"b":1,"a":0.2,"r2":0,"g2":0,"b2":0,"a2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"m.q13 = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.ky = 0;\nm.x0 = 0;\nm.rx2 = 0;\nm.kx = 0;\nm.cx = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.ry2 = 0;\nm.rx1 = 0;\nm.sample = 0;\nm.ry1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.rx1=m.gmegabuf[((m.instance*8)+5)]; m.rx2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+5)]; m.ry1=m.gmegabuf[((m.instance*8)+6)]; m.ry2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+6)]; m.kx=(0.07*m.q1); m.ky=(0.15*m.q1); m.x0=(((m.rx1-m.rx2)*m.kx)+((m.q13*m.q3)*(Math.abs((m.sample-0.5))-0.25))); m.cx=0.7; m.x=((m.x0+div((1-m.cx),2))+(m.cx*m.sample)); m.y0=(((m.ry1+m.ry2)*m.ky)+((0*m.q13)*(Math.abs((m.sample-0.5))-0.3))); m.y=(m.y0+0.75); m.r=1; m.g=1; m.b=1; m.r2=(m.r*0.2); m.g2=(m.g*0.3); m.b2=0; m.a=1; m.a2=1; m.rad=(m.q32*0.025); m.ang=Math.atan2(m.x0, m.y0);"},{"baseVals":{"enabled":1,"sides":9,"additive":0,"thickoutline":1,"textured":0,"num_inst":400,"x":0.8,"y":0.75,"rad":0.07316,"ang":0,"tex_ang":0,"tex_zoom":1.04372,"r":1,"g":1,"b":0,"a":1,"r2":0,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":0.8,"border_b":0.5,"border_a":0},"init_eqs_str":"m.q13 = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.ky = 0;\nm.x0 = 0;\nm.rx2 = 0;\nm.kx = 0;\nm.cx = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.ry2 = 0;\nm.rx1 = 0;\nm.sample = 0;\nm.ry1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.rx1=m.gmegabuf[((m.instance*8)+6)]; m.rx2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+6)]; m.ry1=m.gmegabuf[((m.instance*8)+5)]; m.ry2=m.gmegabuf[((((m.num_inst-m.instance)-1)*8)+5)]; m.kx=(0.07*m.q1); m.ky=(0.15*m.q1); m.x0=(((m.rx1-m.rx2)*m.kx)-((m.q13*m.q3)*(Math.abs((m.sample-0.5))-0.25))); m.cx=0.7; m.x=((m.x0+div((1-m.cx),2))+(m.cx*m.sample)); m.y0=(((m.ry1+m.ry2)*m.ky)+((0*m.q13)*(Math.abs((m.sample-0.5))-0.3))); m.y=(m.y0+0.25); m.r=1; m.g=1; m.b=1; m.r2=(m.r*0.2); m.g2=(m.g*0.3); m.b2=0; m.a=1; m.a2=1; m.rad=(m.q32*0.025); m.ang=Math.atan2(m.x0, m.y0);"}],"waves":[{"baseVals":{"enabled":1,"samples":152,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":1,"scaling":1.07408,"smoothing":0,"r":0,"g":0.5,"b":1,"a":1},"init_eqs_str":"m.t1 = 0;\nm.t2 = 0;\nm.t3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=0; m.t2=0; m.t3=0;","point_eqs_str":"m.x=m.sample; m.y=(0.5+m.value1);"},{"baseVals":{"enabled":0,"samples":128,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":32,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.n = 0;\nm.maxbpm = 0;\nm.num_res = 0;\nm.ratio = 0;\nm.index = 0;\nm.q12 = 0;\nm.q13 = 0;\nm.scale = 0;\nm.dt = 0;\nm.maxquad = 0;\nm.q1 = 0;\nm.imax = 0;\nm.dec_s = 0;\nm.minbpm = 0;\nm.omega = 0;\nm.ec_steps = 0;\nm.exc = 0;\nm.dec_m = 0;\nm.tr2 = 0;\nm.sum_res = 0;\nm.beatsin = 0;\nm.vol = 0;\nm.beatcos = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.vol_ = 0;\nm.maxquad_ = 0;\nm.quad = 0;\nm.q32 = 0;\nm.excite = 0;\nm.n=-10000; for(var mdparser_idx1=0;mdparser_idx1<20000;mdparser_idx1++){m.megabuf[m.n]=0; m.gmegabuf[m.n]=0; m.n+=1;} m.minbpm=35; m.maxbpm=210; m.num_res=400; m.index=0; for(var mdparser_idx2=0;mdparser_idx2<m.num_res;mdparser_idx2++){m.n=(m.index*8); m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.index,(m.num_res-1)))); m.megabuf[m.n]=m.bpm; m.index+=1;} m.exc_2=0.2; m.maxquad=1; m.pi=3.1416;","frame_eqs_str":"m.dt=Math.min(div(1,m.fps), 0.1); m.dec_m=(1-(4*m.dt)); m.dec_s=(1-(1.25*m.dt)); m.vol=((m.bass+m.mid)+m.treb); m.vol_=((m.vol_*m.dec_m)+((1-m.dec_m)*m.vol)); m.exc=(m.vol-m.vol_); m.excite=div(Math.atan((m.exc*2)),1.6); m.index=0; m.ratio=Math.log(div(m.maxbpm,m.minbpm)); m.sum_res=0.01; m.maxquad=0.2; for(var mdparser_idx3=0;mdparser_idx3<m.num_res;mdparser_idx3++){m.n=(m.index*8); m.omega=div((m.megabuf[m.n]*6.2832),60); m.megabuf[(m.n+1)]*=(1-(0.2*m.dt)); m.ec_steps=(Math.floor(((10*m.omega)*m.dt))+1); for(var mdparser_idx4=0;mdparser_idx4<m.ec_steps;mdparser_idx4++){m.megabuf[(m.n+1)]+=div(((m.excite-(sqr(m.omega)*m.megabuf[(m.n+2)]))*m.dt),m.ec_steps); m.megabuf[(m.n+2)]+=div((m.megabuf[(m.n+1)]*m.dt),m.ec_steps);} m.beatcos=m.megabuf[(m.n+1)]; m.beatsin=(m.megabuf[(m.n+2)]*m.omega); m.quad=sqrt((pow(m.beatsin, 2)+pow(m.beatcos, 2))); ((((m.maxquad<m.quad)?1:0)!=0)?(m.maxquad=m.quad):(0)); m.megabuf[(m.n+3)]=((m.megabuf[(m.n+3)]*m.dec_s)+(m.quad*(1-m.dec_s))); m.megabuf[(m.n+4)]=m.megabuf[(m.n+3)]; m.megabuf[(m.n+5)]=m.beatcos; m.megabuf[(m.n+6)]=m.beatsin; m.sum_res+=m.megabuf[(m.n+3)]; m.index+=1;} m.n=0; for(var mdparser_idx5=0;mdparser_idx5<m.num_res;mdparser_idx5++){m.scale=1; m.gmegabuf[(m.n+5)]=(m.megabuf[(m.n+5)]*m.scale); m.gmegabuf[(m.n+6)]=(m.megabuf[(m.n+6)]*m.scale); m.n+=8;} m.n=0; m.imax=0; for(var mdparser_idx6=0;mdparser_idx6<m.num_res;mdparser_idx6++){m.q12+=m.megabuf[((m.n*8)+1)]; m.q13+=m.megabuf[((m.n*8)+2)]; m.n+=1;} m.maxquad_=((m.maxquad_*m.dec_s)+((1-m.dec_s)*m.maxquad)); m.q1=sqrt(div(0.7,m.maxquad_)); m.tr2+=div(m.maxquad,m.fps); m.q2=div(m.tr2,200); m.q3=0.03; m.monitor=m.q1; m.q32=m.aspecty;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=0; m.warp=0; m.dy=-0.00; m.dx=0.00; m.zoom=1.03;","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = ((vec3(0.0, 0.9, 0.675) * texture (sampler_main, uv).xyz) - 0.004);\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = q2;\n  ret_1.z = (ret_1.z + max (0.0, (0.1 * \n    float((texture (sampler_pw_noise_lq, ((uv * vec2(0.1, 0.02)) + tmpvar_2)).x < 0.1))\n  )));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"vec2 xlat_mutableuv1;\nshader_body\n{\n  vec2 uv_1;\n  float noise_2;\n  vec3 ret_3;\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  uv_1 = (((uv - 0.5) * (1.1 - \n    (tmpvar_4 * tmpvar_4)\n  )) + 0.5);\n  ret_3 = (((vec3(0.48, 0.8, 0.64) * \n    float((uv_1.y < 1.0))\n  ) * float(\n    (uv_1.y > 0.0)\n  )) * dot (texture (sampler_main, uv_1).xxx, vec3(0.32, 0.49, 0.29)));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((1.0 - (8.0 * \n    dot (ret_3, vec3(0.32, 0.49, 0.29))\n  )), 0.0, 1.0);\n  noise_2 = ((texture (sampler_noise_lq, (2.0 * uv_1)).x + 0.25) * (1.0 - texture (sampler_noise_lq, (\n    (2.0 * uv_1)\n   + \n    (texsize.zw * -4.0)\n  )).x));\n  ret_3 = (ret_3 + ((noise_2 * 0.14) * tmpvar_5));\n  ret_3 = (ret_3 + ((\n    (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1).z * vec3(0.0, 1.0, 1.0))\n   * noise_2) * tmpvar_5));\n  xlat_mutableuv1 = ((uv_1 - 0.5) + 0.5);\n  ret_3 = (ret_3 + ((\n    (((texture (sampler_blur2, xlat_mutableuv1).xyz * scale2) + bias2) * tmpvar_5)\n   * noise_2) * vec3(0.0, 1.0, 1.0)));\n  ret_3 = (ret_3 - ((\n    (texture (sampler_blur2, xlat_mutableuv1).xyz * scale2)\n   + bias2).x * tmpvar_5));\n  ret_3 = (ret_3 * 1.5);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_3;\n  ret = tmpvar_6.xyz;\n}\n\n"}