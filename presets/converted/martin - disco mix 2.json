{"baseVals":{"rating":0,"gammaadj":1.780001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527429,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_r":0.3999,"ob_b":0.5,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":25,"textured":1,"x":0.26,"y":0.2,"rad":0.393173,"tex_zoom":0.9355,"r":0,"g":0.55,"b":0.5,"g2":0.4,"b2":0.4,"a2":0.07,"border_r":0.3,"border_g":0.7,"border_b":0.8,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.x0 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.r0 = 0;\nm.trig = 0;\nm.q2 = 0;\nm.b0 = 0;\nm.rad0 = 0;\n\n\t\t\tm.rkeys = ['g0','y0','x0','r0','b0','rad0'];","frame_eqs_str":"m.trig=m.q24; m.textured=1; m.x0=((m.x0*bnot(m.trig))+(m.trig*(0.2+div(rand(100),200)))); m.y0=((m.y0*bnot(m.trig))+(m.trig*(0.2+div(rand(100),200)))); m.x0=(m.x0+div(((0.04*m.q1)*(3+m.q26)),m.fps)); m.y0=(m.y0+div(((0.04*m.q2)*(3+m.q26)),m.fps)); m.x0=(m.x0-Math.floor(m.x0)); m.y0=(m.y0-Math.floor(m.y0)); m.x=0.5; m.y=0.5; m.tex_ang=div(m.time,2); m.tex_zoom=2; m.ang=(div(m.time,100)*m.q2); m.x=m.x0; m.y=m.y0; m.rad0=((m.rad0*bnot(m.trig))+div((m.trig*rand(100)),400)); m.rad=m.rad0; m.r0=((bnot(m.trig)*m.r0)+div((m.trig*rand(10)),10)); m.b0=((bnot(m.trig)*m.b0)+div((m.trig*rand(10)),10)); m.g0=((bnot(m.trig)*m.g0)+div((m.trig*rand(10)),10)); m.r=1; m.b=1; m.g=1; m.r2=0.4; m.b2=0.4; m.g2=0.4; m.a=1; m.a2=0.5;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.xk = 0;\nm.index4 = 0;\nm.yk = 0;\nm.index = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.dt = 0;\nm.movex = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.index3 = 0;\nm.q9 = 0;\nm.x0 = 0;\nm.ax = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.vx = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.vy = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.ay = 0;\nm.p2 = 0;\nm.avg = 0;\nm.rota = 0;\nm.movez = 0;\nm.q19 = 0;\nm.beat = 0;\nm.q17 = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.movey = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.m = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.monitor=m.index4; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q11=Math.min(m.q22, 3); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.14159265359),4); m.q27=(8-m.index); m.q28=m.index2; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.rota=((m.rota*m.dec_med)+div(((1-m.dec_med)*m.q22),4)); m.zoom=(1.05+(0.1*m.q1)); m.rot=((0.01*m.q2)+(div(m.rota,12)*m.q2)); m.dx=(0.01*m.q1); m.dy=(0.01*m.q2); m.wave_a=0; m.movex=(m.movex+div(m.dx,m.fps)); m.movey=(m.movey+div(m.dy,m.fps)); m.movez=(m.movez+div((m.zoom-1),m.fps)); m.q16=m.rota; m.q17=(m.movez*200); m.q18=m.movex; m.q19=m.movey; m.warp=0.5; m.dt=div((0.1*30),m.fps); m.m=0.03; m.x0=0.0; m.y0=0; m.x0=m.q1; m.y0=div(m.q27,4); m.ax=-(m.xk-m.x0); m.ay=-(m.yk-m.y0); m.vx=((m.vx*m.dec_med)+div((m.ax*m.dt),m.m)); m.vy=((m.vy*m.dec_med)+div((m.ay*m.dt),m.m)); m.xk=(m.xk+(m.vx*m.dt)); m.yk=(m.yk+(m.vy*m.dt)); m.q9=m.xk; m.q10=m.yk; m.monitor=m.q10;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"float xlat_mutablepads;\nvec2 xlat_mutablers;\nshader_body\n{\n  vec2 uv1_1;\n  uv1_1 = (((uv - 0.5) * aspect.xy) * aspect.yx);\n  float tmpvar_2;\n  tmpvar_2 = (3.0 / abs(uv1_1.y));\n  xlat_mutablers.x = ((uv1_1.x * tmpvar_2) * 2.0);\n  xlat_mutablers.y = tmpvar_2;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)] = _qa.xy;\n  tmpvar_3[1u] = _qa.zw;\n  xlat_mutablers = (xlat_mutablers * tmpvar_3);\n  xlat_mutablers.y = (xlat_mutablers.y + q17);\n  vec2 tmpvar_4;\n  tmpvar_4 = sin(xlat_mutablers);\n  float x_5;\n  x_5 = (tmpvar_4.x * tmpvar_4.y);\n  xlat_mutablepads = (0.5 - sqrt(sqrt(\n    (x_5 * x_5)\n  )));\n  xlat_mutablepads = (xlat_mutablepads * (float(\n    (xlat_mutablepads <= -0.1)\n  ) * clamp (\n    ((15.0 / tmpvar_2) - 0.3)\n  , 0.0, 1.0)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((1.0 - (2.0 * xlat_mutablepads)) * texture (sampler_main, (uv + (xlat_mutablepads / 4.0))).xyz)\n   * \n    (1.0 + q22)\n  ) - (\n    ((xlat_mutablepads * q2) * texture (sampler_main, (xlat_mutablers / 180.0)).xyz)\n   * 4.0)) - ((\n    (xlat_mutablepads * q1)\n   * texture (sampler_main, \n    (1.0 - uv)\n  ).xyz) * 4.0));\n  ret = tmpvar_6.xyz;\n}\n\n"}