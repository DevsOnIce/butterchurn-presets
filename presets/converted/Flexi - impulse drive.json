{"baseVals":{"rating":1,"gammaadj":1,"wave_thick":1,"wrap":0,"wave_a":0.004,"wave_scale":0.037,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.803,"warpscale":1.22,"zoomexp":1.50374,"warp":0.31218,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0.75,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"num_inst":50,"rad":0.01,"ang":3.20442,"tex_zoom":6.23873,"g":1,"b":1,"a":0,"r2":1,"b2":1,"border_a":0.82},"init_eqs_str":"m.index = 0;\nm.q2 = 0;\nm.q32 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.index=(m.instance*m.q32); m.x=m.gmegabuf[m.index]; m.y=m.gmegabuf[(m.index+1)]; m.rad=(m.gmegabuf[(m.index+4)]*2); m.r=m.gmegabuf[(m.index+5)]; m.g=m.gmegabuf[(m.index+6)]; m.b=m.gmegabuf[(m.index+7)]; m.r2=m.r; m.g2=m.g; m.b2=m.b; m.x=(0.5+div((m.x-0.5),m.q2));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"samples":442,"additive":1,"scaling":5.92556,"smoothing":0,"a":0.16},"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.w = 0;\nm.index2 = 0;\nm.ppo = 0;\nm.index = 0;\nm.smaller = 0;\nm.t1 = 0;\nm.j = 0;\nm.q31 = 0;\nm.smallestfind = 0;\nm.distance = 0;\nm.i = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q32 = 0;\nm.yy = 0;\nm.findindex = 0;\n\n\t\t\tm.rkeys = ['d','smaller','t1','smallestfind','distance','t2','findindex'];","frame_eqs_str":"m.t1=0; m.t2=0;","point_eqs_str":"m.ppo=11; m.index=(m.t2*m.q32); m.x=(0.5+div((m.gmegabuf[m.index]-0.5),m.q2)); m.y=(0.5+div((m.gmegabuf[(m.index+1)]-0.5),m.q2)); m.i=0; m.j=0; for(var mdparser_idx5=0;mdparser_idx5<m.q31;mdparser_idx5++){m.d=sqrt((sqr((m.gmegabuf[m.index]-m.gmegabuf[m.i]))+sqr((m.gmegabuf[(m.index+1)]-m.gmegabuf[(m.i+1)])))); m.megabuf[m.j]=m.i; m.megabuf[(m.j+1)]=m.d; m.j=(m.j+2); m.i=(m.i+m.q32);} m.i=0; for(var mdparser_idx6=0;mdparser_idx6<7;mdparser_idx6++){m.j=m.i; m.smallestfind=100; m.findindex=-1; for(var mdparser_idx7=0;mdparser_idx7<(m.q31-m.j);mdparser_idx7++){m.distance=m.megabuf[((m.j*2)+1)]; m.smaller=above(m.smallestfind, m.distance); m.smallestfind=((m.smaller!=0)?(m.distance):(m.smallestfind)); m.findindex=((m.smaller!=0)?((m.j*2)):(m.findindex)); m.j=(m.j+1);} m.j=m.megabuf[m.i]; m.d=m.megabuf[(m.i+1)]; m.megabuf[m.i]=m.megabuf[m.findindex]; m.megabuf[(m.i+1)]=m.megabuf[(m.findindex+1)]; m.megabuf[m.findindex]=m.j; m.megabuf[(m.findindex+1)]=m.d; m.i=(m.i+1);} m.index2=mod(m.t1,m.ppo); m.i=((below(m.index2, (m.ppo-4))!=0)?(m.megabuf[m.index2]):(m.index)); m.xx=(0.5+div((m.gmegabuf[m.i]-0.5),m.q2)); m.yy=(0.5+div((m.gmegabuf[(m.i+1)]-0.5),m.q2)); m.w=div((Math.asin(1)*m.index2),4); m.x=((equal(mod(m.index2,2), 0)!=0)?(m.x):(m.xx)); m.y=((equal(mod(m.index2,2), 0)!=0)?(m.y):(m.yy)); m.b=(below(m.index2, (m.ppo-1))*above(m.index2, 0)); m.r=m.b; m.g=m.b; m.t2=(m.t2+equal(mod(m.t1,m.ppo), (m.ppo-1))); m.t1=(m.t1+1);"},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.w = 0;\nm.index2 = 0;\nm.index = 0;\nm.w2 = 0;\nm.ref_ang = 0;\nm.q1 = 0;\nm.count = 0;\nm.gravity = 0;\nm.vv1 = 0;\nm.vv2 = 0;\nm.w1 = 0;\nm.attributes = 0;\nm.m2 = 0;\nm.hit = 0;\nm.q2 = 0;\nm.m1 = 0;\nm.v1 = 0;\nm.pi2 = 0;\nm.v2 = 0;\nm.dampening = 0;\nm.i=0; for(var mdparser_idx1=0;mdparser_idx1<(1024*1024);mdparser_idx1++){m.gmegabuf[m.i]=0; m.i=(m.i+1);} m.count=40; m.attributes=9; m.minradius=0.005; m.maxradius=0.045; m.v=0.005; m.index=0; for(var mdparser_idx2=0;mdparser_idx2<m.count;mdparser_idx2++){m.gmegabuf[(m.index*m.attributes)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+1)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+2)]=(m.v*(div(rand(1000),1000)-0.5)); m.gmegabuf[((m.index*m.attributes)+3)]=(m.v*(div(rand(1000),1000)-0.5)); m.gmegabuf[((m.index*m.attributes)+4)]=(m.minradius+div(((m.maxradius-m.minradius)*(m.index+1)),m.count)); m.gmegabuf[((m.index*m.attributes)+5)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+6)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+7)]=div(rand(1000),1000); m.gmegabuf[((m.index*m.attributes)+8)]=sqr(m.gmegabuf[((m.index*m.attributes)+4)]); m.index=(m.index+1);} m.q31=m.count; m.q32=m.attributes;","frame_eqs_str":"m.warp=0; m.zoom=1; m.gravity=(div(0.005,m.fps)*0); m.dampening=0.995; m.pi2=Math.asin(1); m.index=0; m.index2=0; m.w=div((m.aspecty-m.aspectx),2); for(var mdparser_idx3=0;mdparser_idx3<m.count;mdparser_idx3++){m.gmegabuf[((m.index*m.attributes)+1)]=(m.gmegabuf[((m.index*m.attributes)+1)]+m.gmegabuf[((m.index*m.attributes)+3)]); m.gmegabuf[(m.index*m.attributes)]=(m.gmegabuf[(m.index*m.attributes)]+m.gmegabuf[((m.index*m.attributes)+2)]); m.gmegabuf[((m.index*m.attributes)+2)]=((below(m.gmegabuf[(m.index*m.attributes)], ((0-m.w)+m.gmegabuf[((m.index*m.attributes)+4)]))!=0)?((Math.abs(m.gmegabuf[((m.index*m.attributes)+2)])*m.dampening)):(m.gmegabuf[((m.index*m.attributes)+2)])); m.gmegabuf[((m.index*m.attributes)+2)]=((above(m.gmegabuf[(m.index*m.attributes)], ((1+m.w)-m.gmegabuf[((m.index*m.attributes)+4)]))!=0)?((-Math.abs(m.gmegabuf[((m.index*m.attributes)+2)])*m.dampening)):(m.gmegabuf[((m.index*m.attributes)+2)])); m.gmegabuf[((m.index*m.attributes)+3)]=(m.gmegabuf[((m.index*m.attributes)+3)]-m.gravity); m.gmegabuf[((m.index*m.attributes)+3)]=((below(m.gmegabuf[((m.index*m.attributes)+1)], m.gmegabuf[((m.index*m.attributes)+4)])!=0)?((Math.abs(m.gmegabuf[((m.index*m.attributes)+3)])*m.dampening)):(m.gmegabuf[((m.index*m.attributes)+3)])); m.gmegabuf[((m.index*m.attributes)+3)]=((above(m.gmegabuf[((m.index*m.attributes)+1)], (1-m.gmegabuf[((m.index*m.attributes)+4)]))!=0)?((-Math.abs(m.gmegabuf[((m.index*m.attributes)+3)])*m.dampening)):(m.gmegabuf[((m.index*m.attributes)+3)])); m.hit=-1; m.index2=m.index; for(var mdparser_idx4=0;mdparser_idx4<(m.count-m.index);mdparser_idx4++){m.hit=(below(sqrt((sqr((m.gmegabuf[(m.index*m.attributes)]-m.gmegabuf[(m.index2*m.attributes)]))+sqr((m.gmegabuf[((m.index*m.attributes)+1)]-m.gmegabuf[((m.index2*m.attributes)+1)])))), (m.gmegabuf[((m.index*m.attributes)+4)]+m.gmegabuf[((m.index2*m.attributes)+4)]))*above(sqrt((sqr((m.gmegabuf[(m.index*m.attributes)]-m.gmegabuf[(m.index2*m.attributes)]))+sqr((m.gmegabuf[((m.index*m.attributes)+1)]-m.gmegabuf[((m.index2*m.attributes)+1)])))), sqrt((sqr((((m.gmegabuf[((m.index*m.attributes)+0)]-m.gmegabuf[((m.index2*m.attributes)+0)])+m.gmegabuf[((m.index*m.attributes)+2)])-m.gmegabuf[((m.index2*m.attributes)+2)]))+sqr((((m.gmegabuf[((m.index*m.attributes)+1)]-m.gmegabuf[((m.index2*m.attributes)+1)])+m.gmegabuf[((m.index*m.attributes)+3)])-m.gmegabuf[((m.index2*m.attributes)+3)])))))); m.ref_ang=(Math.atan2((m.gmegabuf[(m.index2*m.attributes)]-m.gmegabuf[(m.index*m.attributes)]), (m.gmegabuf[((m.index2*m.attributes)+1)]-m.gmegabuf[((m.index*m.attributes)+1)]))+m.pi2); m.v1=sqrt((sqr(m.gmegabuf[((m.index*m.attributes)+2)])+sqr(m.gmegabuf[((m.index*m.attributes)+3)]))); m.v2=sqrt((sqr(m.gmegabuf[((m.index2*m.attributes)+2)])+sqr(m.gmegabuf[((m.index2*m.attributes)+3)]))); m.w1=Math.atan2(m.gmegabuf[((m.index*m.attributes)+2)], m.gmegabuf[((m.index*m.attributes)+3)]); m.w2=Math.atan2(m.gmegabuf[((m.index2*m.attributes)+2)], m.gmegabuf[((m.index2*m.attributes)+3)]); m.m1=m.gmegabuf[((m.index*m.attributes)+8)]; m.m2=m.gmegabuf[((m.index2*m.attributes)+8)]; m.vv1=div((((m.m1-m.m2)*m.v1)+((2*m.m2)*m.v2)),(m.m1+m.m2)); m.vv2=div((((m.m2-m.m1)*m.v2)+((2*m.m1)*m.v1)),(m.m1+m.m2)); m.gmegabuf[((m.index*m.attributes)+2)]=((m.hit!=0)?((((Math.sin(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+((Math.sin((m.ref_ang+m.pi2))*m.vv1)*Math.cos(((m.w2-m.ref_ang)-m.pi2))))):(m.gmegabuf[((m.index*m.attributes)+2)])); m.gmegabuf[((m.index*m.attributes)+3)]=((m.hit!=0)?((((Math.cos(m.ref_ang)*m.v1)*Math.cos((m.w1-m.ref_ang)))+((Math.cos((m.ref_ang+m.pi2))*m.vv1)*Math.cos(((m.w2-m.ref_ang)-m.pi2))))):(m.gmegabuf[((m.index*m.attributes)+3)])); m.gmegabuf[((m.index2*m.attributes)+2)]=((m.hit!=0)?((((Math.sin(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+((Math.sin((m.ref_ang+m.pi2))*m.vv2)*Math.cos(((m.w1-m.ref_ang)-m.pi2))))):(m.gmegabuf[((m.index2*m.attributes)+2)])); m.gmegabuf[((m.index2*m.attributes)+3)]=((m.hit!=0)?((((Math.cos(m.ref_ang)*m.v2)*Math.cos((m.w2-m.ref_ang)))+((Math.cos((m.ref_ang+m.pi2))*m.vv2)*Math.cos(((m.w1-m.ref_ang)-m.pi2))))):(m.gmegabuf[((m.index2*m.attributes)+3)])); m.index2=(m.index2+1);} m.index=(m.index+1);} m.q1=m.aspectx; m.q2=m.aspecty; m.monitor=m.aspecty;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.75);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n"}