{"baseVals":{"rating":0,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.n = 0;\nm.w5 = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.w = 0;\nm.dx2 = 0;\nm.si3 = 0;\nm.w4 = 0;\nm.q12 = 0;\nm.w2 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.dy1 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.d1 = 0;\nm.v = 0;\nm.si1 = 0;\nm.vx4 = 0;\nm.w3 = 0;\nm.mm = 0;\nm.tt = 0;\nm.grav = 0;\nm.x3 = 0;\nm.w6 = 0;\nm.d2 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.a = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.bounce = 0;\nm.x4 = 0;\nm.t = 0;\nm.w1 = 0;\nm.dy2 = 0;\nm.r = 0;\nm.x2 = 0;\nm.mx = 0;\nm.mn = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.dx1 = 0;\nm.bb = 0;\nm.q2 = 0;\nm.m1 = 0;\nm.q14 = 0;\nm.spring = 0;\nm.si2 = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.m = 0;\nm.resist = 0;\nm.yy = 0;\nm.y4 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.v2 = 0;\nm.b1 = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.decay=1; m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5+(m.xx1-m.xx2)); m.y1=(0.85+(m.yy1*0.3)); m.spring=100; m.grav=11; m.resist=0.2; m.bounce=0.8; m.dt=0.0001; m.vx2=((m.vx2*(1-(m.resist*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*m.spring))); m.vy2=((m.vy2*(1-(m.resist*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*m.spring)-m.grav))); m.vx3=((m.vx3*(1-(m.resist*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*m.spring))); m.vy3=((m.vy3*(1-(m.resist*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*m.spring)-m.grav))); m.vx4=((m.vx4*(1-(m.resist*m.dt)))+(m.dt*((m.x3-m.x4)*m.spring))); m.vy4=((m.vy4*(1-(m.resist*m.dt)))+(m.dt*(((m.y3-m.y4)*m.spring)-m.grav))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*m.bounce))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*m.bounce))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*m.bounce))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*m.bounce))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*m.bounce))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*m.bounce))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*m.bounce))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*m.bounce))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*m.bounce))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*m.bounce))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*m.bounce))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*m.bounce))); m.q3=m.x4; m.q4=m.x2; m.q7=m.y4; m.q8=m.y2; m.q9=m.x1; m.q10=m.y1; m.q11=m.x3; m.q12=m.y3; m.zoom=1; m.bb=((m.bb*0.99)+(m.bass*0.02)); m.mm=((m.mm*0.99)+(m.mid*0.02)); m.tt=((m.tt*0.99)+(m.treb*0.02)); m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.ob_r=div((m.bb-m.mn),(m.mx-m.mn)); m.ob_b=div((m.mm-m.mn),(m.mx-m.mn)); m.ob_g=div((m.tt-m.mn),(m.mx-m.mn)); m.q2=Math.atan2(m.vx4, m.vy4); m.q13=Math.atan2(m.vx3, m.vy3); m.q1=sqrt(((m.vx4*m.vx4)+(m.vy4*m.vy4))); m.q14=sqrt(((m.vx3*m.vx3)+(m.vy3*m.vy3))); m.q6=Math.atan2(m.vx2, m.vy2); m.q5=sqrt(((m.vx2*m.vx2)+(m.vy2*m.vy2))); m.a=((m.a*0.95)+m.q5); m.monitor=m.q7;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.w1=m.q9; m.w2=m.q10; m.w3=m.q11; m.w4=m.q12; m.w5=m.q13; m.w6=m.q14; m.dir=((-m.q6*1)+(Math.asin(1)*1)); m.b1=0.075; m.m1=(m.q5*50); m.t1=0.1; m.xx=m.q4; m.yy=(1-m.q8); m.x1=(m.xx+(Math.cos((m.dir+1.5708))*m.b1)); m.y1=(m.yy-(Math.sin((m.dir+1.5708))*m.b1)); m.x2=(m.xx-(Math.cos((m.dir+1.5708))*m.b1)); m.y2=(m.yy+(Math.sin((m.dir+1.5708))*m.b1)); m.d1=(sqrt((((m.x1-m.x)*(m.x1-m.x))+((m.y1-m.y)*(m.y1-m.y))))-(m.b1*2)); m.si1=(1-div(1,(1+pow(2, (-m.d1*100))))); m.d2=(sqrt((((m.x2-m.x)*(m.x2-m.x))+((m.y2-m.y)*(m.y2-m.y))))-(m.b1*2)); m.si2=(1-div(1,(1+pow(2, (-m.d2*100))))); m.si3=(-pow(m.q5, 3)*10); m.dx=((((((m.si1*Math.sin((m.y1-m.y)))*m.m1)*m.d1)-(((m.si2*Math.sin((m.y2-m.y)))*m.m1)*m.d2))+((m.si3*Math.cos(m.dir))*m.t1))*2); m.dy=((((((-m.si1*Math.sin((m.x1-m.x)))*m.m1)*m.d1)+(((m.si2*Math.sin((m.x2-m.x)))*m.m1)*m.d2))-((m.si3*Math.sin(m.dir))*m.t1))*2); m.m=((1-m.si1)-m.si2); m.dir=((-m.q2*1)+(Math.asin(1)*0)); m.xx=m.q3; m.yy=(1-m.q7); m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.05; m.v=(-35*m.q1); m.dx=(m.dx+(((m.v*Math.sin(m.dir))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 280)))); m.dy=(m.dy+(((m.v*Math.cos(m.dir))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 280)))); m.xx=m.w1; m.yy=(1-m.w2); m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.1; m.v=-35; m.dx=(m.dx+(((m.v*(m.x-m.xx))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 70)))); m.dy=(m.dy+(((m.v*(m.y-m.yy))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 70)))); m.xx=m.w3; m.yy=(1-m.w4); m.dir=m.w5; m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.1; m.v=20; m.v2=m.w6; m.dx=(m.dx+(((m.v*((Math.sin((m.y-m.yy))*(m.d-m.r))-((m.x-m.xx)*(m.d-div(m.r,2)))))+(Math.cos(m.dir)*m.v2))*(1.00-sigmoid((m.d-m.r), 180)))); m.dy=(m.dy+(((-m.v*((Math.sin((m.x-m.xx))*(m.d-m.r))+((m.y-m.yy)*(m.d-div(m.r,2)))))-(Math.sin(m.dir)*m.v2))*(1.00-sigmoid((m.d-m.r), 180)))); m.d=(sqrt((((m.x-0.5)*(m.x-0.5))+((m.y-0.5)*(m.y-0.5))))*m.rad); m.n=80; m.t=(((m.q3*3)*0)+(m.time*0)); m.w=(-m.q6+div(Math.asin(1),2)); m.v=(0.1*m.q3); m.x2=(m.x-0.5); m.y2=(m.y-0.5); m.x1=((Math.sin(m.w)*m.x2)-(Math.cos(m.w)*m.y2)); m.y1=((Math.cos(m.w)*m.x2)+(Math.sin(m.w)*m.y2)); m.x=m.x1; m.y=m.y1; m.dx1=(0.01*(Math.cos((((-m.x+m.y)*m.n)+m.t))+Math.sin((((m.x+m.y)*m.n)+m.t)))); m.dy1=(0.01*(Math.cos((((m.x-m.y)*m.n)-m.t))+Math.sin((((-m.x-m.y)*m.n)-m.t)))); m.dx2=((Math.sin(-m.w)*m.dx1)-(Math.cos(-m.w)*m.dy1)); m.dy2=((Math.cos(-m.w)*m.dx1)+(Math.sin(-m.w)*m.dy1));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  float ang2_2;\n  ang2_2 = (fract((0.9549295 * ang)) / 6.0);\n  ang2_2 = (abs((ang2_2 - 0.08333334)) * 6.283185);\n  vec2 tmpvar_3;\n  tmpvar_3.x = cos(ang2_2);\n  tmpvar_3.y = sin(ang2_2);\n  uv_1 = (0.5 + ((\n    (0.4 * (rad * sqrt(dot (texsize.xy, texsize.xy))))\n   * tmpvar_3) * texsize.zw));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (1.4 * pow ((\n    clamp (((texture (sampler_blur1, uv_1).xyz * scale1) + bias1), 0.0, 1.0)\n   * \n    (texture (sampler_pc_main, uv_1).xyz - ((texture (sampler_blur3, uv_1).xyz * scale3) + bias3))\n  ), vec3(0.5, 0.5, 0.5)));\n  ret = tmpvar_4.xyz;\n}\n\n"}