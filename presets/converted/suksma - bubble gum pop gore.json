{"baseVals":{"rating":3,"gammaadj":1.7,"decay":0.955,"wave_mode":2,"additivewave":1,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"solarize":1,"wave_a":4.1,"wave_scale":2.85,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"zoomexp":2.3,"wave_g":0,"wave_b":0,"ob_r":0.5,"ob_g":0.5,"ob_b":0.5,"ob_a":1,"ib_r":0.5,"ib_g":0.5,"ib_b":0.5,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0.48,"mv_g":0.4,"mv_b":0.47,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"additive":1,"textured":1,"y":0.7,"rad":0.15493,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.y=((m.bass_att*0.5)+0.2); m.x=((Math.cos((m.time*2))*0.5)+0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"x":0.9,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=((Math.sin((m.time*5))*0.4)+0.5); m.y=(m.treb_att*0.5);"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.033,"tex_zoom":0.01,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(m.bass*0.07));"}],"waves":[{"baseVals":{"enabled":1},"init_eqs_str":"m.yq = 0;\nm.xp = 0;\nm.basstime = 0;\nm.xs = 0;\nm.yp = 0;\nm.t1 = 0;\nm.smp = 0;\nm.q1 = 0;\nm.xq = 0;\nm.axs1 = 0;\nm.ys = 0;\nm.axs2 = 0;\nm.zq = 0;\nm.zp = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.angy = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.basstime=(m.basstime+(m.bass*m.bass)); m.t1=(m.basstime*0.003);","point_eqs_str":"m.smp=(m.sample*6.283); m.xp=(Math.sin(m.smp)*0.20); m.yp=(Math.cos(m.smp)*0.20); m.zp=0; m.angy=(Math.sin((((m.sample*6.28)*4)+m.t1))*6.28); m.xq=((m.xp*Math.cos(m.angy))-(m.zp*Math.sin(m.angy))); m.zq=((m.xp*Math.sin(m.angy))+(m.zp*Math.cos(m.angy))); m.xp=m.xq; m.zp=m.zq; m.angy=(m.t1*0.1); m.xq=((m.xp*Math.cos(m.angy))-(m.zp*Math.sin(m.angy))); m.zq=((m.xp*Math.sin(m.angy))+(m.zp*Math.cos(m.angy))); m.xp=m.xq; m.zp=m.zq; m.axs1=(Math.sin((m.t1*0.15))+1.6); m.yq=((m.yp*Math.cos(m.axs1))-(m.zp*Math.sin(m.axs1))); m.zq=((m.yp*Math.sin(m.axs1))+(m.zp*Math.cos(m.axs1))); m.yp=m.yq; m.zp=m.zq; m.axs2=(Math.sin((m.t1*0.1))*3.3); m.xq=((m.xp*Math.cos(m.axs2))-(m.zp*Math.sin(m.axs2))); m.zq=((m.xp*Math.sin(m.axs2))+(m.zp*Math.cos(m.axs2))); m.xp=m.xq; m.zp=m.zq; m.yp=(m.yp*1.2); m.zp=(m.zp+2.1); m.xs=div(m.xp,m.zp); m.ys=div(m.yp,m.zp); m.x=(m.xs+0.5); m.y=(m.ys+0.5); m.r=(1-m.q1); m.g=(1-m.q2); m.b=(1-m.q3);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.old_treb_flop = 0;\nm.bass_flop = 0;\nm.q1 = 0;\nm.treb_flop = 0;\nm.bass_thresh = 0;\nm.old_bass_flop = 0;\nm.treb_thresh = 0;\nm.pulse = 0;\nm.bass_changed = 0;\nm.mid_thresh = 0;\nm.q4 = 0;\nm.mid_changed = 0;\nm.old_mid_flop = 0;\nm.mid_flop = 0;\nm.q2 = 0;\nm.treb_changed = 0;","frame_eqs_str":"m.warp=0; m.old_bass_flop=m.bass_flop; m.old_treb_flop=m.treb_flop; m.old_mid_flop=m.mid_flop; m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.96)+1.3))); m.bass_flop=Math.abs((m.bass_flop-equal(m.bass_thresh, 2))); m.treb_thresh=((above(m.treb_att, m.treb_thresh)*2)+((1-above(m.treb_att, m.treb_thresh))*(((m.treb_thresh-1.3)*0.96)+1.3))); m.treb_flop=Math.abs((m.treb_flop-equal(m.treb_thresh, 2))); m.mid_thresh=((above(m.mid_att, m.mid_thresh)*2)+((1-above(m.mid_att, m.mid_thresh))*(((m.mid_thresh-1.3)*0.96)+1.3))); m.mid_flop=Math.abs((m.mid_flop-equal(m.mid_thresh, 2))); m.bass_changed=bnot(equal(m.old_bass_flop, m.bass_flop)); m.mid_changed=bnot(equal(m.old_mid_flop, m.mid_flop)); m.treb_changed=bnot(equal(m.old_treb_flop, m.treb_flop)); m.pulse=((above(Math.abs(m.pulse), 5000)!=0)?(-5000):((m.pulse+((m.mid_att*0.1)*bor((bor((m.bass_changed*bnot(m.treb_changed)), (m.treb_changed*bnot(m.bass_changed)))*bnot(m.mid_changed)), m.mid_changed))))); m.wave_b=(((m.treb_changed!=0)?(1):(((m.mid_changed!=0)?(0.45):(-0.45))))*m.q4); m.wave_g=((m.bass_changed!=0)?(0.1):(m.bass_flop)); m.wave_r=((m.mid_flop!=0)?(1):(((0.5*m.q2)*m.treb_flop))); m.ib_b=(m.ib_b+(0.5*Math.sin(m.pulse))); m.ib_g=(m.ib_g+(5*Math.sin((m.pulse*0.8)))); m.ib_r=(m.ib_r+(5*Math.sin((m.pulse*0.8)))); m.ob_b=m.wave_r; m.ob_g=m.wave_b; m.ob_r=m.wave_g; m.wave_mystery=Math.sin(m.pulse); m.q1=m.pulse;\n\t\tm.rkeys = ['zoom','rot'];","pixel_eqs_str":"m.zoom=((m.zoom-(Math.cos((((m.x*10)*Math.sin((m.time+(m.q1*0.9))))-(10*Math.sin((m.time+m.q1)))))*0.1))-(Math.sin(((m.rad*10)*Math.sin((m.time+(m.q1*0.5)))))*0.1)); m.rot=(m.rot+((Math.abs((1-m.zoom))*Math.sin((m.time+m.q1)))*2));","warp":"","comp":"shader_body\n{\n  vec3 bird_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.y;\n  tmpvar_6.y = tmpvar_5.y;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv + (tmpvar_6 * 0.05));\n  vec2 x_8;\n  x_8 = (tmpvar_7 - uv);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.y;\n  tmpvar_9.y = tmpvar_5.y;\n  bird_1 = (pow (vec3(max (texture (sampler_main, tmpvar_7).x, texture (sampler_main, \n    ((0.5 + ((uv - 0.5) * vec2(-1.0, 1.0))) + (tmpvar_9 * 0.05))\n  ).x)), vec3(1.4, 1.4, 1.4)) * (hue_shader * hue_shader));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.y;\n  tmpvar_10.y = tmpvar_5.y;\n  ret_2 = (((\n    ((((\n      (((tmpvar_4.y + tmpvar_5.y) * 4.0) + 0.5)\n     * vec3(0.0, 0.0, 1.0)) + (\n      sqrt(dot (x_8, x_8))\n     * vec3(64.0, 96.0, 0.0))) + (vec3(1.0, 0.0, 0.0) * texture (sampler_main, uv).y)) - vec3(0.0, 0.0, 0.3))\n   * 0.6) * clamp (\n    (1.0 - (bird_1.x * 4.0))\n  , 0.0, 1.0)) + bird_1);\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (ret_2, vec3(1.0, 1.0, 1.0), ((\n    (((texture (sampler_blur1, (uv + \n      (tmpvar_10 * 0.1)\n    )).xyz * scale1) + bias1) * clamp (1.0, 0.0, 1.0))\n  .z * 6.0) * (1.0 - \n    (bird_1 * 3.0)\n  )));\n  ret_2 = tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = tmpvar_11;\n  ret = tmpvar_12.xyz;\n}\n\n"}