{"baseVals":{"rating":0,"gammaadj":2.7,"wave_mode":6,"modwavealphabyvolume":1,"wave_a":0.49623,"wave_scale":4.695139,"wave_smoothing":0.495,"wave_mystery":-0.14,"modwavealphastart":0.67,"modwavealphaend":0.97,"warpscale":1.331,"zoom":1.007964,"rot":0.02,"cx":0.499999,"warp":0.000156,"sx":0.999667,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_y":0.63,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.du = 0;\nm.q1 = 0;\nm.mult = 0;\nm.ang2 = 0;\nm.dv = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.dist = 0;\nm.q3 = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.350*((0.60*Math.sin((0.980*m.time)))+(0.40*Math.sin((1.047*m.time)))))); m.wave_g=(m.wave_g+(0.350*((0.60*Math.sin((0.835*m.time)))+(0.40*Math.sin((1.081*m.time)))))); m.wave_b=(m.wave_b+(0.350*((0.60*Math.sin((0.814*m.time)))+(0.40*Math.sin((1.011*m.time)))))); m.q1=(((m.cx*2)-1)+(0.32*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.q2=(((m.cy*2)-1)+(0.52*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.q3=(((m.cx*2)-1)+(0.32*((0.60*Math.sin((0.174*-m.time)))+(0.40*Math.sin((0.364*m.time)))))); m.q4=(((m.cy*2)-1)+(0.52*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.271*-m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,5), 0)));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.du=(((m.x*2)-1)-m.q1); m.dv=(((m.y*2)-1)-m.q2); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=Math.atan2(m.du, m.dv); m.mult=div(0.012,(m.dist+0.4)); m.dx=(m.mult*Math.sin((m.ang2-1.5))); m.dy=(m.mult*Math.cos((m.ang2-1.5))); m.du=(((m.x*2)-1)-m.q3); m.dv=(((m.y*2)-1)-m.q4); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=Math.atan2(m.du, m.dv); m.mult=div(0.012,(m.dist+0.4)); m.dx=(m.dx+(m.mult*Math.sin((m.ang2+1.5)))); m.dy=(m.dy+(m.mult*Math.cos((m.ang2+1.5))));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv + tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv - tmpvar_2)) * 0.97)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 0.0;\n  tmpvar_6.xyz = max (tmpvar_5, (texture (sampler_main, (uv + \n    (tmpvar_2 * 2.0)\n  )) * 0.9)).xyz;\n  ret_1 = (max (tmpvar_6, (texture (sampler_main, \n    (uv - (tmpvar_2 * 2.0))\n  ) * 0.9)).xyz * 0.95);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"uniform sampler2D sampler_cells;\nshader_body\n{\n  vec3 tex_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_cells, (((uv * texsize.xy) + frame) * texsize_cells.zw));\n  tex_1 = (tmpvar_3.xyz * tmpvar_3.xyz);\n  tex_1 = (tex_1 * (1.0 - clamp (\n    (dot (((texture (sampler_blur2, \n      (uv - 0.01)\n    ).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)) * 5.0)\n  , 0.0, 1.0)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (mix (tmpvar_2.xyz, tex_1, vec3((1.0 - \n    clamp (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 10.0) - 1.0), 0.0, 1.0)\n  ))) * 1.7);\n  ret = tmpvar_4.xyz;\n}\n\n"}