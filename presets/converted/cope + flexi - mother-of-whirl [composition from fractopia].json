{"baseVals":{"rating":5,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q12 = 0;\nm.q18 = 0;\nm.q6 = 0;\nm.bass_thresh = 0;\nm.wg = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.t = 0;\nm.wb = 0;\nm.q17 = 0;\nm.vol = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.wr = 0;\nm.q7 = 0;\nm.q8 = 0;\nm.q1=div(1,Math.asin(1));","frame_eqs_str":"m.wave_r=(m.wave_r+(0.3*Math.sin((m.vol*50)))); m.wave_b=(m.wave_b+(0.3*Math.sin((m.vol*20)))); m.wave_g=(m.wave_g+(0.5*Math.sin((m.vol*35)))); m.q8=m.wave_r; m.q7=m.wave_b; m.q6=m.wave_g; m.wr=(0.5+(0.4*((0.6*Math.sin((m.time*1.1)))+(0.4*Math.sin((0.8*m.time)))))); m.wb=(0.5+(0.4*((0.6*Math.sin((m.time*1.6)))+(0.4*Math.sin((0.5*m.time)))))); m.wg=(0.5+(0.4*((0.6*Math.sin((m.time*1.34)))+(0.4*Math.sin((0.4*m.time)))))); m.monitor=m.wg; m.q10=m.wr; m.q11=m.wb; m.q12=m.wg; m.q18=(0.007*Math.sin((m.time*0.1))); m.q17=(-0.007*Math.sin((m.time*0.254))); m.q2=m.bass_thresh; m.vol=(((m.bass+m.mid)+m.treb)*0.25); m.vol=(m.vol*m.vol); m.q3=m.vol; m.warp=0; m.t=(m.t-div(1,m.fps)); m.t=((above(m.t, 2)!=0)?((m.t-2)):(m.t)); m.q2=m.t;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 noise3_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  vec2 tmpvar_3;\n  tmpvar_3 = (0.5 + ((\n    (uv - vec2(0.0, 1.0))\n   - 0.5) * (1.0 + \n    (tmpvar_2.y * 0.03)\n  )));\n  vec2 tmpvar_4;\n  tmpvar_4.x = (tmpvar_3.x + pow (tmpvar_2.x, 0.0));\n  tmpvar_4.y = (tmpvar_3.y + pow (tmpvar_2.x, 0.005));\n  noise3_1 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\n  vec3 tmpvar_5;\n  tmpvar_5 = (noise3_1 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\n    (q3 * 0.5)\n  ))));\n  noise3_1 = tmpvar_5;\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, fract(tmpvar_4));\n  vec3 tmpvar_7;\n  tmpvar_7.x = q10;\n  tmpvar_7.y = q11;\n  tmpvar_7.z = q12;\n  vec3 tmpvar_8;\n  tmpvar_8 = mix (tmpvar_5, tmpvar_7, tmpvar_6.xxx);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (tmpvar_6.xyz + clamp ((\n    (tmpvar_6.yzx * tmpvar_8.zxy)\n   - \n    (tmpvar_6.zxy * tmpvar_8.yzx)\n  ), 0.0, 1.0));\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_2.x;\n  tmpvar_4.y = tmpvar_3.x;\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_2.z;\n  tmpvar_5.y = tmpvar_3.z;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_2.z;\n  tmpvar_6.y = tmpvar_3.z;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_2.x;\n  tmpvar_7.y = tmpvar_3.x;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_blur1, uv);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, uv);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur3, uv);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = mix (clamp (mix (\n    mix (mix (mix (mix (\n      (vec3(0.0, 1.0, 0.0) * vec3(sqrt(dot (tmpvar_6, tmpvar_6))))\n    , vec3(1.0, 0.0, 0.0), vec3(\n      (tmpvar_9.z * clamp ((1.0 - (\n        ((tmpvar_10.xyz * scale3) + bias3)\n      .y * 8.0)), 0.0, 1.0))\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((((texture (sampler_blur1, \n        (uv - tmpvar_5)\n      ).xyz * scale1) + bias1).x * ((tmpvar_8.xyz * scale1) + bias1).z) * 2.0)\n     * \n      (1.0 - (((tmpvar_8.xyz * scale1) + bias1).y * 4.0))\n    ))), vec3(0.8, 0.0, 1.5), vec3(sqrt(dot (tmpvar_7, tmpvar_7)))), vec3(1.0, 1.0, 0.0), vec3((tmpvar_9.x * clamp ((1.0 - \n      (((tmpvar_10.xyz * scale3) + bias3).y * 8.0)\n    ), 0.0, 1.0))))\n  , vec3(1.0, 1.0, 1.0), vec3(\n    ((((\n      (texture (sampler_blur1, (uv - tmpvar_4)).xyz * scale1)\n     + bias1).z * (\n      (tmpvar_8.xyz * scale1)\n     + bias1).x) * 2.0) * (1.0 - ((\n      (tmpvar_8.xyz * scale1)\n     + bias1).y * 4.0)))\n  )), 0.0, 1.0), vec3(1.0, 1.0, 1.0), tmpvar_9.yyy);\n  ret = tmpvar_11.xyz;\n}\n\n"}