{"baseVals":{"rating":0,"gammaadj":1.49,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_mode":1,"wave_thick":1,"wave_brighten":0,"brighten":1,"darken":1,"wave_a":1.06,"wave_scale":0.43,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.403,"zoomexp":1.0016,"zoom":1.0298,"warp":0.01,"sx":0.9901,"sy":0.97078,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":0.05,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.05,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q12 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.wg = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.wb = 0;\nm.vol = 0;\nm.q2 = 0;\nm.wr = 0;\nm.q7 = 0;\nm.mtime = 0;\nm.q8 = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.5*((0.6*Math.sin((m.time*1.3)))+(0.4*Math.sin((0.98*m.time)))))); m.wave_b=(m.wave_b+(0.5*((0.6*Math.sin((m.time*1.1)))+(0.4*Math.sin((0.78*m.time)))))); m.wave_g=(m.wave_g+(0.5*((0.6*Math.sin((m.time*1.2)))+(0.4*Math.sin((0.6*m.time)))))); m.q8=m.wave_r; m.q7=m.wave_b; m.q6=m.wave_g; m.wr=(0.5+(0.3*((0.6*Math.sin((m.time*1.8)))+(0.4*Math.sin((0.8*m.time)))))); m.wb=(0.5+(0.3*((0.6*Math.sin((m.time*1.67)))+(0.4*Math.sin((0.5*m.time)))))); m.wg=(0.5+(0.3*((0.6*Math.sin((m.time*1.92)))+(0.4*Math.sin((0.4*m.time)))))); m.q10=m.wr; m.q11=m.wb; m.q12=m.wg; m.vol=(0.1*((m.vol*9)+(((m.bass_att+m.mid_att)+m.treb_att)*0.333333))); m.q1=m.vol; m.monitor=m.vol; m.mtime=(m.mtime+(m.vol*0.01)); m.q2=(m.mtime*0.25); m.wave_mystery=(m.wave_mystery+(0.6*m.vol)); m.sy=(m.sy+(m.vol*0.02)); m.sx=m.sy; m.cx=(m.cx+(0.2*Math.sin(m.mtime))); m.cy=(m.cy-(0.2*Math.sin((m.mtime*1.2))));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=(Math.log((m.x+0.1))*(m.x+0.1)); m.rot=(m.rot*0.1);","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.5)) + rand_frame.xy);\n  vec4 tmpvar_2;\n  tmpvar_2.zw = vec2(0.0, 0.0);\n  tmpvar_2.xy = uv;\n  vec4 tmpvar_3;\n  tmpvar_3.zw = vec2(0.0, 0.0);\n  tmpvar_3.xy = uv_orig;\n  vec4 tmpvar_4;\n  tmpvar_4 = mix (tmpvar_2, tmpvar_3, ((1.3 - rad) + (\n    (texture (sampler_noise_lq, tmpvar_1) - 0.5)\n   * 0.15)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((texture (sampler_main, clamp (\n    (tmpvar_4.xy - (((vec2(0.0, 64.0) * texsize.zw) * dot (\n      (texture (sampler_main, clamp (tmpvar_4.xy, 0.0, 1.0)).xyz - 0.35)\n    , vec3(0.32, 0.49, 0.29))) * (dot (texture (sampler_main, \n      clamp (tmpvar_4.xy, 0.0, 1.0)\n    ).xyz, vec3(0.32, 0.49, 0.29)) - 0.4)))\n  , 0.0, 1.0)).xyz - 0.0011) + ((texture (sampler_noise_lq, tmpvar_1) - 0.5) * 0.0038).xyz);\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  vec2 tmpvar_4;\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    ((uv - 0.5) * 2.0)\n  )) - tmpvar_4);\n  float tmpvar_5;\n  tmpvar_5 = clamp ((0.04 / sqrt(\n    dot (uv1_1, uv1_1)\n  )), 0.0, 1.0);\n  uv1_1 = ((0.3 * cos(\n    (uv1_1 * 12.0)\n  )) - (9.0 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\n  , 0.0, 1.0))));\n  ret = tmpvar_6.xyz;\n}\n\n"}