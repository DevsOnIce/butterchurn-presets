{"baseVals":{"rating":5,"gammaadj":1,"decay":0.995,"echo_zoom":0.999996,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":100,"wave_scale":0.721422,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.5,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"rad":0.892691,"tex_zoom":0.905277,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_r":0,"border_b":0,"border_a":1},"init_eqs_str":"m.sg3 = 0;\nm.sdx_r = 0;\nm.shpt = 0;\nm.sg2 = 0;\nm.sg1 = 0;\nm.q4 = 0;\nm.sdy_r = 0;\n\n\t\t\tm.rkeys = ['shpt','sdx_r','sdy_r','sg3'];","frame_eqs_str":"m.shpt=((above(m.bass_att, m.shpt)*2)+((1-above(m.bass_att, m.shpt))*(((m.shpt-1.3)*0.96)+1.3))); m.sdx_r=(((equal(m.shpt, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.shpt, 2))*m.sdx_r)); m.sdy_r=(((equal(m.shpt, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.shpt, 2))*m.sdy_r)); m.sg1=Math.abs(Math.sin(m.time)); m.sg2=(((12*m.sdx_r)*above(m.sg1, 0.5))+((12*m.sdy_r)*below(m.sg1, 0.5))); m.sg3=((equal(m.shpt, 2)!=0)?(m.sg2):(m.sg3)); m.ang=((m.ang+m.q4)+2);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.tg3 = 0;\nm.rg2 = 0;\nm.pfdx_r = 0;\nm.pfthresh = 0;\nm.ocog = 0;\nm.thresh = 0;\nm.cog = 0;\nm.dy_r = 0;\nm.tg2 = 0;\nm.tg1 = 0;\nm.rg3 = 0;\nm.pfdy_r = 0;\nm.rg1 = 0;\nm.q4 = 0;\nm.dx_r = 0;","frame_eqs_str":"m.wave_r=(0.5+(0.5*Math.sin((4.326*m.time)))); m.wave_g=(0.5+(0.5*Math.sin((7.121*m.time)))); m.wave_b=(-1+((1-m.wave_r)+(1-m.wave_g))); m.warp=0; m.pfthresh=((above(m.bass_att, m.pfthresh)*2)+((1-above(m.bass_att, m.pfthresh))*(((m.pfthresh-1.3)*0.96)+1.3))); m.pfdx_r=(((equal(m.pfthresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.pfthresh, 2))*m.pfdx_r)); m.pfdy_r=(((equal(m.pfthresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.pfthresh, 2))*m.pfdy_r)); m.rg1=Math.abs(Math.sin(m.time)); m.rg2=((((0*above(m.rg1, 0.75))+(3*below(m.rg1, 0.25)))+((1*above(m.rg1, 0.25))*below(m.rg1, 0.5)))+((2*above(m.rg1, 0.5))*below(m.rg1, 0.75))); m.rg3=((equal(m.pfthresh, 2)!=0)?(m.rg2):(m.rg3)); m.wave_a=0; m.cog=(m.ocog+(0.005*(((m.bass+m.bass_att)+(m.bass*m.bass_att))-2))); m.ocog=(below(m.cog, 30000)*m.cog); m.q4=m.cog; m.ob_r=m.wave_g; m.ob_b=m.wave_r; m.ob_g=m.wave_b;\n\t\tm.rkeys = ['thresh','dx_r','dy_r','tg3','zoom','warp'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.tg1=Math.abs(Math.sin(m.time)); m.tg2=(((6*m.dx_r)*above(m.tg1, 0.5))+((6*m.dy_r)*below(m.tg1, 0.5))); m.tg3=((equal(m.thresh, 2)!=0)?(m.tg2):(m.tg3)); m.zoom=(m.zoom+Math.abs(((6*m.tg3)*(div(2,m.q4)-(2*Math.cos(((5*m.ang)*m.rad))))))); m.zoom=(m.zoom-Math.abs(((6*m.tg3)*(div(2,m.q4)-(2*Math.abs(((5*m.ang)*m.rad))))))); m.warp=(m.warp+(2*Math.sin(m.q4)));","warp":"","comp":""}