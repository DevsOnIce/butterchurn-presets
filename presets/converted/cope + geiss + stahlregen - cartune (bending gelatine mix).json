{"baseVals":{"rating":0,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":5,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.003,"warpscale":0.359,"zoom":1.0002,"dy":-0.004,"warp":0.01,"wave_x":0.2,"wave_y":0.88,"ob_size":0,"ob_a":0.8,"ib_size":0.005,"ib_r":0.3,"ib_g":0.3,"ib_b":0.3,"ib_a":1,"mv_x":0,"mv_y":0,"mv_l":1,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":34,"num_inst":3,"y":0,"rad":0.11046,"r":0.7,"g":0.6,"b":0.7,"r2":0.6,"g2":0.6,"b2":0.6,"a2":1,"border_a":0},"init_eqs_str":"m.q4 = 0;\n\n\t\t\tm.rkeys = ['r','b','g'];","frame_eqs_str":"m.r=(m.r+(0.3*((0.6*Math.sin((m.time*2.4)))+(0.4*Math.sin((0.34*m.time)))))); m.b=(m.b+(0.3*((0.6*Math.sin((m.time*1.65)))+(0.4*Math.sin((0.976*m.time)))))); m.g=(m.g+(0.3*((0.6*Math.sin((m.time*2.05)))+(0.4*Math.sin((0.577*m.time)))))); m.r=m.q4; m.b=(1-m.r); m.g=(1-m.r); m.r2=m.r; m.b2=m.b; m.g2=m.g; m.x=div((0.5+m.instance),m.num_inst);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;\nm.dx1 = 0;\nm.q3 = 0;\nm.bass_thresh = 0;\nm.q4 = 0;\nm.vol = 0;\nm.q2 = 0;","frame_eqs_str":"m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.91)+1.3))); m.q2=m.bass_thresh; m.vol=(((m.bass+m.mid)+m.treb)*0.25); m.vol=(m.vol*m.vol); m.q3=m.vol; m.q4=Math.min((m.vol*0.5), 1); m.dy=-0.005; m.warp=(0.0215+(0.006*m.mid)); m.sx=1.003;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.dx1=((Math.cos(((m.y*m.q3)*30))*1.2)*0.11); m.dx=((above(m.y, 0.8)!=0)?(((below(m.y, 0.83)!=0)?(((above(m.x, 0.05)!=0)?(((below(m.x, 0.93)!=0)?(((m.dx1*((1-m.rad)+0.1))*1.5)):(0))):(0))):(0))):(0)); m.q1=m.dx; m.sx=(1+((0.0075*m.y)*(m.bass-(0.25*m.treb))));","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = uv.x;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  tmpvar_1.y = (uv.y - pow (pow (\n    (((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1) - 0.05)\n  , \n    (texture (sampler_main, tmpvar_2).xyz - 0.9)\n  ).x, 0.007));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_main, fract(fract(\n    fract(tmpvar_1)\n  ))).xyz + 0.001);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + (vec2(1.0, 0.0) * texsize.zw));\n  float tmpvar_3;\n  tmpvar_3 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(-1.0, 0.0) * texsize.zw));\n  float tmpvar_4;\n  tmpvar_4 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, 1.0) * texsize.zw));\n  float tmpvar_5;\n  tmpvar_5 = (((texture (sampler_main, uv2_1).xyz + \n    (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4)\n  ) + (\n    ((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2)\n   * 0.15)) + ((\n    (texture (sampler_blur3, uv2_1).xyz * scale3)\n   + bias3) * 0.1)).x;\n  uv2_1 = (uv + (vec2(0.0, -1.0) * texsize.zw));\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.14;\n  tmpvar_6.x = (tmpvar_3 - tmpvar_4);\n  tmpvar_6.y = (tmpvar_5 - ((\n    (texture (sampler_main, uv2_1).xyz + (((texture (sampler_blur1, uv2_1).xyz * scale1) + bias1) * 0.4))\n   + \n    (((texture (sampler_blur2, uv2_1).xyz * scale2) + bias2) * 0.15)\n  ) + (\n    ((texture (sampler_blur3, uv2_1).xyz * scale3) + bias3)\n   * 0.1)).x);\n  ret_2 = (0.5 + (0.5 * normalize(tmpvar_6)));\n  vec2 x_7;\n  x_7 = (ret_2.xy - 0.5);\n  ret_2 = (ret_2 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_2 = ret_2.xxy;\n  ret_2 = (ret_2 + 1.0);\n  ret_2 = (ret_2 * mix (ret_2, (ret_2 * \n    (((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1))\n  ), pow (hue_shader, ret_2)));\n  ret_2 = (ret_2 * hue_shader);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n"}