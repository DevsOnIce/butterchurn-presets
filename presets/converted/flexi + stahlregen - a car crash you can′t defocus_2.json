{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":0.545,"wave_smoothing":0,"modwavealphastart":1.1,"modwavealphaend":1.1,"zoom":1.14635,"warp":0.01605,"wave_r":0,"ob_size":0.005,"mv_x":64,"mv_y":48,"mv_l":1,"mv_b":0.9,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":2,"rad":1.2523,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q29 = 0;\nm.q31 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.x=m.q28; m.y=m.q29; m.rad=m.q32; m.ang=((equal(m.instance, 0)!=0)?(m.q30):(m.q31));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"num_inst":2,"rad":1.25237,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q25 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.x=m.q23; m.y=m.q24; m.rad=m.q27; m.ang=((equal(m.instance, 0)!=0)?(m.q25):(m.q26));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"scaling":81.95444,"smoothing":1,"g":0,"b":0},"init_eqs_str":"m.wave_x = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.wave_x=1;","point_eqs_str":"m.x=(Math.floor(rand(1000))*0.001); m.y=(Math.floor(rand(1000))*0.001);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q25 = 0;\nm.q29 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.q27 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;","frame_eqs_str":"m.zoom=((0.935*m.zoom)+(0.04*((0.60*Math.sin((0.339*m.bass_att)))+(0.10*Math.sin((0.276*m.bass_att)))))); m.rot=(m.rot+(0.040*((0.60*Math.sin((0.381*m.time)))+(0.40*Math.sin((0.579*m.time)))))); m.cx=(m.cx+(0.003*((0.60*Math.sin((0.471*m.treb_att)))+(0.40*Math.sin((0.297*m.treb_att)))))); m.cy=(m.cy+(0.003*((0.60*Math.sin((0.379*m.mid_att)))+(0.40*Math.sin((0.351*m.mid_att)))))); m.dx=(m.dx+(0.003*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.rot=(m.rot+(0.02*((Math.sin((m.time*2.134))+Math.sin((m.time*1.7134)))+Math.sin((m.time*2.834))))); m.dx=(m.dx+(0.01*((Math.sin((m.time*1.134))+Math.sin((m.time*0.7134)))+Math.sin((m.time*2.334))))); m.dy=(m.dy+(0.01*((Math.sin((m.time*1.8834))+Math.sin((m.time*1.0144)))+Math.sin((m.time*1.334))))); m.q23=div(Math.floor(rand(1000)),1000); m.q24=div(Math.floor(rand(1000)),1000); m.q25=(div(Math.floor(rand(1000)),1000)*6.28); m.q26=(m.q25-3.14); m.q27=(div(Math.floor(rand(1000)),12000)+0.1); m.q28=div(Math.floor(rand(1000)),1000); m.q29=div(Math.floor(rand(1000)),1000); m.q30=(div(Math.floor(rand(1000)),1000)*6.28); m.q31=(m.q30-3.14); m.q32=(div(Math.floor(rand(1000)),14000)+0.1);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 12.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.y;\n  tmpvar_5.y = tmpvar_4.y;\n  vec2 tmpvar_6;\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv_orig * texsize.xy);\n  tmpvar_6 = (((tmpvar_7 * texsize_noise_lq.zw) * 0.8) + rand_frame.xy);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_3.x;\n  tmpvar_8.y = tmpvar_4.x;\n  vec2 tmpvar_9;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv_orig - uv);\n  tmpvar_9 = (((uv_orig - \n    (tmpvar_10 * 0.4)\n  ) + (\n    (tmpvar_8 * texsize.zw)\n   * 2.0)) + ((\n    (texture (sampler_noise_lq, tmpvar_6).xy - 0.5)\n   * texsize.zw) * 4.0));\n  ret_1.x = (((texture (sampler_main, tmpvar_9).x - \n    ((texture (sampler_main, tmpvar_9).x - ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3).x) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_6).x - 0.5) * 0.1));\n  ret_1.y = texture (sampler_main, (uv - (tmpvar_5 * texsize.zw))).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n   * 0.2) - 0.004));\n  ret_1.z = (texture (sampler_main, ((uv_orig - \n    (tmpvar_10 * 2.0)\n  ) + (\n    (texture (sampler_noise_lq, ((tmpvar_7 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n  .xy * texsize.zw))).z - 0.004);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3.xyz = (mix (mix (\n    (vec3(1.0, 0.7, 0.0) * texture (sampler_fc_main, (uv - (tmpvar_2 * 0.4))).x)\n  , vec3(0.8, 0.4, 1.0), vec3(\n    (((tmpvar_4.xyz * scale1) + bias1).y * 0.5)\n  )), vec3(1.0, 1.0, 1.0), vec3((texture (sampler_main, uv).z * \n    (1.0 - (((tmpvar_4.xyz * scale1) + bias1).y * 2.0))\n  ))) - 0.1);\n  ret = tmpvar_3.xyz;\n}\n\n"}