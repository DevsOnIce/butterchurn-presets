{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":1,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":0.236,"wave_smoothing":0,"wave_mystery":-0.64,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0,"wave_g":1,"wave_b":0.6,"wave_x":0.5,"wave_y":0.5,"ob_size":0.005,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":0.8,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"additive":0,"thickoutline":0,"textured":0,"num_inst":4,"x":0.83,"y":0.5,"rad":0.14349,"ang":0,"tex_ang":3.76991,"tex_zoom":5.27784,"r":0,"g":1,"b":1,"a":0.5,"r2":1,"g2":0.2,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":0,"border_a":0},"init_eqs_str":"m.d = 0;\nm.g0 = 0;\nm.q22 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.r0 = 0;\nm.q27 = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0'];","frame_eqs_str":"m.d=(0.3+(div(mod(m.frame,8),8)*0.2)); m.k1=(div(m.instance,m.num_inst)*6.28); m.d=(0.3+div(m.q22,8)); m.x=(0.5+(m.d*Math.cos(m.k1))); m.y=(0.5+(m.d*Math.sin(m.k1))); m.a=Math.min(1, (0.2+(div((0.8*m.q22),2)*mod(m.q27,2)))); m.a2=0; m.r=(0.6+(0.4*Math.sin((div(m.time,4)+1.56)))); m.b=(0.6+(0.4*Math.sin((div(m.time,4)+3.14)))); m.g=(0.6+(0.4*Math.sin(div(m.time,4)))); m.r0=((m.r0*bnot(m.q24))+((0.5+(0.5*Math.sin(m.time)))*m.q24)); m.g0=((m.g0*bnot(m.q24))+((0.5+(0.5*Math.sin((m.time*1.7))))*m.q24)); m.b0=div(((2-m.r0)-m.g0),2); m.r=m.r0; m.b=m.b0; m.g=m.g0; m.r2=(1-m.g); m.g2=(1-m.b); m.b2=(1-m.r);"},{"baseVals":{"enabled":0,"sides":32,"additive":0,"thickoutline":0,"textured":0,"num_inst":4,"x":0.5,"y":0.5,"rad":0.16218,"ang":0,"tex_ang":0,"tex_zoom":1.8315,"r":1,"g":1,"b":1,"a":0.9,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.d = 0;\nm.q22 = 0;\nm.q24 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.a=div(m.q24,2); m.a2=0; m.a=Math.min(1, (0.2+(div((0.8*m.q22),2)*mod(m.q27,2)))); m.r=div(rand(10),10); m.g=div(rand(10),10); m.b=div(rand(10),10); m.rad=(0.06*m.q22); m.d=(0.3+(div(mod(m.frame,8),8)*0.2)); m.d=(0.3+div(m.q22,12)); m.x=(0.5+(m.d*Math.cos(div((6.28*m.instance),m.num_inst)))); m.y=(0.5+(m.d*Math.sin(div((6.28*m.instance),m.num_inst)))); m.a=Math.min(1, (0.2+(div((0.8*m.q22),2)*mod(m.q27,2)))); m.b=1; m.g=1;"},{"baseVals":{"enabled":0,"sides":63,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":8.85459,"ang":0,"tex_ang":0,"tex_zoom":0.03204,"r":1,"g":1,"b":1,"a":0.4,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.4,"y":0.5,"rad":0.14741,"ang":0,"tex_ang":0,"tex_zoom":1.59918,"r":1,"g":0.4,"b":0,"a":1,"r2":1,"g2":0.6,"b2":0,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.q24 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.a=(m.q24*0.3);"}],"waves":[{"baseVals":{"enabled":1,"samples":128,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":0.89152,"smoothing":0,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.g0 = 0;\nm.t1 = 0;\nm.q22 = 0;\nm.q24 = 0;\nm.r0 = 0;\nm.t2 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=((m.t1*bnot(m.q24))+((0.5+(0.5*Math.sin(m.time)))*m.q24)); m.t2=((m.t2*bnot(m.q24))+((0.5+(0.5*Math.sin((m.time*1.7))))*m.q24));","point_eqs_str":"m.x=m.sample; m.y=0.5; m.a=(m.q22*mod((m.q27+1),2)); m.a=(div((m.q24*mod((m.q27+1),2)),2)+0.0); m.r=m.t1; m.b=m.t2; m.g=div(((2-m.r0)-m.g0),2);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":0.89152,"smoothing":0,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.xang = 0;\nm.fov = 0;\nm.tic = 0;\nm.sam = 0;\nm.yang = 0;\nm.q1 = 0;\nm.my = 0;\nm.tin = 0;\nm.oz = 0;\nm.sa = 0;\nm.amod = 0;\nm.q4 = 0;\nm.med = 0;\nm.mz = 0;\nm.vr = 0;\nm.oy = 0;\nm.pib = 0;\nm.mod = 0;\nm.ra = 0;\nm.mx = 0;\nm.sp = 0;\nm.q2 = 0;\nm.zang = 0;\nm.q3 = 0;\nm.rb = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = ['tin'];","frame_eqs_str":"","point_eqs_str":"m.ra=0.8; m.rb=0.5; m.pib=6.28318530718; m.tic=Math.min((m.time-m.tin), 0.1); m.tin=((equal(m.sample, 0)!=0)?(m.time):(m.tin)); m.mod=(1.5+(0.5*Math.sin((m.time*0.15)))); m.med=(1.5+(0.5*Math.sin((m.time*0.134)))); m.med=5; m.amod=3; m.vr=(rand(10001)*0.0001); m.rb=(m.rb+((rand(10001)*0.0001)*0.1)); m.a=m.vr; m.sa=((m.vr*m.pib)*0.5); m.sp=((m.sa*m.mod)+(m.q1*1.3)); m.sam=((m.sa*m.med)-(m.q1*0.219)); m.ox=(m.ra*Math.sin((m.sam*m.pib))); m.oy=(m.ra*Math.cos((m.sam*m.pib))); m.ox=(m.ox+((m.rb*-Math.cos(m.sp))*Math.sin((m.sam*m.pib)))); m.oz=(m.rb*-Math.sin(m.sp)); m.oy=(m.oy+((m.rb*-Math.cos(m.sp))*Math.cos((m.sam*m.pib)))); m.xang=(m.time*0.132); m.xang=m.q2; m.yang=(m.time*0.153); m.yang=m.q3; m.zang=(m.time*0.110); m.zang=m.q4; m.fov=(0.6+(0.2*Math.sin(m.time))); m.fov=0.5; m.mx=((m.ox*Math.cos(m.zang))-(m.oy*Math.sin(m.zang))); m.my=((m.ox*Math.sin(m.zang))+(m.oy*Math.cos(m.zang))); m.ox=m.mx; m.oy=m.my; m.mx=((m.ox*Math.cos(m.yang))+(m.oz*Math.sin(m.yang))); m.mz=((-m.ox*Math.sin(m.yang))+(m.oz*Math.cos(m.yang))); m.ox=m.mx; m.oz=m.mz; m.my=((m.oy*Math.cos(m.xang))-(m.oz*Math.sin(m.xang))); m.mz=((m.oy*Math.sin(m.xang))+(m.oz*Math.cos(m.xang))); m.oy=m.my; m.oz=m.mz; m.oz=(m.oz-2); m.x=(div((m.ox*m.fov),m.oz)+0.5); m.x=(((m.x-0.5)*0.75)+0.5); m.y=(div((m.oy*m.fov),m.oz)+0.5);"}],"init_eqs_str":"m.index2 = 0;\nm.speed_ = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.movz = 0;\nm.trel = 0;\nm.q9 = 0;\nm.rott = 0;\nm.spg = 0;\nm.vol__ = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.vx = 0;\nm.dec_slow = 0;\nm.vy = 0;\nm.vz = 0;\nm.q4 = 0;\nm.dir = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.beat = 0;\nm.q17 = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.speed = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.ang0 = 0;\nm.speed_=1;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.96, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),12); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q24=m.is_beat; m.vol=div(((m.bass_att+m.mid_att)+m.treb_att),2); m.vol_=((m.dec_med*m.vol_)+((1-m.dec_med)*m.vol)); m.vol__=((m.dec_med*m.vol__)+((1-m.dec_med)*m.vol_)); m.q27=(m.index+1); m.q28=(m.index2+2); m.k1=(m.is_beat*equal(mod(m.index,4), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trig=(m.q24*bnot(mod(m.index,8))); m.vx=((m.vx*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.vy=((m.vy*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.vz=((m.vz*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.speed=Math.min(((m.vol_-m.vol__)+0.5), 1); m.speed=Math.max(m.speed, -0.5); m.speed_=((bnot(m.trig)*m.speed_)+(m.trig*m.speed)); m.spg=((m.dec_med*m.spg)+((1-m.dec_med)*m.speed_)); m.movz=(m.movz+(div(1,m.fps)*(m.speed_+div((0*m.vol_),6)))); m.q9=m.movz; m.q12=(Math.min(m.q22, 6)*2); m.q13=(2*Math.sin((div(m.movz,3)-div(m.time,11)))); m.trig=(bnot(mod(m.index,4))*m.q24); m.dir=((bnot(m.trig)*m.dir)+(m.trig*(rand(10)-5))); m.trel=(m.trel+(div(0.1,m.fps)*m.dir)); m.q5=Math.cos((m.trel-m.movz)); m.q6=Math.sin((div(m.trel,2)-m.movz)); m.q7=-m.q6; m.q8=m.q5; m.ang0=((m.ang0*m.dec_med)+(m.vz*(1-m.dec_med))); m.q17=(m.ang0*2); m.q30=(0.2*Math.sin(div(m.time,8))); m.q31=(0.5+(0.5*Math.sin(div(m.time,3.3)))); m.zoom=1; m.rot=0.0; m.dx=0.00; m.monitor=m.q28;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec3 xlat_mutablemus;\nshader_body\n{\n  xlat_mutablemus = mus;\n  vec2 d_1;\n  vec2 uv6_2;\n  vec2 uv1_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  uv1_3 = tmpvar_4;\n  uv6_2 = tmpvar_4;\n  float x_5;\n  x_5 = (abs(tmpvar_4.x) - abs(tmpvar_4.y));\n  float tmpvar_6;\n  tmpvar_6 = (12.0 * sqrt((x_5 * x_5)));\n  vec2 tmpvar_7;\n  tmpvar_7 = normalize(tmpvar_4);\n  d_1 = tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (float(mod (q28, 2.0)));\n  if ((tmpvar_8 == 0.0)) {\n    d_1 = ((q1 * tmpvar_7) - (q2 / tmpvar_7));\n  };\n  uv1_3 = (tmpvar_4 + ((-0.06 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * normalize(tmpvar_4)));\n  uv1_3 = (uv1_3 - (clamp (\n    ((sin(tmpvar_6) / cos(tmpvar_6)) * d_1)\n  , vec2(-4.0, -4.0), vec2(4.0, 4.0)) / 60.0));\n  uv6_2 = (0.4 * cos((\n    (uv1_3 * 2.0)\n   * q28)));\n  xlat_mutablemus = (clamp (vec3((0.0006 / \n    (sqrt(dot (uv6_2, uv6_2)) - (0.002 * (q27 + (8.0 * q28))))\n  )), 0.0, 1.0) * q31);\n  xlat_mutablemus = (xlat_mutablemus * (1.0 + roam_cos).xyz);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((0.4 * (\n    ((texture (sampler_main, ((uv1_3 * \n      (0.8 + (0.2 * tmpvar_6))\n    ) + 0.5)).xyz + xlat_mutablemus) * 0.95)\n   - 0.025)) + (0.6 * texture (sampler_main, uv_orig)).xyz);\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret2;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablerss;\nvec2 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutableneu = neu;\n  xlat_mutableret2 = ret2;\n  xlat_mutablers0 = rs0;\n  xlat_mutablerss = rss;\n  xlat_mutableuv2 = uv2;\n  vec2 uv_1;\n  vec2 ofs_2;\n  vec3 ret1_3;\n  vec2 uv5_4;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q5;\n  tmpvar_5.y = q6;\n  uv_1 = (uv_1 + (tmpvar_5 / 4.0));\n  uv5_4 = uv_1;\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)] = _qb.xy;\n  tmpvar_6[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_6);\n  float tmpvar_7;\n  float tmpvar_8;\n  tmpvar_8 = (min (abs(\n    (uv5_4.y / uv5_4.x)\n  ), 1.0) / max (abs(\n    (uv5_4.y / uv5_4.x)\n  ), 1.0));\n  float tmpvar_9;\n  tmpvar_9 = (tmpvar_8 * tmpvar_8);\n  tmpvar_9 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n     * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n   * tmpvar_9) + 0.9999793) * tmpvar_8);\n  tmpvar_9 = (tmpvar_9 + (float(\n    (abs((uv5_4.y / uv5_4.x)) > 1.0)\n  ) * (\n    (tmpvar_9 * -2.0)\n   + 1.570796)));\n  tmpvar_7 = (tmpvar_9 * sign((uv5_4.y / uv5_4.x)));\n  if ((abs(uv5_4.x) > (1e-08 * abs(uv5_4.y)))) {\n    if ((uv5_4.x < 0.0)) {\n      if ((uv5_4.y >= 0.0)) {\n        tmpvar_7 += 3.141593;\n      } else {\n        tmpvar_7 = (tmpvar_7 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_7 = (sign(uv5_4.y) * 1.570796);\n  };\n  xlat_mutablers0.x = (((tmpvar_7 / 3.1416) * 6.0) * q28);\n  float tmpvar_10;\n  tmpvar_10 = (1.5 / sqrt(dot (uv_1, uv_1)));\n  xlat_mutablers0.y = tmpvar_10;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (xlat_mutablers0.x + (q9 * 4.0));\n  tmpvar_11.y = (tmpvar_10 + ((q9 * q28) * 4.0));\n  xlat_mutablerss = (tmpvar_11 / 12.0);\n  vec2 tmpvar_12;\n  tmpvar_12.x = q5;\n  tmpvar_12.y = q6;\n  ofs_2 = (0.1 * tmpvar_12.yx);\n  float tmpvar_13;\n  float tmpvar_14;\n  tmpvar_14 = -(q9);\n  tmpvar_13 = fract(tmpvar_14);\n  mat2 tmpvar_15;\n  tmpvar_15[uint(0)].x = 1.0;\n  tmpvar_15[uint(0)].y = -0.0;\n  tmpvar_15[1u].x = 0.0;\n  tmpvar_15[1u].y = 1.0;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_13)\n   * tmpvar_15)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * (1.0 - \n    (tmpvar_13 * tmpvar_13)\n  )));\n  float tmpvar_16;\n  tmpvar_16 = fract((tmpvar_14 + 0.3333333));\n  mat2 tmpvar_17;\n  tmpvar_17[uint(0)].x = -0.4990803;\n  tmpvar_17[uint(0)].y = -0.8665558;\n  tmpvar_17[1u].x = 0.8665558;\n  tmpvar_17[1u].y = -0.4990803;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_16)\n   * tmpvar_17)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_16 * tmpvar_16)\n  )));\n  float tmpvar_18;\n  tmpvar_18 = fract((tmpvar_14 + 0.6666667));\n  mat2 tmpvar_19;\n  tmpvar_19[uint(0)].x = -0.5018377;\n  tmpvar_19[uint(0)].y = 0.8649619;\n  tmpvar_19[1u].x = -0.8649619;\n  tmpvar_19[1u].y = -0.5018377;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_18)\n   * tmpvar_19)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_18 * tmpvar_18)\n  )));\n  float tmpvar_20;\n  tmpvar_20 = fract((tmpvar_14 + 1.0));\n  mat2 tmpvar_21;\n  tmpvar_21[uint(0)].x = 0.9999949;\n  tmpvar_21[uint(0)].y = 0.003185092;\n  tmpvar_21[1u].x = -0.003185092;\n  tmpvar_21[1u].y = 0.9999949;\n  xlat_mutableuv2 = ((uv_1 * (\n    (q13 * tmpvar_20)\n   * tmpvar_21)) * aspect.yx);\n  xlat_mutableneu = (3.0 * texture (sampler_main, fract((\n    (xlat_mutableuv2 + 0.5)\n   + ofs_2)))).xyz;\n  ret1_3 = max (ret1_3, (xlat_mutableneu * (1.0 - \n    (tmpvar_20 * tmpvar_20)\n  )));\n  vec2 tmpvar_22;\n  tmpvar_22.x = (ret1_3.x + ret1_3.z);\n  tmpvar_22.y = (ret1_3.x - ret1_3.y);\n  xlat_mutableret2 = (((\n    (texture (sampler_blur1, fract((xlat_mutablerss + (tmpvar_22 / 2.0)))).xyz * scale1)\n   + bias1) / tmpvar_10) * 12.0);\n  vec4 tmpvar_23;\n  tmpvar_23.w = 1.0;\n  tmpvar_23.xyz = ((ret1_3 + (\n    ((bass_att * 0.004) / sqrt(dot (uv_1, uv_1)))\n   * roam_sin).xyz) + (sqrt(xlat_mutableret2.zxy) * clamp (\n    (1.0 - (ret1_3 * 4.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_23.xyz;\n}\n\n"}