{"baseVals":{"rating":4,"gammaadj":1.7,"decay":1,"echo_zoom":1,"echo_orient":1,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":100,"wave_scale":1.311,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"fshader":1,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"textured":1,"rad":0.54279,"tex_ang":4.39823,"tex_zoom":0.90528,"g":1,"b":1,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.sg3 = 0;\nm.sdx_r = 0;\nm.shpt = 0;\nm.sg2 = 0;\nm.sg1 = 0;\nm.sdy_r = 0;\n\n\t\t\tm.rkeys = ['shpt','sdx_r','sdy_r','sg3'];","frame_eqs_str":"m.shpt=((above(m.bass_att, m.shpt)*2)+((1-above(m.bass_att, m.shpt))*(((m.shpt-1.3)*0.96)+1.3))); m.sdx_r=(((equal(m.shpt, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.shpt, 2))*m.sdx_r)); m.sdy_r=(((equal(m.shpt, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.shpt, 2))*m.sdy_r)); m.sg1=Math.abs(Math.sin(m.time)); m.sg2=(((12*m.sdx_r)*above(m.sg1, 0.5))+((12*m.sdy_r)*below(m.sg1, 0.5))); m.sg3=((equal(m.shpt, 2)!=0)?(m.sg2):(m.sg3)); m.ang=((m.ang+(6*m.time))+2); m.rad=(m.rad+m.sg3);"},{"baseVals":{"enabled":1,"sides":100,"thickoutline":1,"rad":0.20068,"tex_ang":4.39823,"tex_zoom":1.48886,"g2":0,"border_a":0},"init_eqs_str":"m.sg3 = 0;\nm.sdx_r = 0;\nm.shpt = 0;\nm.sg2 = 0;\nm.sg1 = 0;\nm.sdy_r = 0;\n\n\t\t\tm.rkeys = ['sg3','sdx_r','shpt','sdy_r'];","frame_eqs_str":"m.shpt=((above(m.bass_att, m.shpt)*2)+((1-above(m.bass_att, m.shpt))*(((m.shpt-1.3)*0.96)+1.3))); m.sdx_r=(((equal(m.shpt, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.shpt, 2))*m.sdx_r)); m.sdy_r=(((equal(m.shpt, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.shpt, 2))*m.sdy_r)); m.sg1=Math.abs(Math.sin(m.time)); m.sg2=(((12*m.sdx_r)*above(m.sg1, 0.5))+((12*m.sdy_r)*below(m.sg1, 0.5))); m.sg3=((equal(m.shpt, 2)!=0)?(m.sg2):(m.sg3)); m.ang=((m.ang+(6*m.time))+2); m.x=(m.x+(0.32*Math.sin((3*m.time)))); m.y=(m.y+(0.32*Math.cos((3*m.time))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"scaling":2.15546,"smoothing":0},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=m.q1; m.g=m.q2; m.b=m.q3;","point_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.mq1 = 0;\nm.q25 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.thresh = 0;\nm.mq21 = 0;\nm.mq24 = 0;\nm.dy_r = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.mq23 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.mq30 = 0;\nm.dx_r = 0;\nm.q26 = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.mq22 = 0;\nm.mq26 = 0;\nm.q27 = 0;\nm.q28 = 0;\nm.q30 = 0;","frame_eqs_str":"m.chng=Math.sin((m.time*0.5)); m.cthr=0.99; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq29)); m.mq30=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq30)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q30=m.mq30; m.monitor=m.mq1; m.wave_r=(0.5+(0.5*Math.sin((1.6*m.time)))); m.wave_g=(0.5+(0.5*Math.sin((4.1*m.time)))); m.wave_b=(-1+(((1-m.wave_r)+1)-m.wave_g)); m.warp=0;\n\t\tm.rkeys = ['thresh','dx_r','dy_r','rot'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.zoom=((0.1*m.rad)+1); m.zoom=(m.zoom-((6*m.dx_r)*Math.max(((1.2*m.bass_att)*Math.tan((4*m.bass))), ((m.dy_r*Math.cos((12*m.ang)))*m.bass_att)))); m.rot=(m.rot+((6*m.dy_r)*Math.max(((1.2*m.treb_att)*Math.tan((4*m.mid))), ((m.dx_r*Math.sin((12*m.rad)))*m.mid_att))));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = clamp (((texture (sampler_pw_main, uv_orig).xyz * vec3(1.0, 1.0, 0.97)) - vec3(0.0, 0.0, 0.001)), 0.0, 1.0);\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_pw_main, (uv_orig + ((\n    (texture (sampler_noise_hq, fract(((\n      ((uv_orig * texsize.xy) * texsize_noise_lq.zw)\n     + rand_frame.xy) * 8.0))).xy - 0.5)\n   * 6.0) * texsize.zw)));\n  vec3 tmpvar_3;\n  tmpvar_3 = tmpvar_2.xyz;\n  float tmpvar_4;\n  vec2 x_5;\n  x_5 = (ret_1.xy - uv_orig);\n  tmpvar_4 = sqrt(dot (x_5, x_5));\n  float tmpvar_6;\n  vec2 x_7;\n  x_7 = (tmpvar_2.xy - uv_orig);\n  tmpvar_6 = sqrt(dot (x_7, x_7));\n  if ((tmpvar_4 > tmpvar_6)) {\n    ret_1.xy = tmpvar_3.xy;\n    ret_1.z = tmpvar_3.z;\n  };\n  ret_1.xy = (ret_1.xy * pow (ret_1.z, 0.01));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * roam_cos.y)) && (ret_1.x <= (q24 * roam_sin.x)))) {\n    ret_1.y = (ret_1.y + (tmpvar_8.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * roam_sin.x)) && (ret_1.y <= (q25 * roam_cos.x)))) {\n    ret_1.z = (ret_1.z + (tmpvar_8.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * roam_cos.x)) && (ret_1.z <= (q26 * roam_sin.y)))) {\n    ret_1.x = (ret_1.x + (tmpvar_8.z * 0.5));\n  };\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_1;\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 4.0));\n  ret_2 = -(ret_2);\n  vec3 tmpvar_3;\n  tmpvar_3 = pow (ret_2, vec3(0.5, 0.5, 0.7));\n  ret_2 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_3.x > (q26 * roam_cos.y)) && (tmpvar_3.x <= (q23 * roam_sin.x)))) {\n    ret_2.z = (tmpvar_3.z + (tmpvar_4.x * 0.5));\n  };\n  if (((tmpvar_3.y > (q25 * roam_sin.x)) && (tmpvar_3.y <= (q22 * roam_cos.x)))) {\n    ret_2.x = (tmpvar_3.x + (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q24 * roam_cos.x)) && (ret_2.z <= (q21 * roam_sin.y)))) {\n    ret_2.y = (tmpvar_3.y + (tmpvar_4.z * 0.5));\n  };\n  ret_2 = ((ret_2 - 0.1) * 1.1);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n}\n\n"}