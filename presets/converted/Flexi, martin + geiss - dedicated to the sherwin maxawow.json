{"baseVals":{"rating":3,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.cx1 = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.cy1 = 0;\nm.x1 = 0;\nm.x3 = 0;\nm.dir = 0;\nm.r = 0;\nm.x2 = 0;\nm.y2 = 0;","frame_eqs_str":"m.ib_r=((Math.sin(((m.time*1.25)*4))*0.3)+0.7); m.ib_g=((Math.sin((m.time*4))*0.3)+0.3); m.ib_b=((Math.sin((div(m.time,3)*4))*0.5)+0.5); m.wave_r=(1-m.ib_r); m.wave_g=(1-m.ib_g); m.wave_b=(1-m.ib_b); m.wave_x=(0.5+(Math.sin((m.time*3))*0.3)); m.wave_y=(0.5+(Math.cos((m.time*2.187))*0.3));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.r=div(m.bass,4); m.cx1=(0.5+(Math.sin((m.time*0.618))*0.2)); m.cy1=(0.5+(Math.cos((m.time*1.618))*0.2)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((m.bass*((m.r*m.r)-(m.d*m.d)))*0.3); m.x1=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y1=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((m.time*2.618))*0.3)); m.cy1=(0.5+(Math.cos((m.time*3.14))*0.3)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.mid*((m.r*m.r)-(m.d*m.d)))*0.3); m.x2=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y2=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((-m.time*2.618))*0.4)); m.cy1=(0.5+(Math.cos((-m.time*1.14))*0.4)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.treb*((m.r*m.r)-(m.d*m.d)))*0.3); m.x3=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y3=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.dx=((m.x1+m.x2)+m.x3); m.dy=((m.y1+m.y2)+m.y3);","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy);\n  uv_1 = (uv + ((texture (sampler_noise_lq, tmpvar_2).xy - 0.5) * texsize.zw));\n  vec2 tmpvar_3;\n  tmpvar_3.x = bass;\n  tmpvar_3.y = treb;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, (uv_1 + (\n    (texture (sampler_main, (mix (uv_1, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.4)\n   * \n    (-0.004 + (0.04 * clamp ((tmpvar_3 - 1.0), 0.0, 1.0)))\n  ))).xyz - (0.0008 + (\n    (texture (sampler_noise_lq, tmpvar_2) - 0.5)\n   * 0.02)).xyz);\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  vec2 tmpvar_4;\n  tmpvar_4.x = (texture (sampler_main, (uv - tmpvar_2)).xyz - texture (sampler_main, (uv + tmpvar_2)).xyz).x;\n  tmpvar_4.y = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    ((uv - 0.5) * 2.0)\n  )) - tmpvar_4);\n  float tmpvar_5;\n  tmpvar_5 = clamp ((0.04 / sqrt(\n    dot (uv1_1, uv1_1)\n  )), 0.0, 1.0);\n  uv1_1 = ((0.3 * cos(\n    (uv1_1 * 12.0)\n  )) - (9.0 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (tmpvar_5 + ((texture (sampler_main, uv).xyz * 12.0) * vec3(clamp (\n    (0.04 / sqrt(dot (uv1_1, uv1_1)))\n  , 0.0, 1.0))));\n  ret = tmpvar_6.xyz;\n}\n\n"}