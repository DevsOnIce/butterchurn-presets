{"baseVals":{"rating":4,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0,"wave_mystery":0.6,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0.49,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b2x":0.6,"b3x":0.4,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":256,"x":0.26,"y":0.2,"rad":0.39317,"tex_zoom":0.9355,"g2":0,"a2":0.2,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.n = 0;\nm.w = 0;\nm.high = 0;\nm.q12 = 0;\nm.arg = 0;\nm.q13 = 0;\nm.y0 = 0;\nm.flen = 0;\nm.x0 = 0;\nm.k1 = 0;\nm.q11 = 0;\nm.z0 = 0;\nm.exc = 0;\nm.p2 = 0;\nm.p1 = 0;\nm.a0 = 0;\nm.q2 = 0;\nm.slen = 0;\nm.q14 = 0;\nm.q3 = 0;\nm.reg00 = 0;\nm.q32 = 0;\nm.rad0 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.n=m.instance; m.flen=m.reg00; m.slen=div(m.reg00,2); m.z0=10; m.y0=div(m.gmegabuf[((2000+m.n)+m.flen)],m.z0); m.x0=div(m.gmegabuf[(2000+m.n)],m.z0); m.a0=m.gmegabuf[(m.n+10000)]; m.k1=(div(m.instance,m.num_inst)-0.5); m.x=((0.5+m.x0)+(((Math.sin(((m.k1*8)*Math.sin((m.q12*0.07))))*Math.sin((m.q11*0.13)))*m.q3)*0.7)); m.y=(0.5+(m.q32*(m.y0+(((Math.sin(((m.k1*8)*Math.sin((m.q14*0.1))))*Math.sin((m.q13*0.2)))*m.q3)*0.7)))); m.arg=div(m.q2,8); m.high=Math.exp((-500*pow(((m.arg+0.5)-div(m.instance,m.num_inst)), 2))); m.high+=Math.exp((-500*pow(((-m.arg+0.5)-div(m.instance,m.num_inst)), 2))); m.exc=sqrt((pow((m.x-0.5), 2)+pow((m.y-0.5), 2))); m.rad0=((above(m.z0, 0)*Math.min(0.1, div(m.a0,60)))+0.005); m.rad0=((m.rad0*(1+(2*m.exc)))*(1+m.high)); m.p1=(0.5+div(Math.sin(m.q12),2)); m.p2=(0.5+div(Math.sin((m.q13*1.4)),2)); m.exc=(pow((m.x-m.p1), 2)+pow((m.y-m.p2), 2)); m.rad=Math.min((m.rad0*(1+div((0.004*m.q3),Math.abs(m.exc)))), 1); m.a=Math.min(((m.a0*8)+0.4), 1); m.k1=((div(m.instance,m.num_inst)*5)+m.high); m.w=(1-Math.exp((div(-m.treb_att,2)-0.5))); m.g=(m.w+((1-m.w)*Math.sin(m.k1))); m.r=(m.w+((1-m.w)*Math.sin((m.k1-div(6.28,3))))); m.b=(m.w+((1-m.w)*Math.sin((m.k1-div((6.28*2),3))))); m.a2=div(m.a,4); m.g2=(m.g*0); m.b2=(m.b*0); m.r2=(m.r*0);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"sep":120,"spectrum":1,"additive":1,"scaling":7.52386,"smoothing":0,"r":0,"a":0.7},"init_eqs_str":"m.n = 0;\nm.q1 = 0;\nm.flen = 0;\nm.chg = 0;\nm.vol = 0;\nm.q2 = 0;\nm.reg00 = 0;\nm.dec = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.flen=m.reg00; m.n=Math.floor((m.sample*m.flen)); m.vol=((m.value1+m.value2)*(1+div(0.1,(m.sample+0.03)))); m.chg=Math.min(Math.max((m.vol-m.gmegabuf[m.n]), -1), 1); m.dec=((((m.chg>0)?1:0)!=0)?((1-(m.chg*0.3))):((1+(m.chg*0.2)))); m.chg=(m.q1-m.q2); m.dec=(0.94-(Math.abs(m.chg)*((((m.chg>0)?1:0)!=0)?(0.2):(0.1)))); m.dec=Math.min(Math.max(m.dec, 0), 1); m.gmegabuf[m.n]=((m.gmegabuf[m.n]*m.dec)+(m.vol*(1-m.dec))); m.dec=div(m.q2,4); m.dec=Math.max(Math.min(m.dec, 1), 0.1); m.gmegabuf[m.n]=((m.gmegabuf[m.n]*m.dec)+(m.gmegabuf[(m.n+((m.q2<0.8)?1:0))]*(1-m.dec))); m.gmegabuf[(m.n+10000)]=((m.gmegabuf[(m.n+10000)]*0.2)+div((0.8*m.vol),3)); m.a=0.0; m.x=m.sample; m.y=(0.2+(m.gmegabuf[(m.n+0)]*0.23));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.n = 0;\nm.sw2 = 0;\nm.in1 = 0;\nm.q12 = 0;\nm.q13 = 0;\nm.sw3 = 0;\nm.dif = 0;\nm.q1 = 0;\nm.lev3 = 0;\nm.flen = 0;\nm.lev4 = 0;\nm.in2 = 0;\nm.lev1 = 0;\nm.k1 = 0;\nm.q11 = 0;\nm.ofs = 0;\nm.dec_m = 0;\nm.i = 0;\nm.k = 0;\nm.m2 = 0;\nm.vol = 0;\nm.q2 = 0;\nm.slen = 0;\nm.m1 = 0;\nm.q14 = 0;\nm.sw1 = 0;\nm.lev2 = 0;\nm.q3 = 0;\nm.reg00 = 0;\nm.vol_ = 0;\nm.dec = 0;\nm.q32 = 0;\nm.sw4 = 0;\nm.n=0; for(var mdparser_idx1=0;mdparser_idx1<50000;mdparser_idx1++){m.gmegabuf[m.n]=0; m.megabuf[m.n]=0; m.n=(m.n+1);} m.sw1=rand(8); m.sw2=rand(8); m.sw3=rand(8); m.sw4=rand(8);","frame_eqs_str":"m.flen=512; m.reg00=m.flen; m.slen=div(m.flen,2); m.dec_m=pow(0.94, div(30,m.fps)); m.n=0; m.vol=0; for(var mdparser_idx2=0;mdparser_idx2<m.slen;mdparser_idx2++){m.vol=(m.vol+div(pow(m.gmegabuf[m.n], 2),m.flen)); m.n=(m.n+1);} m.vol=div(sqrt(m.vol),2); m.vol_=((m.vol_*m.dec_m)+((1-m.dec_m)*m.vol)); m.lev1=((m.lev1*m.dec_m)+((1-m.dec_m)*m.gmegabuf[1])); m.lev2=((m.lev2*m.dec_m)+((1-m.dec_m)*m.gmegabuf[20])); m.lev3=((m.lev3*m.dec_m)+((1-m.dec_m)*m.gmegabuf[50])); m.lev4=((m.lev4*m.dec_m)+((1-m.dec_m)*m.gmegabuf[100])); m.sw1=(m.sw1+div((((m.lev1-m.gmegabuf[1])>0)?1:0),m.fps)); m.sw2=(m.sw2+div((((m.lev2-m.gmegabuf[20])>0)?1:0),m.fps)); m.sw3=(m.sw3+div((((m.lev3-m.gmegabuf[50])>0)?1:0),m.fps)); m.sw4=(m.sw4+div((((m.lev4-m.gmegabuf[100])>0)?1:0),m.fps)); m.dif=(((1+Math.sin(div(m.sw3,4)))*16)+2); m.ofs=(Math.sin(div(m.sw2,3))*8); m.n=0; m.k1=(m.frame*0); for(var mdparser_idx3=0;mdparser_idx3<m.slen;mdparser_idx3++){m.m1=mod(m.n,m.slen); m.m2=mod((m.n+m.ofs),m.slen); m.k=mod((m.m1+m.dif),m.slen); m.i=mod(((m.slen+m.m2)-m.dif),m.slen); m.in1=(div((m.gmegabuf[m.m1]-m.gmegabuf[m.k]),pow((m.vol_+0.03), 0.8))*1.2); m.in2=(div((m.gmegabuf[m.m2]-m.gmegabuf[m.i]),pow((m.vol_+0.03), 0.8))*1.2); m.dec=(((((pow(m.gmegabuf[(2000+m.n)], 2)+pow(m.gmegabuf[((2000+m.flen)+m.n)], 2))>((m.in1*m.in1)+(m.in2*m.in2)))?1:0)!=0)?(0.8):(0.94)); m.dec=pow(m.dec, div(30,m.fps)); m.gmegabuf[(2000+m.n)]=((m.gmegabuf[(2000+m.n)]*m.dec)+((1-m.dec)*m.in1)); m.gmegabuf[((2000+m.flen)+m.n)]=((m.gmegabuf[((2000+m.flen)+m.n)]*m.dec)+((1-m.dec)*m.in2)); m.n=(m.n+1);} m.q1=div(((m.bass+m.treb)+m.mid),3); m.q2=div(((m.bass_att+m.treb_att)+m.mid_att),3); m.q3=m.vol_; m.q11=m.sw1; m.q12=m.sw2; m.q13=m.sw3; m.q14=m.sw4; m.rot=0; m.zoom=0.98; m.warp=0.3; m.rot=0; m.q32=m.aspecty; m.monitor=m.dif;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * clamp (\n    (q1 - 0.8)\n  , 0.0, 1.0)) * 0.92);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur2, uv).xyz * scale2) + bias2));\n  ret_1 = (ret_1 + ((0.8 * \n    (hue_shader - 0.8)\n  ) * (1.0 - uv.y)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}