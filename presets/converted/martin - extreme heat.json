{"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.474,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.8,"wave_g":0.49,"ob_size":0,"ob_a":0.3,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1x":0.8,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":7,"additive":1,"num_inst":1024,"rad":0.04896,"tex_ang":1.00531,"tex_zoom":1.53117,"r":0,"g":1,"b":1,"a":0,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"m.max_age = 0;\nm.n = 0;\nm.y0 = 0;\nm.x0 = 0;\nm.pow = 0;\nm.z0 = 0;\nm.abs = 0;\nm.reg00 = 0;\nm.rad0 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.max_age=m.reg00; m.n=(m.instance*12); m.x0=m.gmegabuf[m.n]; m.y0=m.gmegabuf[(m.n+1)]; m.z0=m.gmegabuf[(m.n+2)]; ((((m.z0<-100)?1:0)!=0)?((function(){m.rad=0; return m.gmegabuf[(m.n+8)]=m.max_age;})()):((function(){m.rad0=((div(pow((1-div(m.gmegabuf[(m.n+8)],m.max_age)), 0.2),m.z0)*m.gmegabuf[(m.n+7)])+0.01); m.rad=(Math.abs(m.rad0)*0.032); m.x=(0.5+div(m.x0,m.z0)); return m.y=(0.5+div(m.y0,m.z0));})())); m.a=1; m.a2=0.2; m.g=0.8; m.g2=0.0; m.b=((((rand(10)>3)?1:0)*0.2)+(0.2*((m.z0<0)?1:0))); m.b2=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":160,"sep":20,"usedots":1,"additive":1,"scaling":7.858,"smoothing":0.1,"r":0.2,"g":0.3,"a":0.6},"init_eqs_str":"m.q32 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.x=div(rand(100),100); m.y=((0.5-div((1-0.7),m.q32))-(0.15*(div(rand(100),100)-0.5))); m.a=0.15; m.r=0; m.b=1; m.g=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.max_age = 0;\nm.ind2 = 0;\nm.n = 0;\nm.free = 0;\nm.min = 0;\nm.high = 0;\nm.index = 0;\nm.tht = 0;\nm.v00 = 0;\nm.yobf = 0;\nm.dt = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.ran1_ = 0;\nm.rand = 0;\nm.new = 0;\nm.push = 0;\nm.band = 0;\nm.new1 = 0;\nm.is_beat = 0;\nm.q24 = 0;\nm.vol_alt = 0;\nm.dec_slow = 0;\nm.ran2 = 0;\nm.ind1 = 0;\nm.sin = 0;\nm.q10 = 0;\nm.v0 = 0;\nm.med = 0;\nm.cos = 0;\nm.beat = 0;\nm.vol = 0;\nm.peak = 0;\nm.dec_fast = 0;\nm.q27 = 0;\nm.bass1 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.dec = 0;\nm.m = 0;\nm.ran1 = 0;\nm.q32 = 0;\nm.phi = 0;\nm.air = 0;\nm.max_age=4.5; m.reg00=m.max_age; m.n=0; for(var mdparser_idx1=0;mdparser_idx1<(12*1024);mdparser_idx1++){m.gmegabuf[m.n]=((m.max_age-1)+rand(2)); m.n+=1;} m.q9=((rand(25)-10)*2); m.q3=div(rand(100),100); m.q4=div(rand(100),100);","frame_eqs_str":"m.dec_fast=(1-div((0.22*40),m.fps)); m.dec_med=(1-div((0.15*40),m.fps)); m.dec_slow=(1-div((0.04*40),m.fps)); m.vol=div(((m.bass+m.med)+m.treb),3); m.vol_=((m.vol_*m.dec_slow)+((1-m.dec_slow)*m.vol)); m.beat=m.vol; m.is_beat=(above(m.beat, (1+(m.peak*4)))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat!=0)?(m.time):(m.t0)); m.peak=((m.is_beat!=0)?(m.beat):((m.peak*m.dec_med))); m.index=mod((m.index+m.is_beat),1024); m.ind1=((m.ind1*m.dec_med)+((1-m.dec_fast)*m.index)); m.ind2=((m.ind2*m.dec_med)+((1-m.dec_fast)*m.ind1)); m.q27=m.ind2; m.q24=m.is_beat; m.ran1=((m.is_beat!=0)?((div(rand(100),100)-0.5)):(m.ran1)); m.ran2=((m.is_beat!=0)?((div(rand(100),50)+1)):(m.ran2)); m.ran1_=((m.dec_med*m.ran1_)+((1-m.dec_med)*m.ran1)); m.high=((m.ran2>2.9)?1:0); m.q5=m.ran1_; m.n=0; m.push=(Math.max(0, (m.vol-m.vol_alt))*m.vol_); m.air=(0.1*m.dt); m.dt=div(1,m.fps); m.v00=(pow(m.push, 0.25)+0.4); m.free=512; m.new=0; m.y0=-0.68; m.yobf=(m.y0+0.1); for(var mdparser_idx2=0;mdparser_idx2<512;mdparser_idx2++){m.megabuf[m.n]=m.gmegabuf[m.n]; m.megabuf[(m.n+1)]=m.gmegabuf[(m.n+1)]; m.megabuf[(m.n+2)]=m.gmegabuf[(m.n+2)]; ((((m.gmegabuf[(m.n+8)]>m.max_age)?1:0)!=0)?(((band(((m.push>=((m.dt*10)*bnot(m.high)))?1:0), ((m.new<200)?1:0))!=0)?((function(){m.free-=1; m.new+=1; m.tht=(div(rand(100),500)*(1+(m.high*1.5))); m.phi=rand(12); m.v0=(m.v00*(1+div(rand(10),40))); m.gmegabuf[m.n]=(m.ran1*1.7); m.gmegabuf[(m.n+1)]=(m.y0+(2.2*m.high)); m.gmegabuf[(m.n+2)]=2; m.gmegabuf[(m.n+3)]=((m.v0*Math.sin(m.tht))*Math.cos(m.phi)); m.gmegabuf[(m.n+4)]=((m.v0*Math.cos((4*m.tht)))*(1-(m.high*1.5))); m.gmegabuf[(m.n+5)]=((((m.v0*Math.sin(m.tht))*Math.sin(m.phi))*1.5)*m.vol); m.gmegabuf[(m.n+7)]=0; return m.gmegabuf[(m.n+8)]=div(rand(100),100);})()):(0))):((function(){m.free-=1; m.gmegabuf[m.n]+=(m.gmegabuf[(m.n+3)]*m.dt); m.gmegabuf[(m.n+1)]+=(m.gmegabuf[(m.n+4)]*m.dt); m.gmegabuf[(m.n+2)]+=(m.gmegabuf[(m.n+5)]*m.dt); m.gmegabuf[(m.n+3)]*=(1-m.air); m.gmegabuf[(m.n+4)]*=(1-m.air); m.gmegabuf[(m.n+4)]-=(0.8*m.dt); m.gmegabuf[(m.n+5)]*=(1-m.air); m.gmegabuf[(m.n+7)]=(((m.gmegabuf[(m.n+1)]>m.yobf)?1:0)*Math.min(1, (18*(m.gmegabuf[(m.n+1)]-m.yobf)))); ((band(((m.gmegabuf[(m.n+1)]<m.yobf)?1:0), ((m.gmegabuf[(m.n+4)]<0)?1:0))!=0)?(m.gmegabuf[8]=m.max_age):(0)); return m.gmegabuf[(m.n+8)]+=m.dt;})())); m.n+=12;} m.n=0; for(var mdparser_idx3=0;mdparser_idx3<512;mdparser_idx3++){m.m=((511*12)+m.n); m.gmegabuf[m.m]=div((m.gmegabuf[m.n]+m.megabuf[m.n]),2); m.gmegabuf[(m.m+1)]=div((m.gmegabuf[(m.n+1)]+m.megabuf[(m.n+1)]),2); m.gmegabuf[(m.m+2)]=div((m.gmegabuf[(m.n+2)]+m.megabuf[(m.n+2)]),2); m.gmegabuf[(m.m+7)]=m.gmegabuf[(m.n+7)]; m.gmegabuf[(m.m+8)]=m.gmegabuf[(m.n+8)]; m.n+=12;} m.dec=((((m.bass>m.bass1)?1:0)!=0)?(0.5):(0.9)); m.bass1=((m.bass1*m.dec)+(m.bass*(1-m.dec))); m.q1=Math.min(1, ((Math.max(0, (m.bass1-1.5))*Math.abs((m.q3-0.5)))*3)); m.q10=Math.max((m.vol_-0.1), 0.1); m.vol_alt=m.vol; m.q32=m.aspecty; m.new1=((((m.new>0)?1:0)!=0)?(m.new):(m.new1)); m.monitor=m.new1;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.dy=(-0.007*m.y); m.warp=0.0; m.rot=(div(((0.025*Math.sin(((m.q27+(m.x*7))+(m.y*0))))*0.2),(Math.abs((m.y-0.7))+0.1))*m.q10); m.zoom=(1.003+(0.2*Math.max(0, (m.y-0.7))));","warp":"vec2 ver;\nfloat xlat_mutablecloud;\nvec2 xlat_mutabledz;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablez;\nshader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = texsize.w;\n  ver = (tmpvar_2 * 2.0);\n  vec3 ret_3;\n  xlat_mutabledz.x = (2.0 * dot (vec3((texture (sampler_main, \n    (uv + tmpvar_1)\n  ).z - texture (sampler_main, \n    (uv - tmpvar_1)\n  ).z)), vec3(0.32, 0.49, 0.29)));\n  xlat_mutabledz.y = (2.0 * dot (vec3((texture (sampler_main, \n    (uv + ver)\n  ).z - texture (sampler_main, \n    (uv - ver)\n  ).z)), vec3(0.32, 0.49, 0.29)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q3;\n  tmpvar_4.y = (0.4 + (q4 * 0.4));\n  xlat_mutableuv1 = (uv_orig - tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, uv_orig);\n  xlat_mutablez = ((0.8 * (xlat_mutableuv1.y - 0.4)) - (mix (tmpvar_5.x, \n    ((texture (sampler_blur1, uv_orig).xyz * scale1) + bias1)\n  .x, 0.5) * 0.03));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (xlat_mutableuv1.x * xlat_mutablez);\n  tmpvar_6.y = xlat_mutablez;\n  vec2 tmpvar_7;\n  tmpvar_7.x = 0.0;\n  tmpvar_7.y = (-(time) * 0.014);\n  xlat_mutableuv2 = (tmpvar_6 + tmpvar_7);\n  vec2 tmpvar_8;\n  tmpvar_8.x = 0.0;\n  tmpvar_8.y = (time * 0.004);\n  vec2 uvi_9;\n  uvi_9 = ((xlat_mutableuv2 * 1.5) + tmpvar_8);\n  float zv_10;\n  zv_10 = (0.002 * time);\n  xlat_mutablecloud = (1.0 - (1.5 * abs(\n    (texture (sampler_noise_hq, ((xlat_mutableuv2 + (0.07 * \n      abs((((\n        (dot (texture (sampler_noise_hq, uvi_9), vec4(0.32, 0.49, 0.29, 0.0)) + (dot (texture (sampler_noise_hq, (\n          (uvi_9 * 2.0)\n         + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 2.0))\n       + \n        (dot (texture (sampler_noise_hq, ((uvi_9 * 4.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0)) / 4.0)\n      ) + (\n        dot (texture (sampler_noise_hq, ((uvi_9 * 8.0) + zv_10)), vec4(0.32, 0.49, 0.29, 0.0))\n       / -8.0)) - 1.0))\n    )) / 2.0)) - 0.5)\n  ))).x;\n  xlat_mutablecloud = (xlat_mutablecloud * clamp ((\n    (texture (sampler_noise_hq, (xlat_mutableuv2 * vec2(2.0, 0.5))).x + 0.5)\n   - \n    (3.0 * abs(xlat_mutableuv2.x))\n  ), 0.0, 1.0));\n  vec2 tmpvar_11;\n  tmpvar_11.x = 0.0;\n  tmpvar_11.y = ((-0.01 * time) * (0.125 * float(\n    int((8.0 * pow (xlat_mutablecloud, 4.0)))\n  )));\n  float tmpvar_12;\n  tmpvar_12 = (texture (sampler_noise_hq, (18.0 * (\n    (xlat_mutableuv2 + (0.05 * xlat_mutablecloud))\n   + tmpvar_11))) - 0.75).x;\n  xlat_mutablecloud = (xlat_mutablecloud * (1.0 + (\n    (0.2 * tmpvar_12)\n   * \n    (xlat_mutablecloud * xlat_mutablecloud)\n  )));\n  ret_3.x = ((0.3 * xlat_mutablecloud) + (0.7 * tmpvar_5.xyz)).x;\n  xlat_mutableuv1 = (uv - vec2(0.0, 0.71));\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_blur1, uv);\n  float tmpvar_14;\n  tmpvar_14 = clamp (((12.0 * \n    (((10.0 * xlat_mutableuv1.y) + ((\n      (tmpvar_13.xyz * scale1)\n     + bias1).x / 2.0)) - 1.0)\n  ) + tmpvar_12), 0.0, 1.0);\n  xlat_mutableuv1 = (uv - 0.7);\n  ret_3.z = (((\n    ((((4.0 * tmpvar_14) * (1.0 - tmpvar_14)) * clamp ((tmpvar_5.x - 0.2), 0.0, 1.0)) + texture (sampler_main, (uv + (xlat_mutabledz * 0.003))).z)\n   - \n    (0.03 * sqrt(dot (xlat_mutabledz, xlat_mutabledz)))\n  ) - (\n    pow (((tmpvar_13.xyz * scale1) + bias1).z, 8.0)\n   * 0.2)) - 0.01);\n  ret_3.y = (texture (sampler_main, mix (uv, uv_orig, vec2(0.5, 0.5))).y * (0.85 - (0.2 * \n    ((tmpvar_13.xyz * scale1) + bias1)\n  .y)));\n  ret_3.x = (ret_3.x + ((texture (sampler_noise_lq, \n    (2.0 * xlat_mutableuv2)\n  ) * 0.08) * clamp (\n    (1.0 - (3.0 * ret_3.x))\n  , 0.0, 1.0)).x);\n  vec4 tmpvar_15;\n  tmpvar_15.w = 1.0;\n  tmpvar_15.xyz = ret_3;\n  ret = tmpvar_15.xyz;\n}\n\n","comp":"float dunk;\nfloat xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nfloat xlat_mutablesmask;\nfloat xlat_mutablesmoke;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\nshader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  dunk = ((rand_preset.x * 0.3) + 0.1);\n  vec2 uv_2;\n  vec3 ret_3;\n  uv_2 = (uv + (texsize.zw / 2.0));\n  xlat_mutableuv1 = (uv_2 - vec2(0.0, 0.7));\n  xlat_mutablesmask = (((10.0 * xlat_mutableuv1.y) + (\n    ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1)\n  .x / 2.0)) - 1.0);\n  float tmpvar_4;\n  tmpvar_4 = clamp (((2.0 * xlat_mutablesmask) + 0.3), 0.0, 1.0);\n  xlat_mutablenoise = ((3.0 * (1.0 - tmpvar_4)) * texture (sampler_noise_lq, ((xlat_mutableuv1 * 1.5) + (rand_frame * 0.2).xy)).x);\n  float tmpvar_5;\n  tmpvar_5 = clamp (((12.0 * xlat_mutablesmask) + (xlat_mutablenoise / 2.0)), 0.0, 1.0);\n  xlat_mutablez = ((0.35 / xlat_mutableuv1.y) + (xlat_mutablenoise / 2.0));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers0.y = xlat_mutablez;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (xlat_mutablers0.x + (time / 4.0));\n  tmpvar_6.y = (xlat_mutablez + (time * 0.21));\n  xlat_mutablers = (tmpvar_6 * tmpvar_5);\n  float t_7;\n  t_7 = ((texture (sampler_main, uv_2).x - dunk) * (1.0 - (tmpvar_5 * \n    pow (uv_2.y, 4.0)\n  )));\n  float tmpvar_8;\n  tmpvar_8 = clamp (((1.2 * t_7) - 0.2), 0.0, 1.0);\n  t_7 = tmpvar_8;\n  vec3 tmpvar_9;\n  tmpvar_9.x = tmpvar_8;\n  tmpvar_9.y = (tmpvar_8 * tmpvar_8);\n  tmpvar_9.z = pow (tmpvar_8, 8.0);\n  vec3 tmpvar_10;\n  tmpvar_10 = clamp ((tmpvar_9 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  float t_11;\n  t_11 = ((texture (sampler_blur2, (uv_2 + 0.03)).xyz * scale2) + bias2).x;\n  float tmpvar_12;\n  tmpvar_12 = clamp (((1.2 * t_11) - 0.2), 0.0, 1.0);\n  t_11 = tmpvar_12;\n  vec3 tmpvar_13;\n  tmpvar_13.x = tmpvar_12;\n  tmpvar_13.y = (tmpvar_12 * tmpvar_12);\n  tmpvar_13.z = pow (tmpvar_12, 8.0);\n  vec3 tmpvar_14;\n  tmpvar_14 = clamp ((tmpvar_13 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = ((tmpvar_10 * (tmpvar_10 * \n    (3.0 - (2.0 * tmpvar_10))\n  )) + ((\n    (((1.0 - texture (sampler_main, uv_2).x) * (1.0 - tmpvar_5)) * abs((texture (sampler_main, (uv_2 - tmpvar_1)).x - texture (sampler_main, (uv_2 + tmpvar_1)).x)))\n   * \n    (tmpvar_14 * (tmpvar_14 * (3.0 - (2.0 * tmpvar_14))))\n  ) * q9));\n  xlat_mutablesmoke = ((texture (sampler_blur1, uv_2).xyz * scale1) + bias1).z;\n  vec2 tmpvar_15;\n  tmpvar_15.x = uv_2.x;\n  tmpvar_15.y = ((0.85 - xlat_mutableuv1.y) + ((\n    ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, ((xlat_mutablers / 4.0) - (time / 8.0)))) - 1.0)\n  .x * 0.2) * q10));\n  float t_16;\n  t_16 = ((texture (sampler_main, tmpvar_15).x + texture (sampler_main, tmpvar_15).y) - dunk);\n  float tmpvar_17;\n  tmpvar_17 = clamp (((1.2 * t_16) - 0.2), 0.0, 1.0);\n  t_16 = tmpvar_17;\n  vec3 tmpvar_18;\n  tmpvar_18.x = tmpvar_17;\n  tmpvar_18.y = (tmpvar_17 * tmpvar_17);\n  tmpvar_18.z = pow (tmpvar_17, 8.0);\n  vec3 tmpvar_19;\n  tmpvar_19 = clamp ((tmpvar_18 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = (ret_3 + ((\n    (tmpvar_19 * (tmpvar_19 * (3.0 - (2.0 * tmpvar_19))))\n   * tmpvar_5) * 0.85));\n  float tmpvar_20;\n  tmpvar_20 = ((3.6 * tmpvar_4) * (1.0 - tmpvar_4));\n  ret_3 = (ret_3 * (clamp (\n    (1.0 - (xlat_mutablesmoke * (1.0 - tmpvar_20)))\n  , 0.0, 1.0) * clamp (\n    (1.0 - (tmpvar_20 * float((rand_preset.x > 0.5))))\n  , 0.0, 1.0)));\n  vec3 tmpvar_21;\n  tmpvar_21.z = 0.0;\n  tmpvar_21.xy = (((texture (sampler_blur3, uv_2).xyz * scale3) + bias3).xy * vec2(3.0, 5.0));\n  ret_3 = (ret_3 + ((xlat_mutablesmoke * \n    dot (tmpvar_21, vec3(0.32, 0.49, 0.29))\n  ) * vec3(1.0, 0.84, 0.62)));\n  float tmpvar_22;\n  tmpvar_22 = clamp (((1.2 * \n    clamp (texture (sampler_main, uv_2).y, 0.0, 1.0)\n  ) - 0.2), 0.0, 1.0);\n  vec3 tmpvar_23;\n  tmpvar_23.x = tmpvar_22;\n  tmpvar_23.y = (tmpvar_22 * tmpvar_22);\n  tmpvar_23.z = pow (tmpvar_22, 8.0);\n  vec3 tmpvar_24;\n  tmpvar_24 = clamp ((tmpvar_23 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  ret_3 = (ret_3 + (tmpvar_24 * (tmpvar_24 * \n    (3.0 - (2.0 * tmpvar_24))\n  )));\n  float tmpvar_25;\n  tmpvar_25 = clamp (0.52, 0.0, 1.0);\n  vec3 tmpvar_26;\n  tmpvar_26.x = tmpvar_25;\n  tmpvar_26.y = (tmpvar_25 * tmpvar_25);\n  tmpvar_26.z = pow (tmpvar_25, 8.0);\n  vec3 tmpvar_27;\n  tmpvar_27 = clamp ((tmpvar_26 / vec3(0.8, 0.8, 0.8)), 0.0, 1.0);\n  vec3 tmpvar_28;\n  tmpvar_28 = mix (clamp (ret_3, 0.0, 1.0), (tmpvar_27 * (tmpvar_27 * \n    (3.0 - (2.0 * tmpvar_27))\n  )), vec3((pow (\n    ((1.0 - uv_2.y) - ((uv_2.x - 0.5) * (q3 - 0.5)))\n  , 4.0) * q1)));\n  ret_3 = tmpvar_28;\n  vec4 tmpvar_29;\n  tmpvar_29.w = 1.0;\n  tmpvar_29.xyz = tmpvar_28;\n  ret = tmpvar_29.xyz;\n}\n\n"}