{"baseVals":{"rating":1,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"brighten":1,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.s = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.v = 0;\nm.vx4 = 0;\nm.grav = 0;\nm.x3 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.a = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.bounce = 0;\nm.x4 = 0;\nm.r = 0;\nm.x2 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.spring = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.resist = 0;\nm.yy = 0;\nm.y4 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.v2 = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5+((m.xx1-m.xx2)*2)); m.y1=(0.4+m.yy1); m.x1=Math.max(0, Math.min(1, m.x1)); m.y1=Math.max(0, Math.min(1, m.y1)); m.spring=10; m.grav=0.5; m.resist=1; m.bounce=0.75; m.dt=(0.0001*div(60,m.fps)); m.vx2=((m.vx2*(1-(m.resist*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*m.spring))); m.vy2=((m.vy2*(1-(m.resist*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*m.spring)-m.grav))); m.vx3=((m.vx3*(1-(m.resist*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*m.spring))); m.vy3=((m.vy3*(1-(m.resist*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*m.spring)-m.grav))); m.vx4=((m.vx4*(1-(m.resist*m.dt)))+(m.dt*((m.x3-m.x4)*m.spring))); m.vy4=((m.vy4*(1-(m.resist*m.dt)))+(m.dt*(((m.y3-m.y4)*m.spring)-m.grav))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*m.bounce))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*m.bounce))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*m.bounce))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*m.bounce))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*m.bounce))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*m.bounce))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*m.bounce))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*m.bounce))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*m.bounce))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*m.bounce))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*m.bounce))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*m.bounce))); m.q4=m.x4; m.q8=m.y4; m.q1=m.aspectx; m.q2=m.aspecty; m.q10=m.x1; m.q11=m.y1; m.zoom=1; m.warp=0; m.q6=Math.atan2(m.vx4, m.vy4); m.q5=sqrt(((m.vx4*m.vx4)+(m.vy4*m.vy4))); m.a=((m.a*0.95)+m.q5); m.s=((m.s*0.9)+m.a); m.q3=(m.s*0.1); m.monitor=m.s; m.wave_a=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.x=(0.5+((m.x-0.5)*m.q1)); m.y=(0.5+((m.y-0.5)*m.q2)); m.xx=m.q4; m.yy=(1-m.q8); m.dx=0; m.dy=0; m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.1; m.v=20; m.v2=m.q5; m.dx=(((m.v*((Math.sin((m.y-m.yy))*(m.d-m.r))-((m.x-m.xx)*(m.d-div(m.r,2)))))+(Math.cos(m.dir)*m.v2))*(1.00-sigmoid((m.d-m.r), 120))); m.dy=(((-m.v*((Math.sin((m.x-m.xx))*(m.d-m.r))+((m.y-m.yy)*(m.d-div(m.r,2)))))-(Math.sin(m.dir)*m.v2))*(1.00-sigmoid((m.d-m.r), 120)));","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = mix (uv_orig, uv, vec2(2.0, 2.0));\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (tmpvar_2 + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_2 - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (tmpvar_2 + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_2 - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_4.x;\n  tmpvar_6.y = tmpvar_5.x;\n  vec2 tmpvar_7;\n  tmpvar_7 = (tmpvar_2 + ((tmpvar_6 * texsize.zw) * 8.0));\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_4.y;\n  tmpvar_8.y = tmpvar_5.y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (tmpvar_2 + ((tmpvar_8 * texsize.zw) * 8.0));\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4.z;\n  tmpvar_10.y = tmpvar_5.z;\n  vec2 tmpvar_11;\n  tmpvar_11 = (tmpvar_2 + ((tmpvar_10 * texsize.zw) * 8.0));\n  ret_1.x = (texture (sampler_main, tmpvar_7).x - ((texture (sampler_main, tmpvar_7).xyz - \n    ((texture (sampler_blur3, tmpvar_7).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_9).y - ((texture (sampler_main, tmpvar_9).xyz - \n    ((texture (sampler_blur3, tmpvar_9).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_11).z - ((texture (sampler_main, tmpvar_11).xyz - \n    ((texture (sampler_blur3, tmpvar_11).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 1.2)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.04));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.02));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 8.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = q4;\n  tmpvar_4.y = (1.0 - q8);\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_2.y;\n  tmpvar_5.y = tmpvar_3.y;\n  vec2 x_6;\n  x_6 = ((uv - (tmpvar_5 * 2.0)) - tmpvar_4);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_2.x;\n  tmpvar_7.y = tmpvar_3.x;\n  vec2 x_8;\n  x_8 = ((uv - (tmpvar_7 * 2.0)) - tmpvar_4);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_2.z;\n  tmpvar_9.y = tmpvar_3.z;\n  vec2 x_10;\n  x_10 = ((uv - (tmpvar_9 * 2.0)) - tmpvar_4);\n  vec3 tmpvar_11;\n  tmpvar_11.x = (1.1 - pow (sqrt(\n    dot (x_8, x_8)\n  ), 0.2));\n  tmpvar_11.y = (1.1 - pow (sqrt(\n    dot (x_6, x_6)\n  ), 0.2));\n  tmpvar_11.z = (1.1 - pow (sqrt(\n    dot (x_10, x_10)\n  ), 0.2));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ((tmpvar_11 * texture (sampler_main, uv).xyz) * 2.4);\n  ret = tmpvar_12.xyz;\n}\n\n"}