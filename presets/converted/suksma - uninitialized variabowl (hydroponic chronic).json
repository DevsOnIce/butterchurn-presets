{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0,"echo_orient":1,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":1,"darken":0,"solarize":0,"invert":0,"wave_a":0.401,"wave_scale":3.177,"wave_smoothing":0,"wave_mystery":-0.4,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":2.289,"warpscale":5.472,"zoomexp":0.01,"fshader":0,"zoom":0.9901,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":1.8566,"sx":1,"sy":1,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0.005,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":0,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"thickoutline":0,"textured":0,"num_inst":512,"x":0.5,"y":0.55,"rad":0.034,"ang":0,"tex_ang":0,"tex_zoom":0.7874,"r":1,"g":0.45,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.w2 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.rnd2 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.t3 = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.wv = 0;\nm.my_y = 0;\nm.q4 = 0;\nm.t = 0;\nm.w1 = 0;\nm.i = 0;\nm.x2 = 0;\nm.t2 = 0;\nm.l = 0;\nm.y2 = 0;\nm.rnd4 = 0;\nm.wh = 0;\nm.q2 = 0;\nm.z1 = 0;\nm.rnd3 = 0;\nm.rnd1 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.started=0; m.t1=0.412; m.t2=0.4563; m.t3=0.6452; m.t4=0.2565;\n\t\t\tm.rkeys = ['rnd2','rnd4','rnd3','rnd1'];","frame_eqs_str":"m.rnd1=((equal(m.instance, 0)!=0)?(m.t1):(m.rnd1)); m.rnd2=((equal(m.instance, 0)!=0)?(m.t2):(m.rnd2)); m.rnd3=((equal(m.instance, 0)!=0)?(m.t3):(m.rnd3)); m.rnd4=((equal(m.instance, 0)!=0)?(m.t4):(m.rnd4)); m.rnd1=((4*m.rnd1)*(1-m.rnd1)); m.rnd2=((4*m.rnd2)*(1-m.rnd2)); m.rnd3=((4*m.rnd3)*(1-m.rnd3)); m.rnd4=((4*m.rnd4)*(1-m.rnd4)); m.t=0.6; m.t=((m.rnd1+(m.time*m.t))-Math.floor((m.rnd1+(m.time*m.t)))); m.t=(m.t+(m.rnd2*0.1)); m.wh=((m.rnd4*Math.asin(1))*4); m.wv=(0.25+(m.rnd3*0.1)); m.d=1.4; m.zoom=1; m.l=1; m.w1=m.q3; m.w2=m.q4; m.w3=m.q5; m.i=m.instance; m.my_x=(m.t*((Math.cos(m.wh)*Math.sin(m.wv))*m.l)); m.my_y=(((-0.5+((m.t-0.75)*(m.t-0.75)))*Math.cos(m.wv))*m.l); m.my_z=(m.t*((Math.sin(m.wh)*Math.sin(m.wv))*m.l)); m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.rad=div(m.rad,m.d); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.x=(0.5+m.my_x); m.y=(0.5+m.my_y); m.x=(0.5+div((m.x-0.5),m.q2)); m.y=(0.5+div((m.y-0.5),m.q1));"},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":1,"textured":1,"num_inst":1,"x":0.52,"y":0.41,"rad":0.5216,"ang":0.1885,"tex_ang":0,"tex_zoom":0.73458,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0.75,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":1,"textured":1,"num_inst":1,"x":0.48,"y":0.41,"rad":0.61162,"ang":5.96903,"tex_ang":0,"tex_zoom":0.73458,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0.75,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":100,"additive":1,"thickoutline":1,"textured":0,"num_inst":1,"x":0.5,"y":0.75,"rad":0.07059,"ang":0,"tex_ang":0,"tex_zoom":0.73458,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=m.q1; m.y=m.q5;"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":1,"scaling":1,"smoothing":0.5,"r":0.2,"g":0,"b":0,"a":0.3},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.q1 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.phs = 0;\nm.ang = 0;\nm.tm = 0;\nm.zp = 0;\nm.q2 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=(m.sample*6.283); m.phs=(-m.sample*0.2); m.tm=((m.time*0.4)+m.phs); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.xp=0; m.yp=((m.flip*0.1)+(((Math.sin(m.tm)*0.5)+0.5)*0.2)); m.zp=0; m.ang=((Math.sin((m.tm*2))*0.5)+0.5); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.yq=m.yp; m.zq=m.zp; m.ang=(m.tm*8); m.xp=((m.xq*Math.sin(m.ang))+(m.yq*Math.cos(m.ang))); m.yp=((m.xq*Math.cos(m.ang))-(m.yq*Math.sin(m.ang))); m.zp=m.zq; m.zp=(m.zp-0.3); m.ang=(3.14+(Math.sin(((m.tm*2)-0.5))*1.5)); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.ang=(-1.0+Math.cos(((m.tm*3)+0.5))); m.xp=((m.xq*Math.sin(m.ang))+(m.yq*Math.cos(m.ang))); m.yp=((m.xq*Math.cos(m.ang))-(m.yq*Math.sin(m.ang))); m.zp=m.zq; m.zp=(m.zp-0.35); m.ang=((Math.cos((m.tm*2))*0.75)-1.05); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.ang=((Math.cos(m.tm)*0.5)-0.5); m.xp=m.xq; m.yp=((m.yq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.zp=((m.yq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.zp=(m.zp+2); m.xs=div(m.xp,m.zp); m.ys=div(m.yp,m.zp); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.x=(0.5+div((m.x-0.5),m.q1)); m.y=((0.5+div((m.y-0.5),m.q2))+0.1);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":1,"scaling":1,"smoothing":0.5,"r":0.2,"g":0,"b":0,"a":0.3},"init_eqs_str":"m.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.q1 = 0;\nm.xq = 0;\nm.flip = 0;\nm.ys = 0;\nm.zq = 0;\nm.phs = 0;\nm.ang = 0;\nm.tm = 0;\nm.zp = 0;\nm.q2 = 0;\n\n\t\t\tm.rkeys = ['flip'];","frame_eqs_str":"","point_eqs_str":"m.n=(m.sample*6.283); m.phs=(-m.sample*0.2); m.tm=((m.time*0.4)+m.phs); m.flip=(m.flip+1); m.flip=(m.flip*below(m.flip, 2)); m.xp=0; m.yp=((m.flip*0.1)+(((Math.sin(m.tm)*0.5)+0.5)*0.2)); m.yp=-m.yp; m.zp=0; m.ang=((Math.sin((m.tm*2))*0.5)+0.5); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.yq=m.yp; m.zq=m.zp; m.ang=(m.tm*8); m.xp=((m.xq*Math.sin(m.ang))+(m.yq*Math.cos(m.ang))); m.yp=((m.xq*Math.cos(m.ang))-(m.yq*Math.sin(m.ang))); m.zp=m.zq; m.zp=(m.zp-0.3); m.ang=(3.14+(Math.sin(((m.tm*2)-0.5))*1.5)); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.ang=(-1.0+Math.cos(((m.tm*3)+0.5))); m.xp=((m.xq*Math.sin(m.ang))+(m.yq*Math.cos(m.ang))); m.yp=((m.xq*Math.cos(m.ang))-(m.yq*Math.sin(m.ang))); m.zp=m.zq; m.zp=(m.zp-0.35); m.ang=((Math.cos((m.tm*2))*0.75)-1.05); m.xq=((m.xp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.yq=m.yp; m.zq=((m.xp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.ang=((Math.cos(m.tm)*0.5)-0.5); m.xp=m.xq; m.yp=((m.yq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.zp=((m.yq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.zp=(m.zp+2); m.xs=div(m.xp,m.zp); m.ys=div(m.yp,m.zp); m.x=(m.xs+0.5); m.y=((m.ys*1.3)+0.5); m.x=(0.5+div((m.x-0.5),m.q1)); m.y=((0.5+div((m.y-0.5),m.q2))+0.1);"},{"baseVals":{"enabled":0,"samples":61,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":2.44415,"smoothing":0,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.q7 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t7=m.q7; m.t8=m.q8;","point_eqs_str":"m.x=((((((pow(m.sample, 5)*m.t1)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t1))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t2))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t3))+(((5*pow((1-m.sample), 4))*m.sample)*m.t4))+(pow((1-m.sample), 5)*m.t4)); m.y=((((((pow(m.sample, 5)*m.t5)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t5))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t6))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t7))+(((5*pow((1-m.sample), 4))*m.sample)*m.t8))+(pow((1-m.sample), 5)*m.t8));"},{"baseVals":{"enabled":0,"samples":61,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":2.44415,"smoothing":0,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.q7 = 0;\nm.q8 = 0;\nm.t2=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t7=m.q7; m.t8=m.q8;","point_eqs_str":"m.x=((((((pow(m.sample, 5)*m.t1)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t1))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t2))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t3))+(((5*pow((1-m.sample), 4))*m.sample)*m.t4))+(pow((1-m.sample), 5)*m.t4)); m.y=((((((pow(m.sample, 5)*m.t5)+(((5*pow(m.sample, 4))*(1-m.sample))*m.t5))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.t6))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.t7))+(((5*pow((1-m.sample), 4))*m.sample)*m.t8))+(pow((1-m.sample), 5)*m.t8));"}],"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.q4 = 0;\nm.t = 0;\nm.b = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.m = 0;","frame_eqs_str":"m.wave_a=0; m.q1=m.aspectx; m.q2=m.aspecty; m.b=(m.b+((m.bass*m.bass)*0.85)); m.m=(m.m+((m.mid*m.mid)*0.85)); m.t=(m.t+((m.treb*m.treb)*0.85)); m.q3=(m.b*0.012); m.q4=(m.m*0.012); m.q5=(m.t*0.012);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_2)));\n  ret = tmpvar_6.xyz;\n}\n\n"}