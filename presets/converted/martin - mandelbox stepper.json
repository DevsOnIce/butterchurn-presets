{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":1.17,"wave_scale":0.566,"wave_smoothing":0.09,"wave_mystery":-0.8,"modwavealphastart":0.4,"modwavealphaend":1.8,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":1,"wave_g":0,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":1,"mv_r":1,"mv_g":1,"mv_b":0.9,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":0,"sides":16,"additive":0,"thickoutline":1,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.97235,"ang":0.1884,"tex_ang":0.62832,"tex_zoom":0.77829,"r":1,"g":1,"b":1,"a":0.9,"r2":1,"g2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.4149,"ang":0,"tex_ang":0.25133,"tex_zoom":0.38021,"r":1,"g":0,"b":0,"a":1,"r2":1,"g2":0,"b2":0,"a2":1,"border_r":1,"border_g":0,"border_b":0,"border_a":1},"init_eqs_str":"m.advx = 0;\nm.vol = 0;\nm.advy = 0;\n\n\t\t\tm.rkeys = ['advx','advy'];","frame_eqs_str":"m.advx=(m.advx+(div((m.bass*m.bass),m.fps)*4)); m.advy=(m.advy+(div((m.treb*m.treb),m.fps)*4)); m.r=(((rand(10)*0.1)*0.5)+0.5); m.g=m.r; m.b=m.r; m.x=(0.5+(0.3*Math.sin(m.advx))); m.y=(0.5+(0.3*Math.sin(m.advy))); m.rad=(((rand(100)*0.01)*0.2)+0.021); m.vol=((m.bass_att+m.mid_att)+m.treb_att); m.rad=Math.min(0.2, (m.vol*0.03)); m.a=Math.min(1, div(m.vol,4)); m.a2=m.a; m.border_a=m.a; m.ang=(m.vol*8);"},{"baseVals":{"enabled":0,"sides":24,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.2,"y":0.8,"rad":0.59958,"ang":0,"tex_ang":1.25664,"tex_zoom":0.49831,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.86,"y":0.2,"rad":0.80814,"ang":0,"tex_ang":0,"tex_zoom":0.45112,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":0.9,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":256,"spectrum":0,"usedots":1,"thick":0,"additive":1,"scaling":100,"smoothing":0.9,"r":0,"g":0.7,"b":1,"a":1},"init_eqs_str":"m.advance = 0;\nm.t1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.advance=(m.advance+0.012); m.advance=((above(m.advance, 2)!=0)?(0):(m.advance)); m.t1=m.advance;","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":42,"sep":0,"spectrum":0,"usedots":1,"thick":0,"additive":1,"scaling":81.95444,"smoothing":1,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.advance = 0;\nm.t1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.advance=(m.advance+0.012); m.advance=((above(m.advance, 2)!=0)?(0):(m.advance)); m.t1=m.advance;","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":42,"sep":0,"spectrum":0,"usedots":1,"thick":1,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":0.36},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":192,"sep":0,"spectrum":0,"usedots":1,"thick":0,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":0.32},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.n = 0;\nm.int = 0;\nm.reg26 = 0;\nm.uvx0 = 0;\nm.index2 = 0;\nm.reg34 = 0;\nm.reg28 = 0;\nm.reg23 = 0;\nm.q25 = 0;\nm.angchg = 0;\nm.reg20 = 0;\nm.reg15 = 0;\nm.reg10 = 0;\nm.index = 0;\nm.q12 = 0;\nm.v3 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.diry = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.posx = 0;\nm.fps_ = 0;\nm.reg25 = 0;\nm.uvx = 0;\nm.travel = 0;\nm.posz = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.dirz = 0;\nm.dec_s = 0;\nm.reg16 = 0;\nm.reg36 = 0;\nm.reg22 = 0;\nm.uvy = 0;\nm.count = 0;\nm.rotz = 0;\nm.dist_ = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.reg24 = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.reg14 = 0;\nm.posy = 0;\nm.reg31 = 0;\nm.dirx = 0;\nm.dec_m = 0;\nm.q4 = 0;\nm.start = 0;\nm.reg12 = 0;\nm.reg13 = 0;\nm.c2 = 0;\nm.sqrt = 0;\nm.reg37 = 0;\nm.s3 = 0;\nm.yslope = 0;\nm.q16 = 0;\nm.xslope = 0;\nm.q26 = 0;\nm.reg38 = 0;\nm.reg35 = 0;\nm.reg11 = 0;\nm.tx = 0;\nm.avg = 0;\nm.uvz = 0;\nm.rota = 0;\nm.c3 = 0;\nm.uvy0 = 0;\nm.reg27 = 0;\nm.beat = 0;\nm.vol = 0;\nm.reg32 = 0;\nm.reg21 = 0;\nm.peak = 0;\nm.uvz0 = 0;\nm.len = 0;\nm.reg18 = 0;\nm.reg30 = 0;\nm.q27 = 0;\nm.slen = 0;\nm.q14 = 0;\nm.dist = 0;\nm.reg17 = 0;\nm.v1 = 0;\nm.s1 = 0;\nm.vz1 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.s2 = 0;\nm.ran1 = 0;\nm.reg33 = 0;\nm.q7 = 0;\nm.ds = 0;\nm.q28 = 0;\nm.ty = 0;\nm.c1 = 0;\nm.v2 = 0;\nm.ds_ = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.avg=0.01; m.q7=0.4; m.q8=(rand(2.0)-1.0); m.q16=1; m.q18=(rand(0.8)+0.1); m.q31=128; m.start=1; m.travel=0; m.rotz=0; m.look=0; m.slow=0; m.t0=(m.time+3); m.lampx=0.5; m.lampy=0.5; m.cran0=rand(1); m.n=0; for(var mdparser_idx1=0;mdparser_idx1<10000;mdparser_idx1++){m.gmegabuf[m.n]=0; m.n=(m.n+1);} m.n=0; for(var mdparser_idx2=0;mdparser_idx2<10000;mdparser_idx2++){m.megabuf[m.n]=0; m.n=(m.n+1);} m.trelx=0; m.trely=0; m.trelz=0; m.reg20=1; m.reg21=0; m.reg22=0; m.reg23=0; m.reg24=1; m.reg25=0; m.reg26=0; m.reg27=0; m.reg28=1; m.ran1=div(rand(800),100); m.ran2=div(rand(800),100); m.ran3=div(rand(800),100); m.posx=(rand(5)-2); m.posy=(rand(5)-2); m.posz=(rand(5)-2); m.c1=Math.cos(m.ran1); m.c2=Math.cos(m.ran2); m.c3=Math.cos(m.ran3); m.s1=Math.sin(m.ran1); m.s2=Math.sin(m.ran2); m.s3=Math.sin(m.ran3); m.reg20=(m.c2*m.c1); m.reg21=(m.c2*m.s1); m.reg22=-m.s2; m.reg23=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg24=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg25=(m.s3*m.c2); m.reg26=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg27=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg28=(m.c3*m.c2); m.rota=0; m.count=0;","frame_eqs_str":"m.fps_=((0.0*m.fps_)+(1*((((m.fps<=25)?1:0)!=0)?(m.fps):((25+(0.5*(m.fps-25))))))); m.fps_=m.fps; m.dec_m=pow(0.7, div(30,m.fps)); m.dec_s=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_s)+(m.beat*(1-m.dec_s))); m.is_beat=(above(m.beat, ((2*m.avg)+(2*m.peak)))*above(m.time, (m.t0+-0.3))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_m)); m.index=mod((m.index+m.is_beat),4); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.wave_a=((m.index2<5)?1:0); m.rota=((m.rota*m.dec_m)+(((1-m.dec_m)*m.index2)*3.14)); m.q9=0; m.vol=((m.bass+m.mid)+m.treb); m.vol*=(m.vol*m.vol); m.dec_m=0.3; m.vol_=((m.dec_m*m.vol_)+((1-m.dec_m)*m.vol)); m.ds=(div(above(m.vol, (m.vol_*1.35)),8)*pow(m.vol, 0.25)); m.dirx=m.reg26; m.diry=m.reg27; m.dirz=m.reg28; m.posx=(m.posx+(m.ds*m.dirx)); m.posy=(m.posy+(m.ds*m.diry)); m.posz=(m.posz+(m.ds*m.dirz)); m.q4=m.posx; m.q5=m.posy; m.q6=m.posz; m.angchg=((0.3-m.dist_)*((m.dist_<0.3)?1:0)); m.travel=((((m.angchg>0)?1:0)!=0)?(0):((m.travel+m.ds))); m.v1=((m.v1*m.dec_s)+div((((1-m.dec_s)*m.rotz)*m.ds),4)); m.v2=((m.v2*m.dec_s)+div(div((((1-m.dec_s)*m.angchg)*m.xslope),m.fps_),3)); m.v3=((m.v3*m.dec_s)+((1-m.dec_s)*div(div((m.angchg*m.yslope),m.fps_),3))); m.v1=0; m.v2=0; m.v3=0; m.v1=0; m.reg30=m.reg20; m.reg31=m.reg21; m.reg32=m.reg22; m.reg33=m.reg23; m.reg34=m.reg24; m.reg35=m.reg25; m.reg36=m.reg26; m.reg37=m.reg27; m.reg38=m.reg28; m.n=4; m.avg=0; for(var mdparser_idx3=0;mdparser_idx3<1;mdparser_idx3++){m.n=(m.n+1); m.ran1=div(rand(100),100); m.ran2=(div(rand(100),200)-0.25); m.tx=((Math.cos(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.ty=((Math.sin(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.c1=Math.cos(m.v1); m.c2=Math.cos((m.v2+m.ty)); m.c3=Math.cos((m.v3+m.tx)); m.s1=Math.sin(m.v1); m.s2=Math.sin((m.v2+m.ty)); m.s3=Math.sin((m.v3+m.tx)); m.reg10=(m.c2*m.c1); m.reg11=(m.c2*m.s1); m.reg12=-m.s2; m.reg13=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg14=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg15=(m.s3*m.c2); m.reg16=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg17=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg18=(m.c3*m.c2); m.reg20=m.reg30; m.reg21=m.reg31; m.reg22=m.reg32; m.reg23=m.reg33; m.reg24=m.reg34; m.reg25=m.reg35; m.reg26=m.reg36; m.reg27=m.reg37; m.reg28=m.reg38; m.q20=(((m.reg10*m.reg20)+(m.reg11*m.reg23))+(m.reg12*m.reg26)); m.q21=(((m.reg10*m.reg21)+(m.reg11*m.reg24))+(m.reg12*m.reg27)); m.q22=(((m.reg10*m.reg22)+(m.reg11*m.reg25))+(m.reg12*m.reg28)); m.q23=(((m.reg13*m.reg20)+(m.reg14*m.reg23))+(m.reg15*m.reg26)); m.q24=(((m.reg13*m.reg21)+(m.reg14*m.reg24))+(m.reg15*m.reg27)); m.q25=(((m.reg13*m.reg22)+(m.reg14*m.reg25))+(m.reg15*m.reg28)); m.q26=(((m.reg16*m.reg20)+(m.reg17*m.reg23))+(m.reg18*m.reg26)); m.q27=(((m.reg16*m.reg21)+(m.reg17*m.reg24))+(m.reg18*m.reg27)); m.q28=(((m.reg16*m.reg22)+(m.reg17*m.reg25))+(m.reg18*m.reg28)); m.reg20=m.q20; m.reg21=m.q21; m.reg22=m.q22; m.reg23=m.q23; m.reg24=m.q24; m.reg25=m.q25; m.reg26=m.q26; m.reg27=m.q27; m.reg28=m.q28; m.dist=0.002; (function(){var mdparser_idx4;var mdparser_count5=0;do{mdparser_count5+=1;mdparser_idx4=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(8.0*(((div(m.uvx,8)+30.5)-Math.floor((div(m.uvx,8)+30.5)))-0.5)); m.uvy=(8.0*(((div(m.uvy,8)+30.5)-Math.floor((div(m.uvy,8)+30.5)))-0.5)); m.uvz=(8.0*(((div(m.uvz,8)+30.5)-Math.floor((div(m.uvz,8)+30.5)))-0.5)); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx6=0;mdparser_idx6<(7+1);mdparser_idx6++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.5; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx4!==0&&mdparser_count5<1048576);}()); m.megabuf[m.n]=((m.megabuf[m.n]*m.dec_s)+((1-m.dec_s)*m.dist)); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.n=0; m.avg=0; for(var mdparser_idx7=0;mdparser_idx7<5;mdparser_idx7++){m.n=(m.n+1); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.dist_=((m.dist_*m.dec_s)+((1-m.dec_s)*m.dist)); m.q10=(m.ds*m.q7); m.q14=((((1*Math.abs(m.ds))+(2*((Math.abs(m.v1)+Math.abs(m.v2))+Math.abs(m.v3))))+div(1.0,255))+(m.start*0.05)); m.start=(m.start*0.9); m.vz1=(m.vz1+m.v1); m.q11=m.vz1; m.q12=m.v2; m.q13=m.v3; m.warp=0.0; m.zoom=1; m.dx=div(-m.v2,m.q16); m.dy=div(m.v3,m.q16); m.rot=m.v1; m.count=(m.count+((m.treb>1.16)?1:0)); m.q31=div((m.count*3.1416),2); m.ds_=((m.ds_*m.dec_s)+((1-m.dec_s)*m.ds)); m.q11=m.ds_; m.monitor=sqrt(m.vol_);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float sustain;\nfloat xlat_mutabledist;\nfloat xlat_mutablelen;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutablelen = len;\n  xlat_mutablestruc = struc;\n  xlat_mutableuv2 = uv2;\n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.96 - q10);\n  vec2 uv_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - 0.5);\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pc_main, uv);\n  uv_3 = ((tmpvar_5 * (1.0 - \n    (q10 / (1.0 - (tmpvar_6.z + (0.003921569 * tmpvar_6.y))))\n  )) + 0.5);\n  vec4 tmpvar_7;\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  xlat_mutabledist = tmpvar_7.x;\n  if ((tmpvar_7.y > 0.2)) {\n    vec3 tmpvar_8;\n    tmpvar_8 = (tmpvar_7.xyz - vec3(0.5, 0.5, 0.5));\n    vec2 pix_9;\n    vec4 nb2_10;\n    vec4 nb_11;\n    vec2 x_12;\n    x_12 = (uv_3 - 0.5);\n    pix_9 = (texsize.zw * (1.0 + (\n      sqrt(dot (x_12, x_12))\n     * 2.0)));\n    vec4 tmpvar_13;\n    tmpvar_13 = texture (sampler_pc_main, (uv_3 - pix_9));\n    nb_11.x = (1.0 - (tmpvar_13.z + (0.003921569 * tmpvar_13.y)));\n    vec4 tmpvar_14;\n    tmpvar_14 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(1.0, -1.0))));\n    nb_11.y = (1.0 - (tmpvar_14.z + (0.003921569 * tmpvar_14.y)));\n    vec4 tmpvar_15;\n    tmpvar_15 = texture (sampler_pc_main, (uv_3 + pix_9));\n    nb_11.z = (1.0 - (tmpvar_15.z + (0.003921569 * tmpvar_15.y)));\n    vec4 tmpvar_16;\n    tmpvar_16 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(-1.0, 1.0))));\n    nb_11.w = (1.0 - (tmpvar_16.z + (0.003921569 * tmpvar_16.y)));\n    vec4 tmpvar_17;\n    tmpvar_17 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(0.0, -1.0))));\n    nb2_10.x = (1.0 - (tmpvar_17.z + (0.003921569 * tmpvar_17.y)));\n    vec4 tmpvar_18;\n    tmpvar_18 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(1.0, 0.0))));\n    nb2_10.y = (1.0 - (tmpvar_18.z + (0.003921569 * tmpvar_18.y)));\n    vec4 tmpvar_19;\n    tmpvar_19 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(0.0, 1.0))));\n    nb2_10.z = (1.0 - (tmpvar_19.z + (0.003921569 * tmpvar_19.y)));\n    vec4 tmpvar_20;\n    tmpvar_20 = texture (sampler_pc_main, (uv_3 + (pix_9 * vec2(-1.0, 0.0))));\n    nb2_10.w = (1.0 - (tmpvar_20.z + (0.003921569 * tmpvar_20.y)));\n    vec4 tmpvar_21;\n    tmpvar_21 = min (nb_11, nb2_10);\n    nb_11.zw = tmpvar_21.zw;\n    nb_11.xy = min (tmpvar_21.xy, tmpvar_21.zw);\n    xlat_mutabledist = (min (nb_11.x, nb_11.y) + ((0.01 * tmpvar_8.x) * abs(tmpvar_8.y)));\n  };\n  vec4 tmpvar_22;\n  tmpvar_22 = texture (sampler_pc_main, uv_3);\n  xlat_mutabledist = (min (xlat_mutabledist, (1.0 - \n    (tmpvar_22.z + (0.003921569 * tmpvar_22.y))\n  )) - q10);\n  vec3 tmpvar_23;\n  tmpvar_23.xy = (xlat_mutableuv1 * xlat_mutabledist);\n  tmpvar_23.z = xlat_mutabledist;\n  xlat_mutableuv2 = (((tmpvar_23 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = ((fract(\n    ((xlat_mutableuv2 / 8.0) + 0.5)\n  ) - 0.5) * 8.0);\n  vec3 zz0_24;\n  vec3 zz_25;\n  zz0_24 = (xlat_mutableuv2 + q8);\n  zz_25 = ((2.0 * clamp (xlat_mutableuv2, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - xlat_mutableuv2);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  zz_25 = ((2.0 * clamp (zz_25, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_25);\n  zz_25 = (zz_25 * (clamp (\n    max ((0.25 / dot (zz_25, zz_25)), 0.25)\n  , 0.0, 1.0) * 4.0));\n  zz_25 = ((2.8 * zz_25) + zz0_24);\n  xlat_mutablelen = (sqrt(dot (zz_25, zz_25)) * 2.0);\n  xlat_mutablestruc = ((sqrt(\n    dot (zz_25.xy, zz_25.xy)\n  ) / 34.0) * 2.0);\n  float tmpvar_26;\n  vec4 tmpvar_27;\n  tmpvar_27 = texture (sampler_pc_main, uv_3);\n  tmpvar_26 = (1.0 - (tmpvar_27.z + (0.003921569 * tmpvar_27.y)));\n  if ((((xlat_mutabledist <= tmpvar_26) && (xlat_mutablelen < 34.0)) && (xlat_mutabledist > (0.04 / rad)))) {\n    ret_4.x = (((1.0 - sustain) * xlat_mutablestruc) + (sustain * texture (sampler_main, uv_3).x));\n    float x_28;\n    x_28 = ((1.0 - xlat_mutabledist) * 255.0);\n    float ip_29;\n    ip_29 = float(int(x_28));\n    vec2 tmpvar_30;\n    tmpvar_30.x = (x_28 - ip_29);\n    tmpvar_30.y = (ip_29 / 255.0);\n    ret_4.yz = tmpvar_30;\n  } else {\n    ret_4 = ((texture (sampler_main, uv_3).xyz * sustain) - 0.002);\n  };\n  vec4 tmpvar_31;\n  tmpvar_31.w = 1.0;\n  tmpvar_31.xyz = ret_4;\n  ret = tmpvar_31.xyz;\n}\n\n","comp":"float xlat_mutablearg;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nshader_body\n{\n  vec2 uv_1;\n  float bdist_2;\n  vec2 noise_3;\n  float ang2_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = abs((0.5 / uv_1.y));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (tmpvar_5 * uv_1.x);\n  tmpvar_6.y = (tmpvar_5 + (time / 2.0));\n  noise_3 = (((texture (sampler_noise_hq, tmpvar_6) - 0.5) / tmpvar_5) * 2.0).xy;\n  ang2_4 = (3.14 + q9);\n  float tmpvar_7;\n  tmpvar_7 = cos(ang2_4);\n  float tmpvar_8;\n  tmpvar_8 = sin(ang2_4);\n  xlat_mutableuv2.x = ((uv_1.x * tmpvar_7) - (uv_1.y * tmpvar_8));\n  xlat_mutableuv2.y = ((uv_1.x * tmpvar_8) + (uv_1.y * tmpvar_7));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  xlat_mutableuv3 = (abs((\n    fract((fract((xlat_mutableuv2 + 0.5)) + 0.5))\n   - 0.5)) + ((\n    ((rad * rad) * noise_3)\n   * 0.02) * bass_att));\n  bdist_2 = (1.0 - ((texture (sampler_blur2, xlat_mutableuv3).xyz * scale2) + bias2).z);\n  mat2 tmpvar_9;\n  float tmpvar_10;\n  tmpvar_10 = cos(q31);\n  tmpvar_9[uint(0)].x = tmpvar_10;\n  float tmpvar_11;\n  tmpvar_11 = sin(q31);\n  tmpvar_9[uint(0)].y = -(tmpvar_11);\n  tmpvar_9[1u].x = tmpvar_11;\n  tmpvar_9[1u].y = tmpvar_10;\n  vec2 tmpvar_12;\n  tmpvar_12 = sin(((\n    (((xlat_mutableuv3 * tmpvar_9).x * bass_att) + 1.5)\n   + bdist_2) + (\n    (noise_3 * 0.04)\n   * bass_att)));\n  xlat_mutablearg = (bdist_2 + q6);\n  vec3 tmpvar_13;\n  tmpvar_13.x = (xlat_mutablearg * 2.0);\n  tmpvar_13.y = (xlat_mutablearg * 3.0);\n  tmpvar_13.z = (5.0 * xlat_mutablearg);\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = (1.0 - exp((\n    (((-(\n      max (vec3(0.0, 0.0, 0.0), ((max (vec3(\n        mix (texture (sampler_main, xlat_mutableuv3).x, ((texture (sampler_blur1, xlat_mutableuv3).xyz * scale1) + bias1).x, (clamp ((q11 * 8.0), 0.0, 1.0) * 1.1))\n      ), vec3(\n        ((0.04 / sqrt(dot (tmpvar_12, tmpvar_12))) * bdist_2)\n      )) * (bdist_2 + 0.2)) * (2.0 + sin(tmpvar_13))))\n    ) / (\n      (0.2 / bass)\n     + rad)) / bass) * 0.5)\n   + 0.1)));\n  ret = tmpvar_14.xyz;\n}\n\n"}