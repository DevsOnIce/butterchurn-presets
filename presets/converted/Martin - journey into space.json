{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"modwavealphabyvolume":1,"darken":1,"wave_a":0.002705,"wave_scale":1.291486,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.11,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":44,"rad":0.108525,"tex_ang":1.00531,"tex_zoom":1.531168,"g":1,"b":1,"r2":0.83,"g2":0.93,"b2":0.8,"border_b":0,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.q9 = 0;\nm.cmax = 0;\nm.q24 = 0;\nm.q10 = 0;\nm.r0 = 0;\nm.trig = 0;\nm.q27 = 0;\nm.dist = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0','dist','b0'];","frame_eqs_str":"m.trig=(m.q24*equal(mod(m.q27,4), 0)); m.dist=(bnot(m.trig)*(m.dist+div(m.q10,m.fps))); m.x=(0.5-div(div(1,(m.dist+1)),2)); m.y=(1-m.x); m.r0=((bnot(m.trig)*m.r0)+div((m.trig*rand(100)),100)); m.g0=((bnot(m.trig)*m.g0)+div((m.trig*rand(100)),100)); m.b0=((bnot(m.trig)*m.b0)+div((m.trig*rand(100)),100)); m.cmax=Math.max(Math.max(m.r0, m.g0), m.b0); m.r=div(m.r0,m.cmax); m.r2=m.r; m.g=div(m.g0,m.cmax); m.g2=m.g; m.b=div(m.b0,m.cmax); m.b2=m.b; m.rad=div(m.q9,(m.dist+1)); m.a=div(1,(1+div(m.dist,4))); m.a2=0;"},{"baseVals":{"enabled":1,"sides":34,"thickoutline":1,"x":0.4,"rad":2.366958,"tex_ang":3.455753,"tex_zoom":0.993053,"r":0.5,"b":1,"a":0.2,"r2":0.7,"g2":0.4,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.q9 = 0;\nm.cmax = 0;\nm.q24 = 0;\nm.q10 = 0;\nm.r0 = 0;\nm.trig = 0;\nm.q27 = 0;\nm.dist = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0','dist','b0'];","frame_eqs_str":"m.trig=(m.q24*equal(mod(m.q27,4), 2)); m.dist=(bnot(m.trig)*(m.dist+div(m.q10,m.fps))); m.x=(0.5+div(div(1,(m.dist+1)),1.9)); m.y=(1-m.x); m.r0=((bnot(m.trig)*m.r0)+div((m.trig*rand(100)),100)); m.g0=((bnot(m.trig)*m.g0)+div((m.trig*rand(100)),100)); m.b0=((bnot(m.trig)*m.b0)+div((m.trig*rand(100)),100)); m.cmax=Math.max(Math.max(m.r0, m.g0), m.b0); m.r=div(m.r0,m.cmax); m.r2=m.r; m.g=div(m.g0,m.cmax); m.g2=m.g; m.b=div(m.b0,m.cmax); m.b2=m.b; m.rad=div(m.q9,(m.dist+1)); m.a=div(1,(1+div(m.dist,4))); m.a2=0;"},{"baseVals":{"enabled":1,"sides":44,"x":0.503,"rad":0.038857,"tex_zoom":0.609857,"g":0.1,"a":0.9,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.q9 = 0;\nm.cmax = 0;\nm.q24 = 0;\nm.q10 = 0;\nm.r0 = 0;\nm.trig = 0;\nm.q27 = 0;\nm.dist = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0','dist','b0'];","frame_eqs_str":"m.trig=(m.q24*equal(mod(m.q27,4), 1)); m.dist=(bnot(m.trig)*(m.dist+div(m.q10,m.fps))); m.x=(0.5-div(div(1,(m.dist+1)),1.9)); m.y=m.x; m.r0=((bnot(m.trig)*m.r0)+div((m.trig*rand(100)),100)); m.g0=((bnot(m.trig)*m.g0)+div((m.trig*rand(100)),100)); m.b0=((bnot(m.trig)*m.b0)+div((m.trig*rand(100)),100)); m.cmax=Math.max(Math.max(m.r0, m.g0), m.b0); m.r=div(m.r0,m.cmax); m.r2=m.r; m.g=div(m.g0,m.cmax); m.g2=m.g; m.b=div(m.b0,m.cmax); m.b2=m.b; m.rad=div(m.q9,(m.dist+1)); m.a=div(1,(1+div(m.dist,4))); m.a2=0;"},{"baseVals":{"enabled":1,"sides":63,"y":1,"rad":0.548217,"tex_zoom":2.223327,"g":1,"b":1,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.g0 = 0;\nm.q9 = 0;\nm.cmax = 0;\nm.q24 = 0;\nm.q10 = 0;\nm.r0 = 0;\nm.trig = 0;\nm.q27 = 0;\nm.dist = 0;\nm.b0 = 0;\n\n\t\t\tm.rkeys = ['g0','r0','dist','b0'];","frame_eqs_str":"m.trig=(m.q24*equal(mod(m.q27,4), 3)); m.dist=(bnot(m.trig)*(m.dist+div(m.q10,m.fps))); m.x=(0.5+div(div(1,(m.dist+1)),1.9)); m.y=m.x; m.r0=((bnot(m.trig)*m.r0)+div((m.trig*rand(100)),100)); m.g0=((bnot(m.trig)*m.g0)+div((m.trig*rand(100)),100)); m.b0=((bnot(m.trig)*m.b0)+div((m.trig*rand(100)),100)); m.cmax=Math.max(Math.max(m.r0, m.g0), m.b0); m.r=div(m.r0,m.cmax); m.r2=m.r; m.g=div(m.g0,m.cmax); m.g2=m.g; m.b=div(m.b0,m.cmax); m.b2=m.b; m.rad=div(m.q9,(m.dist+1)); m.a=div(1,(1+div(m.dist,4))); m.a2=0;"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.trig2 = 0;\nm.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.trel = 0;\nm.q9 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.z0 = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.q19 = 0;\nm.beat = 0;\nm.q17 = 0;\nm.p1 = 0;\nm.peak = 0;\nm.trig1 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.trig3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.5, div(30,m.fps)); m.dec_slow=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),12); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q24=m.is_beat; m.q26=((m.bass_att+m.mid_att)+m.treb_att); m.q27=(m.index+1); m.q28=m.index2; m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q10=20; m.q9=0.8; m.trig1=(m.q24*bnot(mod(m.index,4))); m.trig2=(m.q24*bnot(mod((m.index+4),16))); m.trig3=(m.q24*bnot(mod((m.index+8),16))); m.q5=Math.cos(div(m.time,3.7)); m.q6=(0.3*Math.sin(div(m.time,2))); m.q7=(0.3*Math.sin(div(m.time,1.5))); m.trel=(m.trel+div((1+m.q22),m.fps)); m.z0=4; m.q11=(0.3*Math.sin((m.trel*2))); m.q12=(0.1*Math.cos((m.trel*1.5))); m.q13=((2+m.z0)+(6*Math.sin((m.trel*1.1)))); m.q14=(0.3*Math.sin((m.trel*2.4))); m.q15=(0.2*Math.cos((m.trel*1))); m.q16=((4+m.z0)+(3*Math.sin((m.trel*1.6)))); m.q17=(0.3*Math.sin((m.trel*1))); m.q18=(0.2*Math.cos((m.trel*1.2))); m.q19=((3+m.z0)+Math.sin((m.trel*0.8)));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=((0.05*m.q1)*(1-m.rad));","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (q31 * sqrt((x_4 * x_4)));\n  vec2 tmpvar_6;\n  tmpvar_6 = normalize(tmpvar_3);\n  uv_1 = (uv + ((0.1 * \n    dot (((texture (sampler_blur1, uv).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * tmpvar_6));\n  uv_1 = (uv_1 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * tmpvar_6)\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 14.0)\n   + rand_frame.xy)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((texture (sampler_main, \n    (((uv_1 - 0.5) * (0.95 + (\n      (0.1 * q28)\n     * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.01 / sqrt(dot (uv6_2, uv6_2)))) * (0.3 * (1.0 + roam_cos)).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"vec2 xlat_mutableKugel1;\nvec2 xlat_mutableKugel2;\nfloat xlat_mutablerad1;\nfloat xlat_mutablerad2;\nfloat xlat_mutablerad3;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutablersk;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv4;\nshader_body\n{\n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q6;\n  tmpvar_2.y = q7;\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv + tmpvar_2) - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q11;\n  tmpvar_4.y = q12;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_4);\n  xlat_mutablerad1 = ((8.0 * q13) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad1) / cos(xlat_mutablerad1)) * normalize(xlat_mutablersk));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((10.0 - (7.0 * xlat_mutablerad1)), 0.0, 1.0);\n  xlat_mutableKugel1 = ((xlat_mutableuv4 * tmpvar_5) / (1.0 + q13));\n  vec2 tmpvar_6;\n  tmpvar_6.x = q14;\n  tmpvar_6.y = q15;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_6);\n  vec2 x_7;\n  x_7 = (xlat_mutablersk + 0.1);\n  float tmpvar_8;\n  tmpvar_8 = (1.0 + q16);\n  xlat_mutablerad2 = ((2.0 * tmpvar_8) * sqrt(dot (x_7, x_7)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad2) / cos(xlat_mutablerad2)) * normalize(xlat_mutablersk));\n  float tmpvar_9;\n  tmpvar_9 = clamp ((10.0 - (7.0 * xlat_mutablerad2)), 0.0, 1.0);\n  xlat_mutableKugel2 = ((xlat_mutableuv4 * tmpvar_9) / tmpvar_8);\n  vec2 tmpvar_10;\n  tmpvar_10.x = q17;\n  tmpvar_10.y = q18;\n  xlat_mutablersk = (tmpvar_3 + tmpvar_10);\n  float tmpvar_11;\n  tmpvar_11 = (1.0 + q19);\n  xlat_mutablerad3 = ((4.0 * tmpvar_11) * sqrt(dot (xlat_mutablersk, xlat_mutablersk)));\n  xlat_mutableuv4 = ((sin(xlat_mutablerad3) / cos(xlat_mutablerad3)) * normalize(xlat_mutablersk));\n  float tmpvar_12;\n  tmpvar_12 = clamp ((10.0 - (7.0 * xlat_mutablerad3)), 0.0, 1.0);\n  uv1_1 = (tmpvar_3 + ((\n    (xlat_mutableKugel1 + xlat_mutableKugel2)\n   + \n    ((xlat_mutableuv4 * tmpvar_12) / tmpvar_11)\n  ) * 0.5));\n  float tmpvar_13;\n  tmpvar_13 = (1.0/((uv1_1.y + (uv1_1.x * q5))));\n  xlat_mutablers0.x = (uv1_1.x * tmpvar_13);\n  xlat_mutablers0.y = (tmpvar_13 / 4.0);\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (xlat_mutablers0.y + (time * 2.0));\n  float tmpvar_14;\n  tmpvar_14 = clamp ((4.0 / tmpvar_13), 0.0, 1.0);\n  xlat_mutableuv2 = ((0.4 * uv1_1) * (sqrt(\n    dot (uv1_1, uv1_1)\n  ) + 1.0));\n  xlat_mutableuv2 = (xlat_mutableuv2 * aspect.yx);\n  float tmpvar_15;\n  tmpvar_15 = (0.2 * q22);\n  xlat_mutableret1 = ((texture (sampler_main, fract(\n    ((xlat_mutableuv2 + 0.5) - (((vec3(\n      dot (texture (sampler_noise_lq, (xlat_mutablers / 16.0)), vec4(0.32, 0.49, 0.29, 0.0))\n    ) - 0.5) * tmpvar_14) * 0.2).xy)\n  )) * 2.0).xyz + ((\n    ((tmpvar_15 * (float(mod (q27, 3.0)))) / xlat_mutablerad1)\n   + \n    ((tmpvar_15 * (float(mod ((q27 + 1.0), 3.0)))) / xlat_mutablerad2)\n  ) + (\n    (tmpvar_15 * (float(mod ((q27 + 2.0), 3.0))))\n   / xlat_mutablerad3)));\n  xlat_mutableret1 = (xlat_mutableret1 + ((\n    ((0.4 * tmpvar_5) * ((texture (sampler_blur1, vec2(0.0, 0.0)).xyz * scale1) + bias1))\n   + \n    ((0.4 * tmpvar_9) * ((texture (sampler_blur1, vec2(0.1, 0.1)).xyz * scale1) + bias1))\n  ) + (\n    (0.4 * tmpvar_12)\n   * \n    ((texture (sampler_blur1, vec2(0.2, 0.2)).xyz * scale1) + bias1)\n  )));\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = max (xlat_mutableret1, vec3((clamp (\n    (1.0/((float(mod (((uv.x * 2562.0) * (uv.y * 2562.0)), 13333.0)))))\n  , 0.0, 1.0) * (1.0 - \n    (4.0 * tmpvar_14)\n  ))));\n  ret = tmpvar_16.xyz;\n}\n\n"}