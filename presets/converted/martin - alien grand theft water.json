{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_b":0.2,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_a":1,"mv_x":32,"mv_y":24,"mv_l":0.2,"mv_r":0.6,"mv_g":0.2,"mv_b":0.7,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":34,"num_inst":100,"x":0.6,"rad":0.02217,"tex_zoom":60.80383,"r":0,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.trig2 = 0;\nm.fov = 0;\nm.t01 = 0;\nm.q22 = 0;\nm.q6 = 0;\nm.posx = 0;\nm.q5 = 0;\nm.dick = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.posy = 0;\nm.t02 = 0;\nm.lit1 = 0;\nm.trel2 = 0;\nm.trig1 = 0;\nm.q27 = 0;\nm.dist = 0;\nm.trel1 = 0;\nm.lit2 = 0;\nm.rad0 = 0;\nm.lit=0;\n\t\t\tm.rkeys = ['t01','t02'];","frame_eqs_str":"m.k1=(1-div(m.instance,m.num_inst)); m.dist=(m.k1+0.15); m.fov=0.1; m.posx=((div(m.fov,m.dist)*Math.sin(((((m.dist*6.28)*3)*m.q5)+div(m.time,2))))*m.k1); m.posy=(m.fov*Math.cos(((((m.dist*6.28)*5)*m.q6)+div(m.time,3)))); m.x=((0.55+((m.posx+div(-m.k1,2))+(div(m.q5,2)*m.k1)))+(0.1*m.q5)); m.y=(((0.65-div(m.k1,1.8))+div(0.001,m.k1))+(m.posy*m.k1)); m.rad0=div(0.05,m.dist); m.trig1=(m.q24*bnot(mod(m.q27,4))); m.trel1=(m.time*0.66); m.t01=((m.t01*bnot(m.trig1))+(m.trig1*m.trel1)); m.lit1=(((1-m.trel1)+m.t01)*m.num_inst); m.trig2=(m.q24*bnot(mod((m.q27+2),4))); m.trel2=(m.time*2); m.t02=((m.t02*bnot(m.trig2))+(m.trig2*m.trel2)); m.lit2=((m.trel2-m.t02)*m.num_inst); m.b=Math.min(1, div(((m.dist*2)*m.q23),Math.abs((m.instance-m.lit1)))); m.b2=div(m.b,4); m.g=Math.min(1, div((2*m.q23),Math.abs((m.instance-m.lit2)))); m.g2=div(m.g,4); m.dick=Math.min(1, div(1,Math.abs((m.instance-m.lit1)))); m.r=0.8; m.a=0.0; m.a2=1; m.rad=(m.rad0+((m.dick*0.04)*(1+div(m.q22,4))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.trely = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.sb = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.trelx_0 = 0;\nm.avg = 0;\nm.puls = 0;\nm.beat = 0;\nm.trel2 = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.trel1 = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.trelx = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.5, div(30,m.fps)); m.dec_slow=pow(0.94, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, (m.avg+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.monitor=m.index2; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q27=m.index; m.q28=m.index2; m.sb=((m.sb*m.dec_med)+(m.q21*(1-m.dec_med))); m.q29=m.sb; m.puls=((m.puls*m.dec_slow)+(((1-m.dec_slow)*m.q22)*2)); m.q23=m.puls; m.k1=(m.is_beat*bnot(mod(m.index,4))); m.p1=(m.p1+m.k1); m.p2=((m.dec_slow*m.p2)+((1-m.dec_slow)*m.p1)); m.p3=((m.dec_slow*m.p3)+((1-m.dec_slow)*m.p2)); m.rott=div((m.p3*3.14),2); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trel1=(m.trel1+(div(0.2,m.fps)*(1+m.q23))); m.trel2=(m.trel2+(div(0.12,m.fps)*(1+(m.q23*m.q1)))); m.q5=Math.cos(m.trel1); m.q6=Math.sin(m.trel2); m.trelx=(0.5+(0.5*Math.sin(div(m.time,11)))); m.q13=(m.trelx-m.trelx_0); m.trelx_0=m.trelx; m.trely=(0.5+(0.5*Math.sin(div(m.time,8)))); m.q11=m.trelx; m.q12=m.trely; m.zoom=1;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablers;\nvec2 xlat_mutablersufo;\nvec2 xlat_mutableuv1;\nshader_body\n{\n  vec3 ufo_1;\n  vec3 ret_2;\n  xlat_mutableuv1 = (uv_orig - vec2(0.5, 0.1));\n  xlat_mutablers.x = xlat_mutableuv1.x;\n  xlat_mutablers.y = (1.0/(xlat_mutableuv1.y));\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - (2.0 * q11));\n  tmpvar_3.y = (2.0 - q12);\n  xlat_mutablersufo = (((xlat_mutablers - tmpvar_3) * (16.0 + \n    (64.0 * rand_preset.x)\n  )) * (2.0 - trelx));\n  float tmpvar_4;\n  tmpvar_4 = clamp (inversesqrt(dot (xlat_mutablersufo, xlat_mutablersufo)), 0.0, 1.0);\n  ufo_1 = (vec3(tmpvar_4) * vec3(tmpvar_4));\n  ufo_1 = (ufo_1 * float((\n    dot (ufo_1, vec3(0.32, 0.49, 0.29))\n   >= 0.05)));\n  vec2 tmpvar_5;\n  tmpvar_5 = normalize(xlat_mutablersufo);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0) / max (abs(\n    (tmpvar_5.x / tmpvar_5.y)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((tmpvar_5.x / tmpvar_5.y)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((tmpvar_5.x / tmpvar_5.y)));\n  if ((abs(tmpvar_5.y) > (1e-08 * abs(tmpvar_5.x)))) {\n    if ((tmpvar_5.y < 0.0)) {\n      if ((tmpvar_5.x >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(tmpvar_5.x) * 1.570796);\n  };\n  float tmpvar_9;\n  tmpvar_9 = (sqrt(dot (xlat_mutablersufo, xlat_mutablersufo)) - 4.0);\n  ret_2 = ((ufo_1 * vec3(0.21, 0.4, 0.8)) + ((\n    clamp ((0.002 / (tmpvar_9 * tmpvar_9)), 0.0, 1.0)\n   * \n    sin(((tmpvar_6 * 16.0) + (time * 12.0)))\n  ) * (0.1 + \n    (q22 / 4.0)\n  )));\n  vec2 tmpvar_10;\n  tmpvar_10.y = -0.0035;\n  tmpvar_10.x = -(q13);\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_main, (uv_orig - tmpvar_10));\n  ret_2 = (ret_2 + ((\n    (vec3(0.0, 0.4, 0.4) * (1.0 + dot (tmpvar_11.xyz, vec3(0.32, 0.49, 0.29))))\n   * tmpvar_11.xyz) - 0.01));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_2;\n  ret = tmpvar_12.xyz;\n}\n\n","comp":"vec3 xlat_mutableclouds;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv5;\nvec2 xlat_mutableuv_wat;\nvec3 xlat_mutablewater;\nfloat xlat_mutablez;\nshader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = (rand_preset.x - 0.5);\n  tmpvar_1.y = (rand_preset.y * 0.2);\n  vec3 ret_2;\n  xlat_mutableuv1 = ((uv - vec2(0.5, 0.4)) * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\n  xlat_mutablez = (0.5 / xlat_mutableuv1.y);\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers0.y = xlat_mutablez;\n  vec2 tmpvar_4;\n  tmpvar_4.y = 2.7;\n  tmpvar_4.x = (0.15 + (0.3 * q5));\n  vec2 x_5;\n  x_5 = (xlat_mutablers0 - tmpvar_4);\n  float tmpvar_6;\n  tmpvar_6 = (2.0 * sqrt(dot (x_5, x_5)));\n  xlat_mutablers0 = (xlat_mutablers0 - tmpvar_6);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (xlat_mutablers0.x + (time / -2.0));\n  tmpvar_7.y = (xlat_mutablers0.y + (time / 2.0));\n  xlat_mutablers = (tmpvar_7 * tmpvar_3);\n  xlat_mutablewater = ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, (\n    (xlat_mutablers / 4.0)\n   + \n    (time / -8.0)\n  ))).xyz - 1.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = xlat_mutableuv1.x;\n  tmpvar_8.y = abs(xlat_mutableuv1.y);\n  xlat_mutableuv_wat = (tmpvar_8 - ((\n    (xlat_mutablewater / xlat_mutablez)\n   * 0.1) * tmpvar_3).xy);\n  vec2 tmpvar_9;\n  tmpvar_9.x = xlat_mutableuv1.x;\n  tmpvar_9.y = abs((xlat_mutableuv1.y - 0.45));\n  vec2 tmpvar_10;\n  tmpvar_10.x = xlat_mutableuv1.x;\n  tmpvar_10.y = abs(xlat_mutableuv1.y);\n  vec2 x_11;\n  x_11 = (xlat_mutableuv_wat - tmpvar_1);\n  vec3 tmpvar_12;\n  tmpvar_12 = clamp (vec3((0.013 / sqrt(\n    dot (x_11, x_11)\n  ))), 0.0, 1.0);\n  vec2 tmpvar_13;\n  tmpvar_13 = fract(((\n    (aspect.yx * tmpvar_9)\n   - \n    (((xlat_mutablewater / xlat_mutablez) * 0.1) * clamp ((16.0 * (xlat_mutableuv1.y - 0.18)), 0.0, 1.0))\n  .xy) + vec2(0.5, 0.0)));\n  xlat_mutableclouds = ((texture (sampler_main, tmpvar_13) * 2.0).xyz + ((texture (sampler_blur1, tmpvar_13).xyz * scale1) + bias1));\n  vec2 tmpvar_14;\n  tmpvar_14.x = 0.0;\n  tmpvar_14.y = (time * 1e-05);\n  xlat_mutableuv5 = ((xlat_mutableuv_wat / 6.0) + tmpvar_14);\n  vec2 tmpvar_15;\n  tmpvar_15.y = 0.0;\n  tmpvar_15.x = (xlat_mutableuv5.x / 4.0);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (xlat_mutableuv5.x * 4.0);\n  tmpvar_16.y = (xlat_mutableuv5.y * 64.0);\n  vec3 tmpvar_17;\n  tmpvar_17 = clamp ((1.0 - vec3((\n    ((((\n      abs(xlat_mutableuv_wat.y)\n     * 8.0) / abs(\n      (4.0 - (4.0 * (uv.x + rand_preset)))\n    ).x) * (1.0 + texture (sampler_noise_lq, vec2((xlat_mutableuv5.x / 4.0))).x)) * (1.0 + (0.5 * texture (sampler_noise_lq, (tmpvar_15 * 18.0)).x)))\n   * \n    (1.0 + (0.5 * texture (sampler_noise_lq, (tmpvar_16 * 4.0)).x))\n  ))), 0.0, 1.0);\n  vec2 tmpvar_18;\n  tmpvar_18 = ((64.0 * (\n    ((tmpvar_10 - ((\n      (xlat_mutablewater / xlat_mutablez)\n     * 0.02) * tmpvar_3).xy) * aspect.xy)\n   * mat2(0.7, -0.7, 0.7, 0.7))) + (time * 0.25));\n  vec2 tmpvar_19;\n  tmpvar_19 = abs((fract(tmpvar_18) - 0.5));\n  vec3 tmpvar_20;\n  tmpvar_20 = clamp (((0.3 / \n    sqrt(dot (tmpvar_19, tmpvar_19))\n  ) * vec3((texture (sampler_pw_noise_lq, \n    (tmpvar_18 / 256.0)\n  ).y - 0.9))), 0.0, 1.0);\n  vec2 x_21;\n  x_21 = (sin((\n    (2.0 * xlat_mutablers)\n   - \n    (2.0 * time)\n  )) - 0.21);\n  float tmpvar_22;\n  tmpvar_22 = clamp ((1.0 - dot (vec3(\n    (xlat_mutableclouds.x * 16.0)\n  ), vec3(0.32, 0.49, 0.29))), 0.0, 1.0);\n  ret_2 = (((\n    clamp (((clamp (\n      (vec3(0.0408, 0.0816, 0.204) * (1.0 - xlat_mutableuv_wat.y))\n    , 0.0, 1.0) - (xlat_mutableclouds * 2.0)) + tmpvar_12), 0.0, 1.0)\n   * \n    clamp (1.0, 0.0, 1.0)\n  ) + (\n    (tmpvar_20.x * tmpvar_20.x)\n   * \n    (1.0 - (0.5 * tmpvar_3))\n  )) + (clamp (\n    ((0.1 / sqrt(dot (x_21, x_21))) * vec3(0.1, 0.2, 0.0))\n  , 0.0, 1.0) * tmpvar_3));\n  vec3 tmpvar_23;\n  tmpvar_23.x = (xlat_mutableclouds.x * 0.3);\n  tmpvar_23.yz = xlat_mutableclouds.yz;\n  ret_2 = (((\n    (max ((ret_2 * clamp (\n      (1.0 - (tmpvar_17 * 4.0))\n    , 0.0, 1.0)), clamp ((\n      ((vec3(4.0, 8.0, 4.8) * (1.0 - tmpvar_17)) * ((abs(\n        dFdx(tmpvar_17)\n      ) + abs(\n        dFdy(tmpvar_17)\n      )) * sqrt(tmpvar_12)))\n     * \n      (1.0 - (tmpvar_3 * 0.7))\n    ), 0.0, 1.0)) * tmpvar_22)\n   + tmpvar_23) + (\n    (vec3(0.0, 4.0, 4.0) * ((clamp (\n      (1.0 - sqrt((tmpvar_6 / 2.0)))\n    , 0.0, 1.0) * tmpvar_3) * texture (sampler_main, vec2(0.7, 0.3)).xyz))\n   * tmpvar_22)) + ((\n    clamp ((1.0 - sqrt((tmpvar_6 / 3.0))), 0.0, 1.0)\n   * tmpvar_22) * 0.2));\n  vec4 tmpvar_24;\n  tmpvar_24.w = 1.0;\n  tmpvar_24.xyz = ret_2;\n  ret = tmpvar_24.xyz;\n}\n\n"}