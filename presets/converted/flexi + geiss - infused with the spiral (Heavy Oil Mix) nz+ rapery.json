{"baseVals":{"rating":2,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":0.01,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":4.28632,"fshader":1,"warp":0.01743,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.789,"ang":0.6283,"tex_zoom":1.17257,"r":0,"g":1,"border_a":0},"init_eqs_str":"m.an = 0;\nm.vx=0; m.vy=0;\n\t\t\tm.rkeys = ['an'];","frame_eqs_str":"m.rad=(0.65+(m.bass*0.1)); m.an=((m.an*0.99)+((m.bass-m.treb)*0.1)); m.ang=((m.an*0.1)+0.6);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"m.trans = 0;\nm.trans2 = 0;\nm.q30 = 0;\nm.trans3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((div(rand(Math.floor(m.q30)),15)+m.instance)-m.instance); m.trans2=((div(rand(Math.floor(m.q30)),15)+m.instance)-m.instance); m.trans3=((div(rand(Math.floor(m.q30)),15)+m.instance)-m.instance); m.a=m.trans; m.x=(((0.5+(((Math.floor(rand(15))*0.01)*m.bass_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.y=(((0.5+(((Math.floor(rand(15))*0.01)*m.bass_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.rad=(((0.09+div(rand(Math.floor(m.q30)),15))+m.instance)-m.instance); m.r=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.g=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.b=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.r2=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.g2=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.b2=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.border_r=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.border_g=(((rand(m.q30)*0.1)+m.instance)-m.instance); m.border_b=(((rand(m.q30)*0.1)+m.instance)-m.instance);"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.01,"tex_ang":0.62832,"r":0,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.t1 = 0;\nm.pi23 = 0;\nm.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.tan(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=(1-m.mx); m.y=(1-m.my); m.ang=((Math.sin((m.time*0.35))+1)*3); m.pi23=((4*Math.asin(1))*0.333333333); m.t1=((m.bass+m.mid)+m.treb);"}],"waves":[{"baseVals":{"enabled":1,"samples":495,"sep":4,"spectrum":1,"thick":1,"additive":1,"scaling":100,"smoothing":1,"r":0,"g":0.04,"b":0,"a":0.99},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.n = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.t5 = 0;\nm.w2 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.q6 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.t3 = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.t6 = 0;\nm.my_y = 0;\nm.pi = 0;\nm.q4 = 0;\nm.t7 = 0;\nm.rd = 0;\nm.w1 = 0;\nm.x2 = 0;\nm.t2 = 0;\nm.l = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.ab=1;\n\t\t\tm.rkeys = ['t7'];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.t8=0.07; m.t7=1;","point_eqs_str":"m.t7=-m.t7; m.pi=Math.asin(1); m.n=180; m.rd=0.075; m.my_x=((Math.sin((((m.sample*m.pi)*4)+((m.t7+1)*m.t8)))*0.5)+((Math.cos(((m.sample*m.pi)*m.n))*m.rd)*Math.sin((((m.sample*m.pi)*4)+((m.t7+1)*m.t8))))); m.my_y=((Math.cos((((m.sample*m.pi)*4)+((m.t7+1)*m.t8)))*0.5)+((Math.cos(((m.sample*m.pi)*m.n))*m.rd)*Math.cos((((m.sample*m.pi)*4)+((m.t7+1)*m.t8))))); m.my_z=(Math.sin(((m.sample*m.pi)*m.n))*m.rd); m.d=1.4; m.zoom=0.65; m.w1=m.q2; m.w2=m.q3; m.w3=m.q4; m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.x=(0.5+m.my_x); m.y=(0.5+m.my_y); m.b=(-m.z3+0.5); m.b=(Math.min(1, Math.max(0, m.b))*0.5); m.r=(1-(m.b*2));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.n = 0;\nm.mq1 = 0;\nm.n2 = 0;\nm.q25 = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q29 = 0;\nm.j3 = 0;\nm.q1 = 0;\nm.mq31 = 0;\nm.q5 = 0;\nm.mq21 = 0;\nm.n1 = 0;\nm.mq24 = 0;\nm.q9 = 0;\nm.v = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.mq23 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.atime = 0;\nm.q4 = 0;\nm.j2 = 0;\nm.q26 = 0;\nm.k = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.mq22 = 0;\nm.vol = 0;\nm.mq26 = 0;\nm.j1 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.chng=Math.sin((m.time*0.5)); m.cthr=0.9999; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq29)); m.mq31=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq31)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q31=m.mq31; m.monitor=m.mq1; m.vol=((m.bass+m.treb)+m.mid); m.atime=(m.atime+m.vol); m.q11=(0.4+(Math.sin((m.atime*0.006))*0.4)); m.q12=(0.4+(Math.cos((m.atime*0.00613828348))*0.4)); m.q13=(0.4+(Math.sin((m.atime*0.00598593455))*0.4)); m.monitor=m.q13; m.q1=0; m.v=0.4; m.j1=((m.j1*0.95)+(sqr((m.bass*4))*m.v)); m.j2=((m.j2*0.95)+(sqr((m.mid*4))*m.v)); m.j3=((m.j3*0.95)+(sqr((m.treb*4))*m.v)); m.n=(m.n+(m.j1*0.0052)); m.n1=(m.n1+(m.j2*0.0052)); m.n2=(m.n2+(m.j3*0.0052)); m.q2=(m.n*0.01); m.q3=(m.n1*0.01); m.q4=(m.n2*0.01); m.k=((m.k*0.99)+sqr((m.mid_att*2))); m.q5=(m.k*0.00); m.zoom=1.0016; m.warp=0; m.rot=-0.00; m.q9=m.aspectx; m.q10=m.aspecty; m.q30=((m.bass+m.treb)+m.mid);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur2, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale2) + bias2)).z;\n  tmpvar_3.y = -(((\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale2)\n   + bias2)).z);\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + ((tmpvar_3 * texsize.zw) * 60.0));\n  vec2 x_5;\n  x_5 = (tmpvar_4 - uv);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, uv);\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_1.z = (((texture (sampler_main, tmpvar_4).z + \n    (((tmpvar_6.z - (\n      (tmpvar_7.xyz * scale1)\n     + bias1).z) * 200.0) * sqrt(dot (x_5, x_5)))\n  ) * 0.96) - 0.02);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_8.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv_orig + ((tmpvar_8 * texsize.zw) * 6.0));\n  ret_1.y = ((texture (sampler_main, tmpvar_9).y + (\n    (tmpvar_6.y - ((tmpvar_7.xyz * scale1) + bias1).y)\n   * 0.1)) - 0.016);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_9.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_1.x > (q21 * q13)) && (ret_1.x <= (q24 * q11)))) {\n    ret_1.y = (ret_1.y + (tmpvar_10.x * 0.5));\n  };\n  if (((ret_1.y > (q22 * q11)) && (ret_1.y <= (q25 * q12)))) {\n    ret_1.z = (ret_1.z + (tmpvar_10.y * 0.5));\n  };\n  if (((ret_1.z > (q23 * q12)) && (ret_1.z <= (q26 * q13)))) {\n    ret_1.x = (ret_1.x + (tmpvar_10.z * 0.5));\n  };\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = tmpvar_2.xyz;\n  vec3 tmpvar_3;\n  tmpvar_3.z = 0.0;\n  tmpvar_3.xy = texsize.zw;\n  vec3 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 2.5);\n  float tmpvar_5;\n  tmpvar_5 = dot (((texture (sampler_blur1, \n    (uv + tmpvar_4.xz)\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\n  float tmpvar_6;\n  tmpvar_6 = dot (((texture (sampler_blur1, \n    (uv - tmpvar_4.xz)\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\n  float tmpvar_7;\n  tmpvar_7 = dot (((texture (sampler_blur1, \n    (uv + tmpvar_4.zy)\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\n  float tmpvar_8;\n  tmpvar_8 = dot (((texture (sampler_blur1, \n    (uv - tmpvar_4.zy)\n  ).xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((tmpvar_2.x > (q26 * q13)) && (tmpvar_2.x <= (q23 * q11)))) {\n    ret_1.z = (tmpvar_2.z - (tmpvar_9.x * 0.5));\n  };\n  if (((tmpvar_2.y > (q25 * q11)) && (tmpvar_2.y <= (q22 * q12)))) {\n    ret_1.x = (tmpvar_2.x - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * q12)) && (ret_1.z <= (q21 * q13)))) {\n    ret_1.y = (tmpvar_2.y - (tmpvar_9.z * 0.5));\n  };\n  ret_1 = (ret_1 * 0.5);\n  ret_1 = (ret_1 + (vec3(3.4, 2.38, 1.02) * (tmpvar_5 - tmpvar_6)));\n  ret_1 = (ret_1 + (vec3(0.68, 1.7, 2.38) * (tmpvar_7 - tmpvar_8)));\n  float tmpvar_10;\n  tmpvar_10 = dot (ret_1, vec3(0.32, 0.49, 0.29));\n  if ((tmpvar_10 > 0.6)) {\n    vec4 tmpvar_11;\n    tmpvar_11.w = 0.0;\n    tmpvar_11.xyz = ret_1;\n    ret_1 = (mix (tmpvar_11, texture (sampler_noise_lq, (uv * 10.0)), vec4(0.1, 0.1, 0.1, 0.1)) * 1.1).xyz;\n  };\n  ret_1 = (ret_1 * ret_1);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 0.0;\n  tmpvar_12.xyz = ret_1;\n  vec4 tmpvar_13;\n  tmpvar_13 = mix (vec4(dot (ret_1, vec3(0.32, 0.49, 0.29))), ((\n    (2.0 * dot (ret_1, vec3(0.32, 0.49, 0.29)))\n   * rand_preset) * dot (\n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  , vec3(0.32, 0.49, 0.29))), pow (rand_preset, tmpvar_12));\n  ret_1 = (tmpvar_13.xyz * (5.0 * sqrt(tmpvar_13.xyz)));\n  vec4 tmpvar_14;\n  tmpvar_14.w = 1.0;\n  tmpvar_14.xyz = ret_1;\n  ret = tmpvar_14.xyz;\n}\n\n"}