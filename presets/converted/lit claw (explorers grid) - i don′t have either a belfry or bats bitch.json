{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.05741,"zoom":1.0095,"warp":0.00909,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"textured":1,"num_inst":311,"rad":0.0334,"tex_ang":0.62832,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.t1 = 0;\nm.pi23 = 0;\nm.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['my','ma','mx'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.tan(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=(1-m.mx); m.y=(1-m.my); m.ang=((Math.sin((m.time*0.35))+1)*3); m.a=above(((m.bass+m.mid)+m.treb), 0.8); m.pi23=((4*Math.asin(1))*0.333333333); m.t1=((m.bass+m.mid)+m.treb); m.r=((Math.sin((((m.time*0.3)+m.t1)-(0*m.pi23)))+1)*0.5); m.g=((Math.sin((((m.time*0.3)+m.t1)-(1*m.pi23)))+1)*0.5); m.b=((Math.sin((((m.time*0.3)+m.t1)-(2*m.pi23)))+1)*0.5); m.r2=((Math.sin((((m.time*0.3)+m.t1)-(0*m.pi23)))+1)*0.5); m.g2=((Math.sin((((m.time*0.3)+m.t1)-(1*m.pi23)))+1)*0.5); m.b2=((Math.sin((((m.time*0.3)+m.t1)-(2*m.pi23)))+1)*0.5);"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"num_inst":281,"rad":0.01,"g":1,"b":1,"r2":1,"g2":0,"b2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.pi23 = 0;\nm.my = 0;\nm.ma = 0;\nm.mx = 0;\nm.t2 = 0;\n\n\t\t\tm.rkeys = ['my','ma','mx'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.05)*m.bass)); m.ma=(m.ma-(((above(m.mid, 1)*3.1415)*0.05)*m.mid)); m.mx=(m.mx+(0.0001*Math.tan(m.ma))); m.my=(m.my+(0.0001*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=(1-m.mx); m.y=(1-m.my); m.ang=((Math.sin((m.time*0.30))+1)*3.3); m.a=above(((m.bass+m.mid)+m.treb), 0.8); m.pi23=((4*Math.asin(1))*0.333333333); m.t2=0; m.r=((Math.sin((((m.time*0.3)+m.t2)-(0*m.pi23)))+1)*0.5); m.g=((Math.sin((((m.time*0.3)+m.t2)-(1*m.pi23)))+1)*0.5); m.b=((Math.sin((((m.time*0.3)+m.t2)-(2*m.pi23)))+1)*0.5); m.r2=((Math.sin((((m.time*0.3)+m.t2)-(0*m.pi23)))+1)*0.5); m.g2=((Math.sin((((m.time*0.3)+m.t2)-(1*m.pi23)))+1)*0.5); m.b2=((Math.sin((((m.time*0.3)+m.t2)-(2*m.pi23)))+1)*0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.t1 = 0;\nm.pi23 = 0;\nm.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['my','ma','mx'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.tan(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=(1-m.mx); m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.8); m.pi23=((4*Math.asin(1))*0.333333333); m.t1=((m.bass+m.mid)+m.treb); m.r=((Math.sin((((m.time*0.3)+m.t1)-(0*m.pi23)))+1)*0.5); m.g=((Math.sin((((m.time*0.3)+m.t1)-(1*m.pi23)))+1)*0.5); m.b=((Math.sin((((m.time*0.3)+m.t1)-(2*m.pi23)))+1)*0.5);"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.t1 = 0;\nm.pi23 = 0;\nm.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['my','ma','mx'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.05)*m.bass)); m.ma=(m.ma-(((above(m.mid, 1)*3.1415)*0.05)*m.mid)); m.mx=(m.mx+(0.0001*Math.tan(m.ma))); m.my=(m.my+(0.0001*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=(1-m.mx); m.y=(1-m.my); m.a=above(((m.bass+m.mid)+m.treb), 0.1); m.pi23=((4*Math.asin(1))*0.333333333); m.t1=((m.bass+m.mid)+m.treb); m.r=((Math.sin((((m.time*0.3)+m.t1)-(0*m.pi23)))+1)*0.5); m.g=((Math.sin((((m.time*0.3)+m.t1)-(1*m.pi23)))+1)*0.5); m.b=((Math.sin((((m.time*0.3)+m.t1)-(2*m.pi23)))+1)*0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.n = 0;\nm.y1 = 0;\nm.n2 = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.x1 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.j3 = 0;\nm.dy1 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.n1 = 0;\nm.dz1 = 0;\nm.v = 0;\nm.q11 = 0;\nm.dd = 0;\nm.q4 = 0;\nm.a = 0;\nm.j2 = 0;\nm.q16 = 0;\nm.b = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.vol = 0;\nm.dx1 = 0;\nm.j1 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.c = 0;\nm.q20 = 0;\nm.voltime = 0;\nm.x1=2; m.y1=2; m.z1=2;","frame_eqs_str":"m.q1=m.aspectx; m.q2=m.aspecty; m.wave_a=0; m.v=0.5; m.j1=((m.j1*0.95)+(sqr((m.bass*4))*m.v)); m.j2=((m.j2*0.95)+(sqr((m.mid*4))*m.v)); m.j3=((m.j3*0.95)+(sqr((m.treb*4))*m.v)); m.n=(m.n+(m.j1*0.0052)); m.n1=(m.n1+(m.j2*0.0052)); m.n2=(m.n2+(m.j3*0.0052)); m.q3=(m.n*0.01); m.q4=(m.n1*0.01); m.q5=(m.n2*0.01); m.a=10; m.b=28; m.c=div(9,5); m.dx1=(m.a*(m.y1-m.x1)); m.dy1=((m.x1*(m.b-m.z1))-m.y1); m.dz1=((m.x1*m.y1)-(m.c*m.z1)); m.d=1; m.dd=sqrt((((m.dx1*m.dx1)+(m.dy1*m.dy1))+(m.dz1*m.dz1))); m.x1=(m.x1+div((m.d*m.dx1),m.dd)); m.y1=(m.y1+div((m.d*m.dy1),m.dd)); m.z1=(m.z1+div((m.d*m.dz1),m.dd)); m.q11=m.x1; m.q12=m.y1; m.q13=m.z1; m.q14=m.a; m.q15=m.b; m.q16=m.c; m.q17=m.d; m.vol=(((m.bass_att+m.treb_att)+m.mid_att)*0.25); m.vol=(m.vol*m.vol); m.voltime=(m.voltime+(0.1*m.vol)); m.q32=(0.4*m.voltime); m.q18=(0.5+(0.5*Math.sin((0.1134*m.q32)))); m.q19=(0.6+(0.4*Math.cos((0.1312*m.q32)))); m.q20=(0.5+(0.5*Math.sin((0.174*m.q32)))); m.q21=(0.5+(0.4*Math.sin((0.154*m.q32))));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - 0.5);\n  tmpvar_1.xyz = (texture (sampler_main, ((\n    ((tmpvar_2 * 0.99) + 0.5)\n   + \n    (((texture (sampler_blur1, (\n      (tmpvar_2 * 0.9)\n     + 0.5)).xyz * scale1) + bias1) * 0.1)\n  .xy) - 0.01)).xyz - 0.002);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"vec2 xlat_mutablec1;\nfloat xlat_mutablecutoff;\nvec2 xlat_mutabledenominator;\nvec2 xlat_mutablefraction;\nvec2 xlat_mutablenumerator;\nfloat xlat_mutables1;\nshader_body\n{\n  xlat_mutablec1 = c1;\n  xlat_mutabledenominator = denominator;\n  xlat_mutablefraction = fraction;\n  xlat_mutablenumerator = numerator;\n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * 4.0));\n  xlat_mutablecutoff = 1.0;\n  xlat_mutablen1 = 1;\n  xlat_mutables1 = 0.33;\n  xlat_mutabledepth = 3;\n  for (int i_3 = 0; i_3 < xlat_mutabledepth; i_3++) {\n    xlat_mutablec1 = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_4;\n    tmpvar_4.x = q21;\n    tmpvar_4.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec1 + tmpvar_4) * 64.0);\n    vec2 tmpvar_5;\n    tmpvar_5.x = q23;\n    tmpvar_5.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec1 + tmpvar_5);\n    vec2 tmpvar_6;\n    tmpvar_6.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_6.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_6 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec1 = (xlat_mutablefraction - 0.5);\n    float tmpvar_7;\n    float tmpvar_8;\n    tmpvar_8 = (min (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0));\n    float tmpvar_9;\n    tmpvar_9 = (tmpvar_8 * tmpvar_8);\n    tmpvar_9 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_9) + 0.05368138) * tmpvar_9) - 0.1173503)\n       * tmpvar_9) + 0.1938925) * tmpvar_9) - 0.3326756)\n     * tmpvar_9) + 0.9999793) * tmpvar_8);\n    tmpvar_9 = (tmpvar_9 + (float(\n      (abs((xlat_mutablec1.x / xlat_mutablec1.y)) > 1.0)\n    ) * (\n      (tmpvar_9 * -2.0)\n     + 1.570796)));\n    tmpvar_7 = (tmpvar_9 * sign((xlat_mutablec1.x / xlat_mutablec1.y)));\n    if ((abs(xlat_mutablec1.y) > (1e-08 * abs(xlat_mutablec1.x)))) {\n      if ((xlat_mutablec1.y < 0.0)) {\n        if ((xlat_mutablec1.x >= 0.0)) {\n          tmpvar_7 += 3.141593;\n        } else {\n          tmpvar_7 = (tmpvar_7 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_7 = (sign(xlat_mutablec1.x) * 1.570796);\n    };\n    vec2 tmpvar_10;\n    tmpvar_10.x = ((0.3183098 * (\n      float(xlat_mutablen1)\n     * tmpvar_7)) + q26);\n    tmpvar_10.y = (((xlat_mutables1 * aspect.w) * log(\n      sqrt(dot (xlat_mutablec1, xlat_mutablec1))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_10 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  uv_1 = (0.5 + (uv_1 - 0.5));\n  xlat_mutablecutoff = 1.0;\n  xlat_mutablen1 = 4;\n  xlat_mutables1 = 1.5;\n  xlat_mutabledepth = 1;\n  for (int i_1_2 = 0; i_1_2 < xlat_mutabledepth; i_1_2++) {\n    xlat_mutablec1 = (((uv_1 - 0.5) * 2.0) * aspect.wz);\n    vec2 tmpvar_11;\n    tmpvar_11.x = q21;\n    tmpvar_11.y = q22;\n    xlat_mutablenumerator = ((xlat_mutablec1 + tmpvar_11) * 64.0);\n    vec2 tmpvar_12;\n    tmpvar_12.x = q23;\n    tmpvar_12.y = q24;\n    xlat_mutabledenominator = (xlat_mutablec1 + tmpvar_12);\n    vec2 tmpvar_13;\n    tmpvar_13.x = ((xlat_mutablenumerator.x * xlat_mutabledenominator.x) + (xlat_mutablenumerator.y * xlat_mutabledenominator.y));\n    tmpvar_13.y = ((xlat_mutablenumerator.y * xlat_mutabledenominator.x) - (xlat_mutablenumerator.x * xlat_mutabledenominator.y));\n    xlat_mutablefraction = (tmpvar_13 / ((xlat_mutabledenominator.x * xlat_mutabledenominator.x) + (xlat_mutabledenominator.y * xlat_mutabledenominator.y)));\n    xlat_mutablec1 = (xlat_mutablefraction - 0.5);\n    float tmpvar_14;\n    float tmpvar_15;\n    tmpvar_15 = (min (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0) / max (abs(\n      (xlat_mutablec1.x / xlat_mutablec1.y)\n    ), 1.0));\n    float tmpvar_16;\n    tmpvar_16 = (tmpvar_15 * tmpvar_15);\n    tmpvar_16 = (((\n      ((((\n        ((((-0.01213232 * tmpvar_16) + 0.05368138) * tmpvar_16) - 0.1173503)\n       * tmpvar_16) + 0.1938925) * tmpvar_16) - 0.3326756)\n     * tmpvar_16) + 0.9999793) * tmpvar_15);\n    tmpvar_16 = (tmpvar_16 + (float(\n      (abs((xlat_mutablec1.x / xlat_mutablec1.y)) > 1.0)\n    ) * (\n      (tmpvar_16 * -2.0)\n     + 1.570796)));\n    tmpvar_14 = (tmpvar_16 * sign((xlat_mutablec1.x / xlat_mutablec1.y)));\n    if ((abs(xlat_mutablec1.y) > (1e-08 * abs(xlat_mutablec1.x)))) {\n      if ((xlat_mutablec1.y < 0.0)) {\n        if ((xlat_mutablec1.x >= 0.0)) {\n          tmpvar_14 += 3.141593;\n        } else {\n          tmpvar_14 = (tmpvar_14 - 3.141593);\n        };\n      };\n    } else {\n      tmpvar_14 = (sign(xlat_mutablec1.x) * 1.570796);\n    };\n    vec2 tmpvar_17;\n    tmpvar_17.x = ((0.3183098 * (\n      float(xlat_mutablen1)\n     * tmpvar_14)) + q26);\n    tmpvar_17.y = (((xlat_mutables1 * aspect.w) * log(\n      sqrt(dot (xlat_mutablec1, xlat_mutablec1))\n    )) + q27);\n    uv_1 = (0.5 + ((0.5 - \n      abs(((fract(\n        (tmpvar_17 * 0.5)\n      ) * 2.0) - 1.0))\n    ) * xlat_mutablecutoff));\n  };\n  vec4 tmpvar_18;\n  tmpvar_18.w = 1.0;\n  tmpvar_18.xyz = ((texture (sampler_main, uv_1).xyz * 0.4) + ((\n    (texture (sampler_blur2, uv_1).xyz * scale2)\n   + bias2) * 1.75));\n  ret = tmpvar_18.xyz;\n}\n\n"}