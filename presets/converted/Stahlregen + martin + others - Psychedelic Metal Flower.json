{"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.955,"modwavealphabyvolume":1,"wrap":0,"darken":1,"solarize":1,"wave_a":1.059,"wave_scale":0.706,"wave_smoothing":0.126,"wave_mystery":-0.28,"modwavealphastart":0.81,"modwavealphaend":1.35,"warpanimspeed":5.278,"warpscale":0.01,"zoomexp":0.29999,"zoom":1.05101,"warp":0.01,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0.005,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"g":0.5,"g2":0.5,"a2":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.trans = 0;\nm.num_instance = 0;\nm.instance_counter = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((equal(m.q3, 3)!=0)?(0.15):(0)); m.a=m.trans; m.a2=m.trans; m.border_a=0; m.instance_counter=((3.14*m.instance)*div(2,m.num_instance)); m.x=(m.q1+(((0.1+(0.1*m.treb_att))*div(1,m.q5))*Math.sin(m.instance_counter))); m.y=(m.q2+(((0.1+(0.1*m.treb_att))*div(1,m.q4))*Math.cos(m.instance_counter)));"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0,"b":0.5,"g2":0,"b2":0.5,"a2":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.trans = 0;\nm.num_instance = 0;\nm.instance_counter = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((equal(m.q3, 6)!=0)?(0.15):(0)); m.a=m.trans; m.a2=m.trans; m.border_a=0; m.instance_counter=((3.14*m.instance)*div(2,m.num_instance)); m.x=(m.q1+(((0.1+(0.1*m.mid_att))*div(1,m.q5))*Math.sin(m.instance_counter))); m.y=(m.q2+(((0.1+(0.1*m.mid_att))*div(1,m.q4))*Math.cos(m.instance_counter)));"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":22,"rad":0.12953,"r":0.5,"r2":0.5,"g2":0,"a2":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q5 = 0;\nm.trans = 0;\nm.num_instance = 0;\nm.instance_counter = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((equal(m.q3, 9)!=0)?(0.15):(0)); m.a=m.trans; m.a2=m.trans; m.border_a=0; m.instance_counter=((3.14*m.instance)*div(2,m.num_instance)); m.x=(m.q1+(((0.1+(0.1*m.bass_att))*div(1,m.q5))*Math.sin(m.instance_counter))); m.y=(m.q2+(((0.1+(0.1*m.bass_att))*div(1,m.q4))*Math.cos(m.instance_counter)));"},{"baseVals":{"enabled":1,"sides":100,"textured":1,"rad":0.25481,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.count = 0;\nm.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.q4 = 0;\nm.q5 = 0;","frame_eqs_str":"m.count=((below(m.count, 9)!=0)?((m.count+1)):(0)); m.q1=0.5; m.q2=0.5; m.q3=m.count; m.q4=m.aspectx; m.q5=m.aspecty;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur2, \n    (uv + vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0009, 0.0))\n  ).xyz * scale2) + bias2)).y;\n  tmpvar_2.y = (((texture (sampler_blur2, \n    (uv + vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv - vec2(0.0, 0.0009))\n  ).xyz * scale2) + bias2)).y;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - (tmpvar_2 * 0.01));\n  ret_1.y = texture (sampler_fc_main, (tmpvar_3 - floor(tmpvar_3))).y;\n  ret_1.y = (ret_1.y + ((ret_1.y - \n    ((texture (sampler_blur3, (tmpvar_3 - floor(tmpvar_3))).xyz * scale3) + bias3)\n  .y) * 0.1));\n  ret_1.y = (ret_1.y + 0.006);\n  ret_1.y = ret_1.y;\n  ret_1.x = ret_1.y;\n  ret_1.z = ret_1.y;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (dot ((\n    (-(tmpvar_2) / 4.0)\n   + \n    ((6.0 * vec3(clamp ((0.03 / \n      sqrt(dot (uv1_1, uv1_1))\n    ), 0.0, 1.0))) * (-0.08 + tmpvar_2))\n  ), vec3(0.32, 0.49, 0.29)) * rand_preset).xyz;\n  ret = tmpvar_6.xyz;\n}\n\n"}