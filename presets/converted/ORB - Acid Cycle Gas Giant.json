{"baseVals":{"rating":0,"decay":1,"echo_zoom":0.9996,"echo_alpha":0.5,"echo_orient":3,"invert":1,"wave_a":0.001,"warpscale":0.266718,"zoom":1.16,"rot":-0.04,"warp":0.000521,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"x":0.75,"y":0.75,"rad":0.741799,"tex_zoom":0.227462,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.tex_saw=0.4;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ang=(m.q1*0.2); m.tex_zoom=0.6;"},{"baseVals":{"enabled":1,"textured":1,"x":0.25,"y":0.75,"rad":0.741799,"tex_zoom":0.227462,"g":1,"b":1,"r2":1,"b2":1,"border_r":0,"border_g":0,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.tex_saw=0.4;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ang=(m.q1*0.2); m.tex_zoom=0.6;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.xx = 0;\nm.q1 = 0;\nm.q3 = 0;\nm.yy = 0;\nm.radi = 0;\n\n\t\t\tm.rkeys = ['xx','yy','radi'];","frame_eqs_str":"m.a=above(m.q3, 2); m.a2=(above(m.q3, 2)*0.8); m.xx=((above(m.q3, 5)!=0)?(m.xx):((rand(100)*0.01))); m.yy=((above(m.q3, 5)!=0)?(m.yy):((rand(100)*0.01))); m.radi=((above(m.q3, 5)!=0)?(m.radi):((rand(100)*0.01))); m.rad=m.radi; m.x=m.xx; m.y=m.yy; m.r=((0.5+(0.5*Math.sin((m.q1*1.22))))+0.1); m.g=(0.4+(0.4*Math.sin((m.q1*1.307)))); m.b=(0.4+(0.4*Math.sin((m.q1*1.959)))); m.r2=((0.5+(0.5*Math.sin((m.q1*1.622))))+0.1); m.g2=(0.4+(0.4*Math.sin((m.q1*1.507)))); m.b2=(0.4+(0.4*Math.sin((m.q1*1.6559))));"}],"waves":[{"baseVals":{"enabled":1,"a":0.5},"init_eqs_str":"m.q1 = 0;\nm.zd = 0;\nm.zs = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['zs','zd'];","frame_eqs_str":"","point_eqs_str":"m.zs=((below(m.zs, 1)!=0)?(9):(m.zs)); m.zs=((above(m.zs, 1100)!=0)?(1):(m.zs)); m.speed=(m.bass*0.002); m.zs=(m.zs+(Math.tan((m.q1*0.015))*m.speed)); m.zd=(m.zd+2); m.x=(0.5+(0.1*Math.cos((m.q1*m.zs)))); m.y=(0.5+(0.1*Math.sin((m.q1*m.zs)))); m.r=(0.5+(0.5*Math.sin((((m.q1*1.2)+m.x)+m.x)))); m.g=(0.5+(0.5*Math.sin((((m.q1*1.5)+m.x)+m.y)))); m.b=(0.5+(0.5*Math.sin((((m.q1*1.36)+m.y)+m.y))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.basstime = 0;\nm.stickybit = 0;\nm.f2 = 0;\nm.volavg2 = 0;\nm.f3 = 0;\nm.q1 = 0;\nm.fuzzy2 = 0;\nm.q9 = 0;\nm.sample1 = 0;\nm.f4 = 0;\nm.difftime = 0;\nm.diff = 0;\nm.sum_fuzzy = 0;\nm.edge = 0;\nm.state2 = 0;\nm.volavg = 0;\nm.bit2 = 0;\nm.fuzzy4 = 0;\nm.f1 = 0;\nm.state = 0;\nm.vol = 0;\nm.q2 = 0;\nm.spintime = 0;\nm.q3 = 0;\nm.basssum = 0;\nm.fuzzy3 = 0;\nm.sample2 = 0;\nm.fuzzy1 = 0;\nm.q8 = 0;\nm.spintime=0;","frame_eqs_str":"m.basstime=(m.basstime+(m.bass_att*0.03)); m.q1=m.basstime; m.vol=pow(((m.bass+m.mid)+m.treb), 2); m.basssum=m.vol; m.basstime=((below(m.basstime, 465)!=0)?(465):(m.basstime)); m.stickybit=mod(m.time,2); m.volavg=(m.volavg+(m.vol*equal(m.stickybit, 1))); m.sample1=(m.sample1+equal(m.stickybit, 1)); m.volavg2=(m.volavg2+(m.vol*equal(m.stickybit, 0))); m.sample2=(m.sample2+equal(m.stickybit, 0)); m.edge=bnot(equal(m.bit2, m.stickybit)); m.volavg=(m.volavg-((m.volavg*m.edge)*m.stickybit)); m.volavg2=(m.volavg2-((m.volavg2*m.edge)*equal(m.stickybit, 0))); m.sample1=(m.sample1-((m.sample1*m.edge)*m.stickybit)); m.sample2=(m.sample2-((m.sample2*m.edge)*equal(m.stickybit, 0))); m.diff=((equal(m.stickybit, 1)!=0)?(div(m.basssum,div(m.volavg2,m.sample2))):(0)); m.diff=((equal(m.stickybit, 0)!=0)?(div(m.basssum,div(m.volavg,m.sample1))):(m.diff)); m.q3=m.diff; m.bit2=mod(m.time,2); m.difftime=(m.difftime+(m.diff*0.03)); m.q2=m.difftime; m.difftime=((above(m.difftime, 2000)!=0)?(0):(m.difftime)); m.state=(m.state+above(m.diff, 10)); m.spintime=(m.spintime+((m.bass*0.03)*((equal(mod(m.state,2), 1)!=0)?(1):(-1)))); m.q8=m.spintime; m.state2=(m.state2+above(m.diff, 10)); m.state2=((above(m.state2, 10)!=0)?(1):(m.state2)); m.q9=m.state2; m.monitor=m.state2;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=(1.05-(m.q3*0.05)); m.rot=(Math.sin(m.rad)*0.01); m.warp=((2*m.zoom)*m.rad); m.fuzzy1=m.x; m.fuzzy3=(m.x-1); m.fuzzy2=m.y; m.fuzzy4=(m.y-1); m.f1=Math.sin((m.q2-1.5707)); m.f2=Math.sin(m.q2); m.f3=Math.sin((m.q2+1.5707)); m.f4=Math.sin((m.q2+3.14)); m.f1=(m.f1*above(m.f1, 0)); m.f2=(m.f2*above(m.f2, 0)); m.f3=(m.f3*above(m.f3, 0)); m.f4=(m.f4*above(m.f4, 0)); m.sum_fuzzy=((((m.fuzzy1*m.f1)+(m.fuzzy2*m.f2))-(m.fuzzy3*m.f3))-(m.fuzzy4*m.f4)); m.sum_fuzzy=(Math.cos(m.sum_fuzzy)*1.2); m.zoom=(1+(m.sum_fuzzy*0.05));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (normalize((\n    (texture (sampler_main, (((uv - 0.5) * 0.99) + 0.5)).xyz * 0.1)\n   + \n    (texture (sampler_main, uv).xyz * 0.9)\n  )) * 1.04);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n}\n\n"}