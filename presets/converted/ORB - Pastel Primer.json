{"baseVals":{"rating":5,"decay":0.9,"echo_zoom":1.007,"echo_alpha":0.5,"echo_orient":1,"wave_mode":1,"wrap":0,"brighten":1,"wave_a":0.001,"zoom":0.96,"rot":-18.84024,"warp":0.00052,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.9,"ob_g":0.5,"ob_a":0.1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0.1,"mv_x":64,"mv_y":48,"mv_l":4.95,"mv_r":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"r":0,"g":0,"b":0,"a":0.1},"init_eqs_str":"m.xs = 0;\nm.q1 = 0;\nm.v = 0;\nm.ys = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['xs','ys'];","frame_eqs_str":"","point_eqs_str":"m.q1=0; m.speed=(m.bass_att*0.3); m.v=((m.sample*10000)+((m.value2*m.bass)*0.1)); m.xs=(m.xs+((Math.sin(((m.v*0.1)+(Math.sin(m.v)*0.1)))*m.speed)*Math.atan((m.v*1.51)))); m.ys=(m.ys+((Math.sin(((m.v*0.1)+(Math.cos(m.v)*0.1)))*m.speed)*Math.atan(m.v))); m.x=(0.5+((0.5*Math.sin((m.xs*0.1)))*Math.cos(((m.time*1)+m.ys)))); m.y=(0.5+((0.5*Math.sin((m.ys*0.1)))*Math.cos(((m.time*1.1)+m.xs)))); m.r=(0.5+(0.5*Math.sin((m.q1*0.22)))); m.g=((0.5+(0.5*Math.sin((m.q1*0.307))))+m.x); m.xs=((above(m.xs, 1000)!=0)?(0):(m.xs)); m.ys=((above(m.ys, 1000)!=0)?(0):(m.ys));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.basstime = 0;\nm.stickybit = 0;\nm.volavg2 = 0;\nm.q1 = 0;\nm.sample1 = 0;\nm.difftime = 0;\nm.diff = 0;\nm.edge = 0;\nm.volavg = 0;\nm.bit2 = 0;\nm.vol = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.basssum = 0;\nm.sample2 = 0;","frame_eqs_str":"m.basstime=(m.basstime+(m.bass*0.06)); m.q1=m.basstime; m.basstime=((below(m.basstime, 1000)!=0)?(1000):(m.basstime)); m.vol=pow(((m.bass+m.mid)+m.treb), 2); m.basssum=m.vol; m.stickybit=mod(m.time,2); m.volavg=(m.volavg+(m.vol*equal(m.stickybit, 1))); m.sample1=(m.sample1+equal(m.stickybit, 1)); m.volavg2=(m.volavg2+(m.vol*equal(m.stickybit, 0))); m.sample2=(m.sample2+equal(m.stickybit, 0)); m.edge=bnot(equal(m.bit2, m.stickybit)); m.volavg=(m.volavg-((m.volavg*m.edge)*m.stickybit)); m.volavg2=(m.volavg2-((m.volavg2*m.edge)*equal(m.stickybit, 0))); m.sample1=(m.sample1-((m.sample1*m.edge)*m.stickybit)); m.sample2=(m.sample2-((m.sample2*m.edge)*equal(m.stickybit, 0))); m.diff=((equal(m.stickybit, 1)!=0)?(div(m.basssum,div(m.volavg2,m.sample2))):(0)); m.diff=((equal(m.stickybit, 0)!=0)?(div(m.basssum,div(m.volavg,m.sample1))):(m.diff)); m.q3=m.diff; m.bit2=mod(m.time,2); m.difftime=(m.difftime+(m.diff*0.03)); m.q2=m.difftime; m.difftime=((above(m.difftime, 2000)!=0)?(0):(m.difftime)); m.monitor=m.q1;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=0.98; m.rot=0;","warp":"shader_body\n{\n  vec2 uv_1;\n  vec3 color_2;\n  vec2 uv2_3;\n  uv2_3 = (uv + q3);\n  color_2 = ((texture (sampler_noise_lq, uv2_3) - 0.5).xyz + (texture (sampler_noise_mq, uv2_3) - 0.5).xyz);\n  color_2 = (color_2 + (texture (sampler_noise_hq, uv2_3) - 0.5).xyz);\n  uv_1 = (uv + (color_2 * 0.01).xy);\n  uv_1.y = (uv_1.y + (abs(\n    (color_2 * 0.01)\n  ) + (bass_att * 0.01)).x);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (texture (sampler_main, ((uv_1 * 0.95) + (\n    ((texture (sampler_blur1, ((\n      (uv_1 - 0.5)\n     * 0.9) + 0.5)).xyz * scale1) + bias1)\n   * 0.1).xy)).xyz - 0.01);\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 2.0);\n  ret = tmpvar_1.xyz;\n}\n\n"}