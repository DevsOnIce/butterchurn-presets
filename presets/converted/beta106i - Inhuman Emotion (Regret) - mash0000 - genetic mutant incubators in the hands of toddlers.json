{"baseVals":{"rating":0,"gammaadj":1,"decay":0.995,"echo_zoom":1,"echo_orient":3,"wave_mode":5,"wave_a":100,"wave_scale":0.721,"wave_smoothing":0.5,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":0.028,"warpscale":0.905,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.005,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":0,"mv_y":0,"mv_l":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.rg2 = 0;\nm.pfdx_r = 0;\nm.pfthresh = 0;\nm.thresh = 0;\nm.wx = 0;\nm.dy_r = 0;\nm.rg3 = 0;\nm.pfdy_r = 0;\nm.rg1 = 0;\nm.wy = 0;\nm.dx_r = 0;","frame_eqs_str":"m.wave_r=(0.5+(0.5*Math.sin((6*m.time)))); m.wave_g=(0.5+(0.5*Math.sin((4.1*m.time)))); m.wave_b=(-1+(((1-m.wave_r)+1)-m.wave_g)); m.warp=0; m.pfthresh=((above(m.bass_att, m.pfthresh)*2)+((1-above(m.bass_att, m.pfthresh))*(((m.pfthresh-1.3)*0.96)+1.3))); m.pfdx_r=(((equal(m.pfthresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.pfthresh, 2))*m.pfdx_r)); m.pfdy_r=(((equal(m.pfthresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.pfthresh, 2))*m.pfdy_r)); m.rg1=Math.abs(Math.sin(m.time)); m.rg2=((((-1*above(m.rg1, 0.75))-(0.66*below(m.rg1, 0.25)))-((0.33*above(m.rg1, 0.25))*below(m.rg1, 0.5)))-((0*above(m.rg1, 0.5))*below(m.rg1, 0.75))); m.rg3=((equal(m.pfthresh, 2)!=0)?(m.rg2):(m.rg3)); m.ob_r=(1-Math.abs(m.wave_r)); m.ob_b=(1-Math.abs(m.wave_b)); m.ob_g=(1-Math.abs(m.wave_g)); m.echo_alpha=(m.echo_alpha-m.rg3); m.echo_zoom=(m.echo_zoom+Math.sin(m.bass_att));\n\t\tm.rkeys = ['thresh','zoom','dy_r','dx','rot','warp','dx_r','dy'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.wx=((0.2*Math.cos(m.time))*m.x); m.wy=((0.2*Math.sin((1.2*m.time)))*m.y); m.rot=(m.rot+(m.dx_r*Math.abs((((m.dy_r*4)-m.treb_att)-m.thresh)))); m.zoom=(m.zoom+(0.05*Math.sin((4-(((4*Math.cos((0.5-(((((m.rad*Math.cos(Math.tan(((14*m.dx_r)*m.bass_att))))*Math.cos((1.12*m.time)))*m.rad)*14)*m.rad))))*16)*m.dx_r))))); m.rot=(m.rot+m.dx_r); m.rot=(m.rot+m.dy_r); m.dx=(m.dx+(1.1*m.dx_r)); m.dy=(m.dy+(1.1*m.dy_r)); m.rot=(m.rot+((above(m.bass_att, 1.25)*1.2)*Math.tan(Math.cos(m.time)))); m.warp=(m.warp+(above(m.bass_att, 1.3)*12)); m.zoom=(m.zoom-((((above(m.bass_att, 1.2)*1.2)*Math.cos((2-Math.abs(((m.rad*2)-m.time)))))*m.wx)*m.rad));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 7.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - (\n    (clamp (((vol / vol_att) - 1.1), 0.0, 1.0) * 0.5)\n   + 0.004)));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":""}