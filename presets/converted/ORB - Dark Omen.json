{"baseVals":{"rating":0,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37409,"g":1,"b":1,"a":0.8,"r2":1,"b2":1,"a2":0.4},"init_eqs_str":"m.ob_r = 0;\nm.ob_g = 0;\nm.ob_b = 0;\nm.basstime = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ang=m.basstime; m.tex_ang=Math.sin(m.basstime); m.ob_r=(0.5*Math.sin((m.basstime*1.12))); m.ob_g=(0.5*Math.sin((m.basstime*1.5))); m.ob_b=(0.5*Math.sin((m.basstime*2.12)));"},{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37713,"g":1,"b":1,"a":0.7,"r2":0.8,"b2":1,"a2":0.5},"init_eqs_str":"m.tex_capture = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.tex_capture=above(m.bass, 1);"},{"baseVals":{"enabled":1,"sides":100,"r2":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.basstime = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q4 = 0;\nm.state = 0;\nm.q2 = 0;\nm.q3 = 0;","frame_eqs_str":"m.basstime=(m.basstime+(m.bass*0.0006)); m.q2=m.basstime; m.q1=(m.basstime*0.001); m.q4=Math.cos(m.basstime); m.q5=Math.sin(m.basstime); m.state=((above(m.state, 5)!=0)?(-4):(m.state)); m.state=(m.state+above(m.bass, 1.5)); m.monitor=m.state; m.q3=m.state;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1; m.rot=0;","warp":"shader_body\n{\n  float final_noise_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q5;\n  tmpvar_2[uint(0)].y = -(q4);\n  tmpvar_2[1u].x = q4;\n  tmpvar_2[1u].y = q5;\n  vec3 tmpvar_3;\n  tmpvar_3.xy = uv;\n  tmpvar_3.z = (q2 * 5.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, (tmpvar_3 * \n    pow (q3, 0.0)\n  )) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * q3)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * (q3 * q3))) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_3 * pow (q3, 3.0))) * 2.0)\n   - 1.0)).x);\n  final_noise_1 += 1.0;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = texture (sampler_main, (((\n    ((uv - 0.5) * tmpvar_2)\n   * \n    (1.0 - ((rad * 3.0) * (1.0 - (bass * 0.1))))\n  ) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_4.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q4;\n  tmpvar_2[uint(0)].y = -(q5);\n  tmpvar_2[1u].x = q5;\n  tmpvar_2[1u].y = q4;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  ret_1 = (mix (texture (sampler_main, fract(\n    (((tmpvar_3 * tmpvar_2) * 0.9) + 0.5)\n  )).xyz, texture (sampler_main, fract(\n    ((((\n      (-(tmpvar_3) + 0.5)\n     - 0.5) * -(tmpvar_2)) * 0.9) + 0.5)\n  )).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  vec3 tmpvar_4;\n  tmpvar_4.x = (ret_1.x * 5.0);\n  tmpvar_4.y = ret_1.y;\n  tmpvar_4.z = (ret_1.z * 5.0);\n  ret_1 = (1.0 - tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n}\n\n"}