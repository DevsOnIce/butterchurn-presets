{"baseVals":{"rating":1,"gammaadj":1,"decay":0.925,"echo_zoom":1.007,"echo_alpha":0,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"wave_mystery":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":0,"zoom":1.0003,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1.1046,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":1,"ob_g":0.05,"ob_b":0.1,"ob_a":1,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":1.248,"mv_dx":0,"mv_dy":0,"mv_l":5,"mv_r":1,"mv_g":1,"mv_b":0,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":0.5,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":54,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.5427,"ang":0,"tex_ang":2.51327,"tex_zoom":1.3476,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":34,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.27048,"ang":0,"tex_ang":0,"tex_zoom":3.30038,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":34,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.24486,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;","frame_eqs_str":"m.q1=(25*Math.sin((0.06*m.time))); m.q2=(25*Math.sin((0.04*m.time)));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float xlat_mutabled;\nshader_body\n{\n  float y1_1;\n  float x1_2;\n  float y0_3;\n  float x0_4;\n  vec3 ret_5;\n  float tmpvar_6;\n  tmpvar_6 = (5.0 * uv.x);\n  x0_4 = tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (5.0 * uv.y);\n  y0_3 = tmpvar_7;\n  x1_2 = tmpvar_6;\n  y1_1 = tmpvar_7;\n  xlat_mutabled = sqrt(((tmpvar_6 * tmpvar_6) + (tmpvar_7 * tmpvar_7)));\n  xlat_mutablen = 0;\n  while (true) {\n    if (!(((xlat_mutablen < 6) && (\n      float(xlat_mutablen)\n     < \n      (10.0 * xlat_mutabled)\n    )))) {\n      break;\n    };\n    x1_2 = (x1_2 + ((\n      sin((y1_1 + q2))\n     + x0_4) - q1));\n    y1_1 = (y1_1 + ((\n      cos((x1_2 + q1))\n     + y0_3) - q2));\n    xlat_mutabled = (0.1 * sqrt((\n      (x1_2 * x1_2)\n     + \n      (y1_1 * y1_1)\n    )));\n    xlat_mutabled = (xlat_mutabled - float(int(xlat_mutabled)));\n    xlat_mutablen++;\n  };\n  ret_5.x = xlat_mutabled;\n  ret_5.y = sqrt(xlat_mutabled);\n  ret_5.z = (xlat_mutabled * 3.0);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_5;\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n"}