{"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_brighten":0,"darken":1,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0.6,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"textured":1,"rad":0.72143,"tex_ang":0.62832,"tex_zoom":0.0402,"g":1,"b":1,"a":0.9,"r2":0.9,"b2":1,"a2":0.3,"border_a":0},"init_eqs_str":"m.vis = 0;\nm.q27 = 0;\nm.q22 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.vis=div((bnot(mod(m.q27,8))*m.q22),2); m.vis=Math.min(m.vis, 1); m.a=div(m.vis,2); m.a2=div(m.vis,2); m.tex_zoom=1; m.rad=(m.vis*0.3);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":5,"additive":1,"num_inst":4,"x":0.9,"rad":0.24732,"tex_zoom":0.40839,"g":0.6,"a":0.4,"g2":0,"b2":0.6,"border_a":0},"init_eqs_str":"m.blue = 0;\nm.ampl = 0;\nm.steps = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.green = 0;\nm.red = 0;\nm.trig = 0;\nm.q27 = 0;\nm.q28 = 0;\n\n\t\t\tm.rkeys = ['blue','green','red'];","frame_eqs_str":"m.steps=(m.q28+1); m.steps=4; m.ampl=0.2; m.x=(0.5+(m.ampl*Math.cos(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.y=(0.5+(m.ampl*Math.sin(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.a=0.4; m.a2=0.0; m.trig=(m.q24*bnot(mod(m.q27,4))); m.red=((bnot(m.trig)*m.red)+(div(rand(100),100)*m.trig)); m.green=((bnot(m.trig)*m.green)+(div(rand(100),100)*m.trig)); m.blue=((bnot(m.trig)*m.blue)+(div(rand(100),100)*m.trig)); m.k1=div(m.instance,m.num_inst); m.r=(m.red*m.k1); m.g=(m.green*(1-m.k1)); m.b=(((m.blue*4)*m.k1)*(1-m.k1)); m.r=m.red; m.g=m.green; m.b=m.blue; m.r2=m.r; m.b2=m.b; m.g2=m.g;"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.px = 0;\nm.index2 = 0;\nm.speed_ = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.py = 0;\nm.movz = 0;\nm.trel = 0;\nm.q9 = 0;\nm.rott = 0;\nm.vol__ = 0;\nm.is_beat = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.vx = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.vy = 0;\nm.vz = 0;\nm.q4 = 0;\nm.dir = 0;\nm.q16 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.beat = 0;\nm.q17 = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.speed = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.vol_ = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.ang0 = 0;\nm.speed_=1; m.vx=0; m.vy=0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.96, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.5))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q24=m.is_beat; m.vol=((m.bass_att+m.mid_att)+m.treb_att); m.vol_=((m.dec_med*m.vol_)+((1-m.dec_med)*m.vol)); m.vol__=((m.dec_med*m.vol__)+((1-m.dec_med)*m.vol_)); m.q27=(m.index+1); m.q28=(m.index2+1); m.k1=(m.is_beat*equal(mod(m.index,4), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trig=(m.q24*bnot(mod(m.index,8))); m.vx=((m.vx*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.vy=((m.vy*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.vz=((m.vz*bnot(m.trig))+(m.trig*(div(rand(100),100)-0.5))); m.q10=(0.2+((m.vy*m.vy)*4)); m.q11=((Math.sin(div(m.time,9))*0.5)+0.3); m.speed=Math.min(((m.vol_-m.vol__)+0.5), 1); m.speed=Math.max(m.speed, -0.5); m.speed_=((bnot(m.trig)*m.speed_)+(m.trig*m.speed)); m.movz=(m.movz+(div(2,m.fps)*m.speed_)); m.q9=m.movz; m.q12=(Math.min(m.q22, 6)*2); m.trig=(bnot(mod(m.index,4))*m.q24); m.dir=((bnot(m.trig)*m.dir)+(m.trig*(rand(10)-5))); m.trel=(m.trel+(div(0.2,m.fps)*m.dir)); m.q5=Math.cos(m.trel); m.q6=Math.sin((m.trel+((0*m.q27)*mod(m.q28,2)))); m.q7=-m.q6; m.q8=m.q5; m.px=((m.px*m.dec_med)+((1-m.dec_med)*m.vx)); m.py=((m.py*m.dec_med)+((1-m.dec_med)*m.vy)); m.q15=div(m.px,3); m.q16=div(m.py,3); m.q13=Math.min(2, (1+Math.abs(((8*m.px)*m.py)))); m.ang0=((m.ang0*m.dec_med)+(m.vz*(1-m.dec_med))); m.q17=(m.ang0*2); m.zoom=1.1; m.rot=(0.2*Math.sin((bnot(mod(m.q28,2))*m.q28))); m.dx=0.00; m.monitor=m.q17;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv6_1;\n  vec2 uv1_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float x_4;\n  x_4 = (abs(tmpvar_3.x) - abs(tmpvar_3.y));\n  float tmpvar_5;\n  tmpvar_5 = (18.0 * sqrt((x_4 * x_4)));\n  uv1_2 = (tmpvar_3 - (clamp (\n    ((sin(tmpvar_5) / cos(tmpvar_5)) * normalize(tmpvar_3))\n  , vec2(-3.0, -3.0), vec2(3.0, 3.0)) / 60.0));\n  uv6_1 = (0.4 * cos((\n    (uv1_2 * 4.0)\n   * q28)));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((texture (sampler_main, \n    ((uv1_2 * (q11 + (q10 * tmpvar_5))) + 0.5)\n  ).xyz + \n    (vec3((0.006 / sqrt(dot (uv6_1, uv6_1)))) * (1.0 + roam_cos).xyz)\n  ) * 0.99) - 0.025);\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"float xlat_mutableang2;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutableang2 = ang2;\n  xlat_mutablers0 = rs0;\n  xlat_mutableuv2 = uv2;\n  vec2 uv_1;\n  vec3 ret1_3;\n  uv_1 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = q15;\n  tmpvar_4.y = q16;\n  uv_1 = (uv_1 + tmpvar_4);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)] = _qb.xy;\n  tmpvar_5[1u] = _qb.zw;\n  uv_1 = (uv_1 * tmpvar_5);\n  float tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (min (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0) / max (abs(\n    (uv_1.y / uv_1.x)\n  ), 1.0));\n  float tmpvar_8;\n  tmpvar_8 = (tmpvar_7 * tmpvar_7);\n  tmpvar_8 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_8) + 0.05368138) * tmpvar_8) - 0.1173503)\n     * tmpvar_8) + 0.1938925) * tmpvar_8) - 0.3326756)\n   * tmpvar_8) + 0.9999793) * tmpvar_7);\n  tmpvar_8 = (tmpvar_8 + (float(\n    (abs((uv_1.y / uv_1.x)) > 1.0)\n  ) * (\n    (tmpvar_8 * -2.0)\n   + 1.570796)));\n  tmpvar_6 = (tmpvar_8 * sign((uv_1.y / uv_1.x)));\n  if ((abs(uv_1.x) > (1e-08 * abs(uv_1.y)))) {\n    if ((uv_1.x < 0.0)) {\n      if ((uv_1.y >= 0.0)) {\n        tmpvar_6 += 3.141593;\n      } else {\n        tmpvar_6 = (tmpvar_6 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_6 = (sign(uv_1.y) * 1.570796);\n  };\n  xlat_mutablers0.x = ((tmpvar_6 / 3.1416) * 2.0);\n  xlat_mutablers0.y = (0.03 / sqrt(dot (uv_1, uv_1)));\n  ret1_3 = vec3(0.0, 0.0, 0.0);\n  for (int n_2 = 0; n_2 <= 10; n_2++) {\n    float tmpvar_9;\n    tmpvar_9 = fract((-(q9) + (\n      float(n_2)\n     / 10.0)));\n    xlat_mutableang2 = (((q1 * 3.14) * float(n_2)) / 10.0);\n    float tmpvar_10;\n    tmpvar_10 = cos(xlat_mutableang2);\n    float tmpvar_11;\n    tmpvar_11 = sin(xlat_mutableang2);\n    mat2 tmpvar_12;\n    tmpvar_12[uint(0)].x = tmpvar_10;\n    tmpvar_12[uint(0)].y = -(tmpvar_11);\n    tmpvar_12[1u].x = tmpvar_11;\n    tmpvar_12[1u].y = tmpvar_10;\n    xlat_mutableuv2 = (uv_1 * ((q13 * tmpvar_9) * tmpvar_12));\n    ret1_3 = max (ret1_3, (texture (sampler_main, (xlat_mutableuv2 + 0.5)).xyz * (1.0 - tmpvar_9)));\n  };\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ((ret1_3 * 2.0) + ((\n    (bass_att * xlat_mutablers0.y)\n   * texture (sampler_main, \n    ((uv_1 * q12) + (time / 32.0))\n  ).yzx) * clamp (\n    (1.0 - (ret1_3 * 32.0))\n  , 0.0, 1.0)));\n  ret = tmpvar_13.xyz;\n}\n\n"}