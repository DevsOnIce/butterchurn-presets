{"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0,"ib_a":0.3,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_str":"m.q24 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=0.5; m.y=0.5; m.a=m.q24; m.a2=m.q24;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.5,"g2":0,"a2":0.3,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_str":"m.dx = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dy = 0;\nm.t2 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t2=(0.45+div(rand(10),100));","point_eqs_str":"m.k1=bnot(mod(((m.sample*100)+m.time),2)); m.dy=(((0.015*above(Math.sin((m.sample*11)), 0))+(0.008*above(Math.sin((m.time+(m.sample*74))), 0)))+(0.008*above(Math.sin((m.time+(m.sample*128))), 0))); m.dx=((0.01*above(Math.sin((m.sample*27)), 0))+(0.01*above(Math.sin((m.time+(m.sample*134))), 0))); m.x=(((0.2*(m.sample-0.5))+0.5)+m.dx); m.y=(m.t2+m.dy); m.a=((m.q24*m.k1)*bnot(mod(m.q27,4))); m.r=0.6; m.g=0; m.b=0.6;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index4 = 0;\nm.q25 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.hld = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.rota = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),4); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.monitor=m.index4; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.hld=((m.hld*m.dec_med)+m.q24); m.q25=Math.min(m.hld, 1); m.monitor=m.q25; m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.14159265359),2); m.q27=m.index; m.q28=m.index2; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.rota=((m.rota*m.dec_med)+((m.q1*bnot(m.index2))*(1-m.dec_med))); m.q5=(0.2*m.rota);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=(m.q5*Math.sin(((m.q22*4)*(1-m.rad)))); m.zoom=1.08;","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (((0.99 * vec3(\n    dot ((texture (sampler_main, uv).xyz + 0.03), vec3(0.32, 0.49, 0.29))\n  )) - 0.02) - ((0.02 / \n    (rad + (0.002 * q27))\n  ) * (\n    (texture (sampler_blur1, (uv * (1.0 + (0.01 * q1)))).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4.x = 0.0;\n  tmpvar_4.y = texsize.w;\n  vec2 tmpvar_5;\n  tmpvar_5.x = (texture (sampler_main, (uv - tmpvar_3)).xyz - texture (sampler_main, (uv + tmpvar_3)).xyz).x;\n  tmpvar_5.y = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_5));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((-(tmpvar_2) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_2)));\n  ret = tmpvar_6.xyz;\n}\n\n"}