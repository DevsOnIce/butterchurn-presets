{"baseVals":{"rating":4,"gammaadj":1.14,"decay":1,"echo_zoom":1,"wave_mode":6,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":1.17,"wave_scale":0.797,"wave_smoothing":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoomexp":0.9995,"zoom":0.9998,"rot":0.02,"dy":-0.008,"warp":0.01,"sx":1.0098,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.9,"ob_size":0.005,"ob_a":0.8,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":44.8,"mv_y":38.4,"mv_l":5,"mv_g":0.91,"mv_b":0.71,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.mq1 = 0;\nm.q25 = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.mq21 = 0;\nm.mq24 = 0;\nm.bass_thresh = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.mq23 = 0;\nm.wg = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.mq30 = 0;\nm.q26 = 0;\nm.t = 0;\nm.wb = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.mq22 = 0;\nm.q17 = 0;\nm.vol = 0;\nm.mq26 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.wr = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q8 = 0;\nm.q1=div(1,Math.asin(1));","frame_eqs_str":"m.chng=Math.sin((m.time*0.5)); m.cthr=0.9999; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq29)); m.mq30=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq30)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q30=m.mq30; m.monitor=m.mq1; m.wave_r=(m.wave_r+(0.3*Math.sin((m.vol*50)))); m.wave_b=(m.wave_b+(0.3*Math.sin((m.vol*20)))); m.wave_g=(m.wave_g+(0.5*Math.sin((m.vol*35)))); m.q8=m.wave_r; m.q7=m.wave_b; m.q6=m.wave_g; m.wr=(0.5+(0.4*((0.6*Math.sin((m.time*1.1)))+(0.4*Math.sin((0.8*m.time)))))); m.wb=(0.5+(0.4*((0.6*Math.sin((m.time*1.6)))+(0.4*Math.sin((0.5*m.time)))))); m.wg=(0.5+(0.4*((0.6*Math.sin((m.time*1.34)))+(0.4*Math.sin((0.4*m.time)))))); m.monitor=m.wg; m.q10=m.wr; m.q11=m.wb; m.q12=m.wg; m.q18=(0.007*Math.sin((m.time*0.1))); m.q17=(-0.007*Math.sin((m.time*0.254))); m.q2=m.bass_thresh; m.vol=(((m.bass+m.mid)+m.treb)*0.25); m.vol=(m.vol*m.vol); m.q3=m.vol; m.warp=0; m.t=(m.t-div(1,m.fps)); m.t=((above(m.t, 2)!=0)?((m.t-2)):(m.t)); m.q2=m.t;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec3 noise3_2;\n  vec3 ret_3;\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  uv_1 = (uv - vec2(0.0, 1.0));\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.5 + ((uv_1 - 0.5) * (1.0 + \n    (tmpvar_4.y * 0.03)\n  )));\n  vec2 tmpvar_6;\n  tmpvar_6.x = (tmpvar_5.x + pow (tmpvar_4.x, 0.0));\n  tmpvar_6.y = (tmpvar_5.y + pow (tmpvar_4.x, 0.005));\n  noise3_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz * fract(q15));\n  vec3 tmpvar_7;\n  tmpvar_7 = (noise3_2 * (vec3(1.0, 1.0, 1.0) - vec3(fract(\n    (q3 * 0.5)\n  ))));\n  noise3_2 = tmpvar_7;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, fract(tmpvar_6));\n  vec3 tmpvar_9;\n  tmpvar_9.x = q10;\n  tmpvar_9.y = q11;\n  tmpvar_9.z = q12;\n  vec3 tmpvar_10;\n  tmpvar_10 = mix (tmpvar_7, tmpvar_9, tmpvar_8.xxx);\n  ret_3 = (tmpvar_8.xyz + clamp ((\n    (tmpvar_8.yzx * tmpvar_10.zxy)\n   - \n    (tmpvar_8.zxy * tmpvar_10.yzx)\n  ), 0.0, 1.0));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * roam_cos.y)) && (ret_3.x <= (q24 * roam_sin.x)))) {\n    ret_3.y = (ret_3.y - (tmpvar_11.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * roam_sin.x)) && (ret_3.y <= (q25 * roam_cos.x)))) {\n    ret_3.z = (ret_3.z - (tmpvar_11.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * roam_cos.x)) && (ret_3.z <= (q26 * roam_sin.y)))) {\n    ret_3.x = (ret_3.x - (tmpvar_11.z * 0.5));\n  };\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_3;\n  ret = tmpvar_12.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - tmpvar_5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.z;\n  tmpvar_7.y = tmpvar_4.z;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv - tmpvar_7);\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_3.x;\n  tmpvar_10.y = tmpvar_4.x;\n  vec3 tmpvar_11;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur1, uv);\n  vec4 tmpvar_13;\n  tmpvar_13 = texture (sampler_main, uv);\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_blur3, uv);\n  tmpvar_11 = mix (clamp (mix (\n    mix (mix (mix (mix (\n      (vec3(0.0, 1.0, 0.0) * vec3(sqrt(dot (tmpvar_9, tmpvar_9))))\n    , vec3(1.0, 0.0, 0.0), vec3(\n      (tmpvar_13.z * clamp ((1.0 - (\n        ((tmpvar_14.xyz * scale3) + bias3)\n      .y * 8.0)), 0.0, 1.0))\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((((texture (sampler_blur1, tmpvar_8).xyz * scale1) + bias1).x * ((tmpvar_12.xyz * scale1) + bias1).z) * 2.0)\n     * \n      (1.0 - (((tmpvar_12.xyz * scale1) + bias1).y * 4.0))\n    ))), vec3(0.8, 0.0, 1.5), vec3(sqrt(dot (tmpvar_10, tmpvar_10)))), vec3(1.0, 1.0, 0.0), vec3((tmpvar_13.x * clamp ((1.0 - \n      (((tmpvar_14.xyz * scale3) + bias3).y * 8.0)\n    ), 0.0, 1.0))))\n  , vec3(1.0, 1.0, 1.0), vec3(\n    ((((\n      (texture (sampler_blur1, tmpvar_6).xyz * scale1)\n     + bias1).z * (\n      (tmpvar_12.xyz * scale1)\n     + bias1).x) * 2.0) * (1.0 - ((\n      (tmpvar_12.xyz * scale1)\n     + bias1).y * 4.0)))\n  )), 0.0, 1.0), vec3(1.0, 1.0, 1.0), tmpvar_13.yyy);\n  ret_1 = tmpvar_11;\n  vec3 tmpvar_15;\n  tmpvar_15.x = tmpvar_6.x;\n  tmpvar_15.y = tmpvar_8.y;\n  tmpvar_15.z = uv.x;\n  vec4 tmpvar_16;\n  tmpvar_16 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_15) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q30)));\n  if (((tmpvar_11.x > (q26 * roam_cos.y)) && (tmpvar_11.x <= (q23 * roam_sin.x)))) {\n    ret_1.z = (tmpvar_11.z - (tmpvar_16.x * 0.5));\n  };\n  if (((tmpvar_11.y > (q25 * roam_sin.x)) && (tmpvar_11.y <= (q22 * roam_cos.x)))) {\n    ret_1.x = (tmpvar_11.x - (tmpvar_16.y * 0.5));\n  };\n  if (((ret_1.z > (q24 * roam_cos.x)) && (ret_1.z <= (q21 * roam_sin.y)))) {\n    ret_1.y = (tmpvar_11.y - (tmpvar_16.z * 0.5));\n  };\n  ret_1 = (ret_1 - ((roam_sin.wzy * roam_cos.zxy) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_1;\n  ret = tmpvar_17.xyz;\n}\n\n"}