{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.8);"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.05)*m.bass)); m.ma=(m.ma-(((above(m.mid, 1)*3.1415)*0.05)*m.mid)); m.mx=(m.mx+(0.0001*Math.cos(m.ma))); m.my=(m.my+(0.0001*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.1);"},{"baseVals":{"enabled":1,"usedots":1,"thick":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.mid, 1)*3.1415)*0.01)*m.mid)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0004*Math.cos(m.ma))); m.my=(m.my+(0.0004*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.3);"},{"baseVals":{"enabled":1,"thick":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 0.5)*3.1415)*0.02)*m.bass)); m.ma=(m.ma-(((above(m.treb, 0.5)*3.1415)*0.02)*m.treb)); m.mx=(m.mx+(0.0008*Math.cos(m.ma))); m.my=(m.my+(0.0008*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.2);"}],"init_eqs_str":"m.dt = 0;\nm.tt = 0;\nm.db = 0;\nm.bb = 0;\nm.q2 = 0;\nm.q3 = 0;","frame_eqs_str":"m.zoom=1; m.db=((0.75*m.db)+(0.25*m.bass_att)); m.bb=(m.bb+(0.1*m.db)); m.dt=((0.75*m.dt)+(0.25*m.treb_att)); m.tt=(m.tt+(0.1*m.dt)); m.q2=Math.sin((((0.225*m.bb)+m.time)-(0.25*m.tt))); m.q3=Math.cos((((0.25*m.bb)+m.time)-(0.235*m.tt)));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 0.0;\n  tmpvar_2.xyz = texture (sampler_fc_main, uv).xyz;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = max (tmpvar_2, (texture (sampler_main, (uv + tmpvar_1)) * 0.97)).xyz;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, (texture (sampler_main, (uv - tmpvar_1)) * 0.97)).xyz;\n  vec4 tmpvar_5;\n  tmpvar_5.w = 0.0;\n  tmpvar_5.xyz = max (tmpvar_4, (texture (sampler_main, (uv + \n    (tmpvar_1 * 2.0)\n  )) * 0.9)).xyz;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ((max (tmpvar_5, \n    (texture (sampler_main, (uv - (tmpvar_1 * 2.0))) * 0.9)\n  ).xyz - 0.005) * 0.98);\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = ((uv * 2.5) - 1.25);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv_1.x * q3) - (uv_1.y * q2));\n  tmpvar_3.y = ((uv_1.x * q2) + (uv_1.y * q3));\n  uv_1 = (tmpvar_3 + 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(uv_1);\n  uv_1 = tmpvar_4;\n  ret_2 = (mix (texture (sampler_main, tmpvar_4).xyz, texture (sampler_main, (\n    (0.5 - tmpvar_4)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (dot (ret_2, vec3(0.32, 0.49, 0.29)) * rand_preset).xyz;\n  vec3 tmpvar_6;\n  tmpvar_6 = (1.0 - ((tmpvar_5 * \n    (1.0 - tmpvar_5)\n  ) * 4.0));\n  vec3 tmpvar_7;\n  tmpvar_7.xy = (tmpvar_6.xy * vec2(0.5, 0.5));\n  tmpvar_7.z = tmpvar_6.z;\n  ret_2 = (tmpvar_7 * 0.5);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n"}