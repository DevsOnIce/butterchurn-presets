{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.358,"wave_scale":1.571,"wave_smoothing":0.504,"wave_mystery":-0.52,"modwavealphastart":2,"modwavealphaend":2,"warpanimspeed":2.007,"warpscale":1.341,"zoomexp":4.401,"zoom":1.011,"rot":0.003,"warp":0,"wave_g":0,"wave_y":0.04,"ob_size":0.005,"ob_a":1,"ib_size":0,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"x":0.57,"y":0.41,"rad":0.09234,"tex_zoom":0.73458,"r":0,"g":1,"g2":0,"border_a":0},"init_eqs_str":"m.vx=0;\n\t\t\tm.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"g":0},"init_eqs_str":"m.vl = 0;\nm.sw = 0;\nm.t1 = 0;\nm.vo = 0;\nm.vt = 0;\nm.swi = 0;\nm.vc = 0;\nm.vj = 0;\nm.vk = 0;\nm.it = 0;\nm.vb = 0;\nm.vg = 0;\nm.vi = 0;\nm.vn = 0;\nm.lr = 0;\nm.sc = 0;\nm.my = 0;\nm.vd = 0;\nm.si = 0;\nm.vq = 0;\nm.vx = 0;\nm.sa = 0;\nm.let = 0;\nm.sb = 0;\nm.sg = 0;\nm.vy = 0;\nm.sf = 0;\nm.sj = 0;\nm.vr = 0;\nm.se = 0;\nm.sz = 0;\nm.xv = 0;\nm.vp = 0;\nm.mx = 0;\nm.vf = 0;\nm.sh = 0;\nm.sd = 0;\nm.vs = 0;\nm.ve = 0;\nm.ita = 0;\nm.vh = 0;\nm.va = 0;\nm.vm = 0;\n\n\t\t\tm.rkeys = ['it','lr','my','xv','ita'];","frame_eqs_str":"m.t1=below(rand(100), ((m.treb+m.mid)+m.bass));","point_eqs_str":"m.it=(((m.it+1)*above(m.sample, 0))*below(m.it, 53)); m.ita=((m.ita+equal(m.it, 0))*above(m.sample, 0)); m.sw=(1-(equal(m.it, 0)*equal(m.ita, 0))); m.swi=(((equal(m.lr, 9)+equal(m.lr, 5))*equal(m.it, 0))*equal(m.ita, 4)); m.xv=(((m.sw-m.swi)!=0)?(m.xv):(((rand(1001)*0.001)*0.8))); m.mx=(m.xv+(m.ita*0.025)); m.my=(((m.sw-m.swi)!=0)?(m.my):(((rand(1001)*0.001)*0.975))); m.sz=0.01; m.vx=((((((((((((above(m.it, 1)*below(m.it, 39))+(above(m.it, 12)*below(m.it, 28)))-equal(m.it, 20))+equal(m.it, 46))+equal(m.it, 51))+equal(m.it, 41))-equal(m.it, 15))-equal(m.it, 25))+equal(m.it, 10))+equal(m.it, 30))-equal(m.it, 4))-equal(m.it, 36)); m.vy=((((((((((((above(m.it, 17)*below(m.it, 49))+(above(m.it, 22)*below(m.it, 44)))-equal(m.it, 33))+equal(m.it, 7))+equal(m.it, 51))+equal(m.it, 15))-equal(m.it, 41))-equal(m.it, 25))+equal(m.it, 4))+equal(m.it, 10))-equal(m.it, 36))-equal(m.it, 30)); m.sa=(((((equal(m.ita, 0)*18)+(equal(m.ita, 1)*5))+(equal(m.ita, 2)*13))+(equal(m.ita, 3)*9))+(equal(m.ita, 4)*24)); m.sd=((((((equal(m.ita, 0)*3)+(equal(m.ita, 1)*18))+(equal(m.ita, 2)*5))+(equal(m.ita, 3)*1))+(equal(m.ita, 4)*20))+(equal(m.ita, 5)*5)); m.sh=((((((equal(m.ita, 0)*20)+(equal(m.ita, 1)*18))+(equal(m.ita, 2)*1))+(equal(m.ita, 3)*22))+(equal(m.ita, 4)*5))+(equal(m.ita, 5)*12)); m.sg=(((((equal(m.ita, 0)*19)+(equal(m.ita, 1)*16))+(equal(m.ita, 2)*1))+(equal(m.ita, 3)*3))+(equal(m.ita, 4)*5)); m.si=((((equal(m.ita, 0)*12)+(equal(m.ita, 1)*9))+(equal(m.ita, 2)*6))+(equal(m.ita, 3)*5)); m.sc=((((equal(m.ita, 0)*12)+(equal(m.ita, 1)*15))+(equal(m.ita, 2)*22))+(equal(m.ita, 3)*5)); m.sb=((((equal(m.ita, 0)*20)+(equal(m.ita, 1)*9))+(equal(m.ita, 2)*13))+(equal(m.ita, 3)*5)); m.se=((((equal(m.ita, 0)*13)+(equal(m.ita, 1)*9))+(equal(m.ita, 2)*14))+(equal(m.ita, 3)*4)); m.sj=((((equal(m.ita, 0)*14)+(equal(m.ita, 1)*5))+(equal(m.ita, 2)*5))+(equal(m.ita, 3)*4)); m.sf=(((equal(m.ita, 0)*25)+(equal(m.ita, 1)*5))+(equal(m.ita, 2)*19)); m.lr=((m.sw!=0)?(m.lr):(rand(10))); m.let=((((((((((equal(m.lr, 0)*m.sa)+(equal(m.lr, 1)*m.sb))+(equal(m.lr, 2)*m.sc))+(equal(m.lr, 3)*m.sd))+(equal(m.lr, 4)*m.se))+(equal(m.lr, 5)*m.sf))+(equal(m.lr, 6)*m.sg))+(equal(m.lr, 7)*m.sh))+(equal(m.lr, 8)*m.si))+(equal(m.lr, 9)*m.sj)); m.va=((equal(m.let, 23)+equal(m.let, 24))+equal(m.let, 26)); m.vb=((((above(m.let, 0)*below(m.let, 9))+(above(m.let, 10)*below(m.let, 19)))+equal(m.let, 21))+equal(m.let, 23)); m.vc=((((((((equal(m.let, 1)+equal(m.let, 2))+equal(m.let, 5))+equal(m.let, 6))+equal(m.let, 8))+equal(m.let, 11))+equal(m.let, 16))+equal(m.let, 18))+equal(m.let, 19)); m.vd=(((above(m.let, 1)*below(m.let, 9))+(above(m.let, 10)*below(m.let, 24)))-equal(m.let, 20)); m.ve=(((equal(m.let, 13)+equal(m.let, 14))+equal(m.let, 24))+equal(m.let, 25)); m.vf=((((above(m.let, 1)*below(m.let, 8))+equal(m.let, 9))+(above(m.let, 14)*below(m.let, 21)))+equal(m.let, 26)); m.vg=equal(m.let, 1); m.vh=(equal(m.let, 9)+equal(m.let, 20)); m.vi=(((above(m.let, 0)*below(m.let, 5))-equal(m.let, 3))+equal(m.let, 18)); m.vj=((((((above(m.let, 2)*below(m.let, 8))-equal(m.let, 4))+equal(m.let, 9))+(above(m.let, 14)*below(m.let, 21)))-equal(m.let, 18))+equal(m.let, 26)); m.vk=((equal(m.let, 11)+equal(m.let, 13))+(above(m.let, 23)*below(m.let, 27))); m.vl=(((equal(m.let, 8)+equal(m.let, 10))+(above(m.let, 12)*below(m.let, 18)))+(above(m.let, 20)*below(m.let, 24))); m.vm=(((((equal(m.let, 1)+equal(m.let, 2))+equal(m.let, 8))+equal(m.let, 16))+equal(m.let, 18))+equal(m.let, 19)); m.vn=((((((((equal(m.let, 1)+equal(m.let, 7))+equal(m.let, 8))+equal(m.let, 10))+(above(m.let, 12)*below(m.let, 24)))-equal(m.let, 16))-equal(m.let, 18))-equal(m.let, 20))-equal(m.let, 22)); m.vo=(((((equal(m.let, 11)+equal(m.let, 14))+equal(m.let, 17))+equal(m.let, 18))+equal(m.let, 23))+equal(m.let, 24)); m.vp=((((((((((equal(m.let, 3)+equal(m.let, 5))+equal(m.let, 7))+equal(m.let, 9))+equal(m.let, 10))+equal(m.let, 12))+equal(m.let, 15))+equal(m.let, 17))+equal(m.let, 19))+equal(m.let, 21))+equal(m.let, 26)); m.vq=((equal(m.let, 2)+equal(m.let, 4))+equal(m.let, 22)); m.vr=((equal(m.let, 9)+equal(m.let, 20))+equal(m.let, 25)); m.vs=equal(m.let, 22); m.vt=(((((((((above(m.let, 1)*below(m.let, 13))-equal(m.let, 6))-equal(m.let, 8))-equal(m.let, 11))+equal(m.let, 15))+equal(m.let, 17))+equal(m.let, 19))+equal(m.let, 21))+equal(m.let, 26)); m.a=((above(m.it, 51)!=0)?(0):(((above(m.it, 49)!=0)?(m.va):(((above(m.it, 47)!=0)?(m.vb):(((above(m.it, 44)!=0)?(m.vc):(((above(m.it, 42)!=0)?(m.vd):(((above(m.it, 39)!=0)?(m.ve):(((above(m.it, 37)!=0)?(m.vf):(((above(m.it, 34)!=0)?(m.vg):(((above(m.it, 31)!=0)?(m.vh):(((above(m.it, 28)!=0)?(m.vi):(((above(m.it, 26)!=0)?(m.vj):(((above(m.it, 23)!=0)?(m.vk):(((above(m.it, 21)!=0)?(m.vl):(((above(m.it, 18)!=0)?(m.vm):(((above(m.it, 16)!=0)?(m.vn):(((above(m.it, 13)!=0)?(m.vo):(((above(m.it, 11)!=0)?(m.vp):(((above(m.it, 8)!=0)?(m.vq):(((above(m.it, 5)!=0)?(m.vr):(((above(m.it, 2)!=0)?(m.vs):(((m.it!=0)?(m.vt):(0)))))))))))))))))))))))))))))))))))))))))); m.a=((m.a*below(m.ita, 8))*m.t1); m.x=(m.mx+((m.vx*m.sz)*0.75)); m.y=(m.my+((m.vy*m.sz)*1.5));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"m.zoom=1; m.warp=0.04; m.rot=0; m.monitor=((m.treb+m.mid)+m.bass);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv2_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 12.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = (((texture (sampler_blur3, \n    (uv + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3)).x;\n  tmpvar_5.y = (((texture (sampler_blur3, \n    (uv + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3)).x;\n  ret_3.x = texture (sampler_fc_main, (uv + ((tmpvar_5 * texsize.zw) * 48.0))).x;\n  ret_3.x = (ret_3.x + ((\n    (ret_3 - ((texture (sampler_blur3, (uv - \n      floor(uv)\n    )).xyz * scale3) + bias3))\n  .x * 0.01) - 0.004));\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_orig - 0.5) * vec2(1.75, 1.75));\n  vec2 tmpvar_7;\n  tmpvar_7.x = ((tmpvar_6.x * tmpvar_6.x) - (tmpvar_6.y * tmpvar_6.y));\n  tmpvar_7.y = ((2.0 * tmpvar_6.x) * tmpvar_6.y);\n  my_uv2_1 = (tmpvar_7 + vec2(0.4, 0.74));\n  d_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_8.y = (((texture (sampler_blur1, \n    (my_uv2_1 + (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (my_uv2_1 - (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1)).y;\n  ret_3.y = texture (sampler_fc_main, (my_uv2_1 + ((tmpvar_8 * texsize.zw) * 4.0))).y;\n  ret_3.z = max (texture (sampler_main, uv).y, (texture (sampler_main, (uv + texsize.zw)).z - 0.004));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_3;\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_2.x;\n  tmpvar_4.y = tmpvar_3.x;\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_2.z;\n  tmpvar_5.y = tmpvar_3.z;\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_2.x;\n  tmpvar_6.y = tmpvar_3.x;\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_2.z;\n  tmpvar_7.y = tmpvar_3.z;\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_blur1, uv);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_main, uv);\n  vec4 tmpvar_10;\n  tmpvar_10 = texture (sampler_blur3, uv);\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = mix (clamp (mix (\n    mix (mix (mix (mix (\n      (vec3(0.8, 0.0, 1.5) * vec3(sqrt(dot (tmpvar_6, tmpvar_6))))\n    , vec3(1.0, 1.0, 0.0), vec3(\n      (tmpvar_9.x * clamp ((1.0 - (\n        ((tmpvar_10.xyz * scale3) + bias3)\n      .y * 8.0)), 0.0, 1.0))\n    )), vec3(1.0, 1.0, 1.0), vec3((\n      ((((texture (sampler_blur1, \n        (uv - tmpvar_4)\n      ).xyz * scale1) + bias1).z * ((tmpvar_8.xyz * scale1) + bias1).x) * 2.0)\n     * \n      (1.0 - (((tmpvar_8.xyz * scale1) + bias1).y * 4.0))\n    ))), vec3(0.0, 1.0, 0.0), vec3(sqrt(dot (tmpvar_7, tmpvar_7)))), vec3(1.0, 0.0, 0.0), vec3((tmpvar_9.z * clamp ((1.0 - \n      (((tmpvar_10.xyz * scale3) + bias3).y * 8.0)\n    ), 0.0, 1.0))))\n  , vec3(1.0, 1.0, 1.0), vec3(\n    ((((\n      (texture (sampler_blur1, (uv - tmpvar_5)).xyz * scale1)\n     + bias1).x * (\n      (tmpvar_8.xyz * scale1)\n     + bias1).z) * 2.0) * (1.0 - ((\n      (tmpvar_8.xyz * scale1)\n     + bias1).y * 4.0)))\n  )), 0.0, 1.0), vec3(1.0, 1.0, 1.0), tmpvar_9.yyy);\n  ret = tmpvar_11.xyz;\n}\n\n"}