{"baseVals":{"rating":5,"gammaadj":1,"decay":0.9,"echo_zoom":1,"echo_orient":3,"wave_mode":6,"wave_brighten":0,"wave_a":0.005,"wave_scale":0.167,"wave_smoothing":0,"modwavealphastart":1,"modwavealphaend":1,"warpscale":0.107,"zoomexp":1.00183,"fshader":1,"zoom":0.96098,"warp":0.01,"wave_x":0.95,"wave_y":1,"ob_size":0.04,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":-0.002,"mv_l":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":457,"thick":1,"scaling":3.80064,"smoothing":1,"r":0,"b":0},"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.z = 0;\nm.w = 0;\nm.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.pi3 = 0;\nm.q4 = 0;\nm.dir = 0;\nm.zm = 0;\nm.t = 0;\nm.zz = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.yy = 0;\nm.c = 0;\nm.t8=1;\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.pi3=((3.1415*2)*0.3333); m.t=(((m.q4+m.q5)+m.q6)*0.005); m.c=5; m.r=(1-(Math.sin(m.t)*m.c)); m.g=(1-(Math.sin((m.t+m.pi3))*m.c)); m.b=(1-(Math.sin((m.t-m.pi3))*m.c)); m.r=((above(m.r, 1)!=0)?(1):(m.r)); m.r=((below(m.r, 0)!=0)?(0):(m.r)); m.g=((above(m.g, 1)!=0)?(1):(m.g)); m.g=((below(m.g, 0)!=0)?(0):(m.g)); m.b=((above(m.b, 1)!=0)?(1):(m.b)); m.b=((below(m.b, 0)!=0)?(0):(m.b));","point_eqs_str":"m.t8=-m.t8; m.d=sqrt((1-sqr(((m.sample-0.5)*2)))); m.z=((m.sample*0.4)-0.2); m.x=((Math.sin((m.sample*100))*m.d)*0.2); m.y=((Math.cos((m.sample*100))*m.d)*0.2); m.p=0.1; m.x=(m.x*(1+(m.t8*m.p))); m.y=(m.y*(1+(m.t8*m.p))); m.z=(m.z*(1+(m.t8*m.p))); m.dir=(((m.t4-m.t6)*0.4)+(((m.t1-m.t3)*(m.t8+1))*0.2)); m.d=(2+pow(m.t2, 3)); m.w=((m.t5*0.4)+(((m.t8+1)*m.t2)*0.2)); m.zz=m.z; m.yy=m.y; m.y=((Math.cos(m.w)*m.yy)-(Math.sin(m.w)*m.zz)); m.z=((Math.sin(m.w)*m.yy)+(Math.cos(m.w)*m.zz)); m.xx=((Math.cos(m.dir)*m.x)-(Math.sin(m.dir)*m.y)); m.yy=((Math.sin(m.dir)*m.x)+(Math.cos(m.dir)*m.y)); m.d=0.5; m.zoom=(2-(sqrt(m.t2)*1.1)); m.zm=div(sqrt((((m.x*m.x)+(m.y*m.y))+sqr((m.z+m.d)))),m.d); m.x=(0.5+div(((m.zoom*m.xx)*0.55),m.zm)); m.y=(0.5+div(((m.zoom*m.yy)*0.55),m.zm)); m.a=sigmoid((-m.z+0.1), 25);"},{"baseVals":{"enabled":1,"samples":457,"usedots":1,"thick":1,"scaling":3.80064,"smoothing":1,"r":0,"b":0},"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.z = 0;\nm.w = 0;\nm.t5 = 0;\nm.t1 = 0;\nm.q6 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t6 = 0;\nm.pi3 = 0;\nm.q4 = 0;\nm.dir = 0;\nm.zm = 0;\nm.t = 0;\nm.zz = 0;\nm.t2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t4 = 0;\nm.yy = 0;\nm.c = 0;\nm.t8=1;\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t1=m.q1; m.t2=m.q2; m.t3=m.q3; m.t4=m.q4; m.t5=m.q5; m.t6=m.q6; m.pi3=((3.1415*2)*0.3333); m.t=((((m.q4+m.q5)+m.q6)*0.005)+2); m.c=5; m.r=(1-(Math.sin(m.t)*m.c)); m.g=(1-(Math.sin((m.t+m.pi3))*m.c)); m.b=(1-(Math.sin((m.t-m.pi3))*m.c)); m.r=((above(m.r, 1)!=0)?(1):(m.r)); m.r=((below(m.r, 0)!=0)?(0):(m.r)); m.g=((above(m.g, 1)!=0)?(1):(m.g)); m.g=((below(m.g, 0)!=0)?(0):(m.g)); m.b=((above(m.b, 1)!=0)?(1):(m.b)); m.b=((below(m.b, 0)!=0)?(0):(m.b));","point_eqs_str":"m.t8=-m.t8; m.d=sqrt((1-sqr(((m.sample-0.5)*2)))); m.z=((m.sample*0.4)-0.2); m.x=((Math.sin((m.sample*100))*m.d)*0.2); m.y=((Math.cos((m.sample*100))*m.d)*0.2); m.p=0.1; m.x=(m.x*(1+(m.t8*m.p))); m.y=(m.y*(1+(m.t8*m.p))); m.z=(m.z*(1+(m.t8*m.p))); m.dir=(((m.t4-m.t6)*0.4)+(((m.t1-m.t3)*(m.t8+1))*0.2)); m.d=(2+pow(m.t2, 3)); m.w=((m.t5*0.4)+(((m.t8+1)*m.t2)*0.2)); m.zz=m.z; m.yy=m.y; m.y=((Math.cos(m.w)*m.yy)-(Math.sin(m.w)*m.zz)); m.z=((Math.sin(m.w)*m.yy)+(Math.cos(m.w)*m.zz)); m.xx=((Math.cos(m.dir)*m.x)-(Math.sin(m.dir)*m.y)); m.yy=((Math.sin(m.dir)*m.x)+(Math.cos(m.dir)*m.y)); m.d=0.5; m.zoom=(2-(sqrt(m.t2)*1.1)); m.zm=div(sqrt((((m.x*m.x)+(m.y*m.y))+sqr((m.z+m.d)))),m.d); m.x=(0.5+div(((m.zoom*m.xx)*0.55),m.zm)); m.y=(0.5+div(((m.zoom*m.yy)*0.55),m.zm)); m.a=sigmoid((-m.z+0.1), 25);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.w = 0;\nm.ww = 0;\nm.vt = 0;\nm.xh = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.vb = 0;\nm.v = 0;\nm.ax = 0;\nm.mm = 0;\nm.tt = 0;\nm.yh = 0;\nm.wv = 0;\nm.vx = 0;\nm.pi = 0;\nm.vy = 0;\nm.pi3 = 0;\nm.ry = 0;\nm.q4 = 0;\nm.ddy = 0;\nm.rx = 0;\nm.ay = 0;\nm.t = 0;\nm.b = 0;\nm.r = 0;\nm.g = 0;\nm.wh = 0;\nm.bb = 0;\nm.ddx = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.m = 0;\nm.vvm = 0;\nm.yy = 0;\nm.vvb = 0;\nm.vm = 0;\nm.c = 0;\nm.vvt = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.vb=((m.vb*0.95)+(((1-m.vb)*pow(m.bass, 2))*0.02)); m.vvb=((m.vvb*0.95)+(((1-m.vvb)*m.vb)*0.01)); m.vm=((m.vm*0.95)+(((1-m.vm)*pow(m.mid, 2))*0.02)); m.vvm=((m.vvm*0.95)+(((1-m.vvm)*m.vm)*0.01)); m.vt=((m.vt*0.95)+(((1-m.vt)*pow(m.treb, 2))*0.02)); m.vvt=((m.vvt*0.95)+(((1-m.vvt)*m.vt)*0.01)); m.vvb=Math.min(1, Math.max(0, m.vvb)); m.vvm=Math.min(1, Math.max(0, m.vvm)); m.vvt=Math.min(1, Math.max(0, m.vvt)); m.q1=(m.vvb*2); m.q2=(m.vvm*2); m.q3=(m.vvt*2); m.v=2; m.bb=(m.bb-(m.vvb*m.v)); m.mm=(m.mm-(m.vvm*m.v)); m.tt=(m.tt-(m.vvt*m.v)); m.q4=m.bb; m.q5=m.mm; m.q6=m.tt; m.pi3=((3.1415*2)*0.3333); m.t=(((m.q4+m.q5)+m.q6)*0.005); m.c=3; m.r=(Math.sin(m.t)*m.c); m.g=(Math.sin((m.t+m.pi3))*m.c); m.b=(Math.sin((m.t-m.pi3))*m.c); m.ob_r=Math.min(1, Math.max(0, m.r)); m.ob_g=Math.min(1, Math.max(0, m.g)); m.ob_b=Math.min(1, Math.max(0, m.b));\n\t\tm.rkeys = ['ax','ay'];","pixel_eqs_str":"m.pi=Math.asin(1); m.x=(m.x-0.5); m.y=(m.y-0.5); m.d=((((m.q4-m.q6)*0.4)+(((m.rad-0.3)*(m.q1-m.q3))*2))+m.pi); m.xx=((Math.sin(m.d)*m.x)-(Math.cos(m.d)*m.y)); m.yy=((Math.cos(m.d)*m.x)+(Math.sin(m.d)*m.y)); m.x=m.xx; m.y=m.yy; m.t=(m.time*0.2); m.xh=m.x; m.yh=m.y; m.w=((m.q4-m.q6)*0.8); m.m=(-1+(m.q2*2)); m.wv=(m.pi-(Math.sin(m.w)*m.m)); m.wh=(m.pi-(Math.cos(m.w)*m.m)); m.d=(8*sqrt(m.q2)); m.ww=1.2; m.ddx=Math.sin((((2*m.pi)-m.wv)-(m.x*m.ww))); m.ddy=Math.sin((((2*m.pi)-m.wh)-(m.y*m.ww))); m.rx=((above((m.ddx*m.ddy), 0)!=0)?(div(Math.sin(m.wv),m.ddx)):(0)); m.ry=((above((m.ddy*m.ddy), 0)!=0)?(div(Math.sin(m.wh),m.ddy)):(0)); m.v=((-m.q2*0.1)*div(m.d,m.ww)); m.ax=(m.ax+(Math.sin(m.w)*m.v)); m.ay=(m.ay+(Math.cos(m.w)*m.v)); m.vx=((equal((m.rx*m.ry), 0)!=0)?(0):(m.ax)); m.vy=((equal((m.rx*m.ry), 0)!=0)?(0):(m.ay)); m.dx=((((-m.xh*m.rx)*m.ry)*m.d)+(m.vx*0.001)); m.dy=((((-m.yh*m.rx)*m.ry)*m.d)+(m.vy*0.001));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (mix (texture (sampler_main, uv_orig).xyz, texture (sampler_main, (uv - \n    floor(uv)\n  )).xyz, vec3(0.5, 0.5, 0.5)) * 0.9);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 * hue_shader);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}