{"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":3,"additivewave":1,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":0.084,"wave_smoothing":0.36,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_a":1,"ib_size":0,"mv_x":12.8,"mv_y":9.6,"mv_l":0.05,"mv_b":0.5,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":382,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.05},"init_eqs_str":"m.xang = 0;\nm.ampl = 0;\nm.fov = 0;\nm.q12 = 0;\nm.t1 = 0;\nm.yang = 0;\nm.q13 = 0;\nm.q29 = 0;\nm.t3 = 0;\nm.my = 0;\nm.oz = 0;\nm.t_rel = 0;\nm.mz = 0;\nm.oy = 0;\nm.mx = 0;\nm.t2 = 0;\nm.zang = 0;\nm.q14 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.t_abs = 0;\nm.q20 = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=(1*Math.cos(m.q30)); m.t2=(1*Math.sin((m.q30*4))); m.t3=div(m.q29,3);","point_eqs_str":"m.t_abs=m.sample; m.t_rel=(m.sample-div(m.time,6)); m.ampl=(Math.abs((Math.sin((m.t_abs*3))-mod(m.q28,2)))+0.5); m.ox=((3*Math.sin((4*m.q30)))+(m.ampl*Math.sin((m.t_rel*500)))); m.oy=((3*Math.cos(m.q30))+(m.ampl*Math.cos((m.t_rel*(480+(4*m.q28)))))); m.oz=(m.t_abs*3); m.r=m.q12; m.b=m.q13; m.g=m.q14; m.xang=(m.t2+div(m.t3,3)); m.yang=((m.t1*m.t2)-div(m.t3,4)); m.zang=m.t3; m.fov=Math.min(Math.max((0.2*m.q20), 0.1), 0.4); m.mx=((m.ox*Math.cos(m.zang))-(m.oy*Math.sin(m.zang))); m.my=((m.ox*Math.sin(m.zang))+(m.oy*Math.cos(m.zang))); m.ox=m.mx; m.oy=m.my; m.mx=((m.ox*Math.cos(m.yang))+(m.oz*Math.sin(m.yang))); m.mz=((-m.ox*Math.sin(m.yang))+(m.oz*Math.cos(m.yang))); m.ox=m.mx; m.oz=m.mz; m.my=((m.oy*Math.cos(m.xang))-(m.oz*Math.sin(m.xang))); m.mz=((m.oy*Math.sin(m.xang))+(m.oz*Math.cos(m.xang))); m.oy=m.my; m.oz=m.mz; m.oz=(m.oz-7); m.x=(div((m.ox*m.fov),m.oz)+0.5); m.y=(div((m.oy*m.fov),m.oz)+0.5);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.winkel = 0;\nm.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.trel = 0;\nm.rott = 0;\nm.mid_ = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.trel_ = 0;\nm.pulse = 0;\nm.dec_slow = 0;\nm.treb_ = 0;\nm.p2 = 0;\nm.avg = 0;\nm.rota = 0;\nm.q19 = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.bass_ = 0;\nm.trel=rand(10); m.index=rand(8); m.index2=rand(8); m.avg=0;","frame_eqs_str":"m.dec_med=pow(0.8, div(30,m.fps)); m.dec_slow=pow(0.98, div(30,m.fps)); m.beat=div(((m.bass+m.mid)+m.treb),3); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=(((m.bass+m.mid)+m.treb)-((m.bass_att+m.mid_att)+m.treb_att)); m.q23=(m.beat-m.avg); m.q24=m.is_beat; m.q27=m.index; m.q28=m.index2; m.q19=m.index; m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.14159265359),2); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.pulse=((m.pulse*m.dec_slow)+((1-m.dec_slow)*m.peak)); m.winkel=(m.winkel+(div(m.pulse,m.fps)*30)); m.q29=m.winkel; m.trel=(m.trel+div(div(((m.bass_+m.mid_)+m.treb_),m.fps),3)); m.trel_=((m.trel_*m.dec_med)+((1-m.dec_med)*m.trel)); m.q30=m.trel_; m.q31=(Math.sin(div(m.trel_,4))*12); m.dec_slow=pow(0.94, div(30,m.fps)); m.bass_=((m.bass_*m.dec_slow)+((1-m.dec_slow)*m.bass_att)); m.mid_=((m.mid_*m.dec_slow)+((1-m.dec_slow)*m.mid_att)); m.treb_=((m.treb_*m.dec_slow)+((1-m.dec_slow)*m.treb_att)); m.q12=sigmoid(((m.bass_-m.treb_)*4), 1); m.q13=sigmoid(((m.mid_-m.bass_)*4), 1); m.q14=sigmoid(((m.treb_-m.mid_)*4), 1); m.q15=above(m.q20, 1.3); m.rota=((m.rota*m.dec_med)+div(((1-m.dec_med)*m.q22),2)); m.zoom=(1.0+div(((0.04*m.q1)*50),m.fps)); m.cx=(0.5+((0.2*Math.sin((m.trel_*12)))*bnot(mod(m.q28,3)))); m.cy=(0.5+((0.4*Math.cos((m.trel_*6)))*bnot(mod(m.q28,3)))); m.rot=div((((0.04*m.q1)+(div(m.rota,8)*m.q2))*50),m.fps); m.dx=(div(((0.012*m.q1)*50),m.fps)*m.avg); m.dy=(div(((0.012*m.q2)*50),m.fps)*m.avg);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"float xlat_mutableq25;\nshader_body\n{\n  vec2 uv_1;\n  vec3 crisp_2;\n  float tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv_orig);\n  tmpvar_3 = ((16.0 * dot (\n    ((tmpvar_4.xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))) * (0.5 + q22));\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\n  tmpvar_5[1u].x = sin(tmpvar_3);\n  tmpvar_5[1u].y = cos(tmpvar_3);\n  uv_1 = (uv + ((0.25 * \n    dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29))\n  ) * (\n    (uv - 0.5)\n   * tmpvar_5)));\n  vec2 tmpvar_6;\n  tmpvar_6 = (((uv_orig * texsize.xy) * 0.02) + time);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\n  uv_1 = (uv_1 + ((tmpvar_7 * texsize.zw) * q31));\n  crisp_2 = (((\n    ((texture (sampler_fw_main, uv_1) * 2.0).xyz * 0.98)\n   / 2.0) - 0.005) - (8.0 * max (\n    pow ((uv_orig.x - 0.5), 6.0)\n  , \n    pow ((uv_orig.y - 0.5), 6.0)\n  )));\n  xlat_mutableq25 = (float((q22 >= 1.0)) * q15);\n  crisp_2 = ((crisp_2 * (1.0 - xlat_mutableq25)) + (xlat_mutableq25 * texture (sampler_main, uv_orig).xyz));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = mix (crisp_2, vec3(dot (crisp_2, vec3(0.32, 0.49, 0.29))), vec3((0.2 * dot (\n    ((tmpvar_4.xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29)))));\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"vec3 xlat_mutableback;\nshader_body\n{\n  vec3 ret_1;\n  xlat_mutableback = ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3);\n  vec2 tmpvar_2;\n  tmpvar_2.x = uv.x;\n  tmpvar_2.y = ((-(uv.y) * 2.0) + 2.0);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, (1.5 * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ), vec3(clamp (\n    dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\n  , 0.0, 1.0))) + ((xlat_mutableback * q22) / 2.0));\n  ret_1 = (ret_1 + ((\n    (clamp ((0.5 - (4.0 * \n      dot (xlat_mutableback, vec3(0.32, 0.49, 0.29))\n    )), 0.0, 1.0) * (uv.y / 2.0))\n   * \n    (1.0 - (dot ((\n      (texture (sampler_blur2, fract(tmpvar_2)).xyz * scale2)\n     + bias2), vec3(0.32, 0.49, 0.29)) * clamp ((4.0 - \n      (4.0 * tmpvar_2.y)\n    ), 0.0, 1.0)))\n  ) * (0.5 + \n    (hue_shader / 2.0)\n  )));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n"}