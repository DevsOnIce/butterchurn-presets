{"baseVals":{"rating":3,"decay":0.96,"echo_zoom":1.905,"wave_brighten":0,"wrap":0,"darken_center":1,"wave_a":0.009,"wave_scale":0.01,"wave_smoothing":0.63,"wave_mystery":-0.8,"fshader":1,"sx":0.9803,"wave_r":0,"wave_g":0,"ib_size":0,"ib_r":1,"ib_g":0,"ib_b":0,"ib_a":0.47,"mv_x":64,"mv_y":48,"mv_dx":-0.28,"mv_l":0,"mv_g":0,"mv_b":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":1024,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_str":"m.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.xs = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.nc = 0;\nm.z3 = 0;\nm.t3 = 0;\nm.zs = 0;\nm.x3 = 0;\nm.ys = 0;\nm.pigtemp = 0;\nm.x2 = 0;\nm.t2 = 0;\nm.y2 = 0;\nm.size = 0;\nm.z1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.pigtemp=Math.floor(pow(4, ((m.bass+m.treb)+m.mid))); m.num_inst=((above(m.pigtemp, 1024)!=0)?(1024):(m.pigtemp)); m.t1=div(m.time,5); m.t2=div(m.time,6); m.rad=(0.005+div(m.bass,100)); m.t3=div(m.bass_att,70); m.b2=((m.treb*0.7)-div(m.bass,2)); m.r=div(m.instance,m.num_inst); m.g=Math.abs((div(m.treb_att,5)-m.bass)); m.size=(0.3+div(m.bass_att,300)); m.nc=sqrt(m.num_inst); m.xs=(Math.sin(div((6.28*mod(m.instance,m.nc)),m.nc))*Math.sin(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc))); m.ys=(Math.cos(div((6.28*mod(m.instance,m.nc)),m.nc))*Math.sin(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc))); m.zs=Math.cos(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc)); m.y1=((m.ys*Math.cos(m.t1))-(m.zs*Math.sin(m.t1))); m.z1=((m.ys*Math.sin(m.t1))+(m.zs*Math.cos(m.t1))); m.x1=((m.z1*Math.sin(m.t2))+(m.xs*Math.cos(m.t2))); m.z2=((m.z1*Math.cos(m.t2))-(m.xs*Math.sin(m.t2))); m.x2=((m.x1*Math.cos(m.t3))-(m.y1*Math.sin(m.t3))); m.y2=((m.y1*Math.cos(m.t3))+(m.x1*Math.sin(m.t3))); m.x3=m.x2; m.y3=m.y2; m.z3=m.z2; m.x=(0.5+(m.size*div(m.x3,(1+(m.z3*m.size))))); m.y=(0.5+(m.size*div(m.y3,(1+(m.z3*m.size))))); m.a=below(m.z3, 0);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.vol3 = 0;\nm.q21 = 0;\nm.q6 = 0;\nm.midrun = 0;\nm.q1 = 0;\nm.q9 = 0;\nm.pi23 = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.bassrun = 0;\nm.vol = 0;\nm.q2 = 0;\nm.trebrun = 0;\nm.vol2 = 0;\nm.q3 = 0;\nm.q7 = 0;\nm.q20 = 0;\nm.q8 = 0;","frame_eqs_str":"m.bassrun=(m.bass+m.bassrun); m.trebrun=(m.treb+m.trebrun); m.midrun=(m.mid+m.midrun); m.vol=(((m.bassrun+m.midrun)+m.trebrun)*0.03); m.vol2=(m.vol*0.001); m.warp=0; m.zoom=(1.4+(0.15*Math.cos((m.vol*0.42)))); m.rot=(0.01*Math.sin((1.34*m.vol))); m.dx=(0.005*Math.sin((m.vol*0.646))); m.dy=(0.005*Math.sin((m.vol*0.314))); m.cx=(0.5+(0.05*Math.sin((0.497*m.vol)))); m.cy=(0.5+(0.05*Math.sin((0.413*m.vol)))); m.pi23=((4*Math.asin(-1))*0.33333333333333); m.q6=((Math.sin((m.vol-(0*m.pi23)))+1)*0.5); m.q7=((Math.sin((m.vol-(1*m.pi23)))+1)*0.5); m.q8=((Math.sin((m.vol-(2*m.pi23)))+1)*0.5); m.mv_r=m.q6; m.mv_g=m.q7; m.mv_b=m.q8; m.q9=(m.q6+1); m.vol3=(((m.bass+m.mid)+m.treb)*0.3); m.q21=(m.vol*0.05); m.q26=m.vol3; m.q20=m.vol3; m.q1=(m.q6*0.3); m.q2=(m.q7*0.3); m.q3=(m.q8*0.3); m.q4=(div(m.q8,m.q6)*2);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutablec;\nvec2 xlat_mutabletmp;\nvec2 xlat_mutablezz;\nshader_body\n{\n  vec3 ret_1;\n  xlat_mutablec = (((uv_orig - 0.5) * 4.0) + vec2(-0.5, 0.0));\n  xlat_mutablezz.x = ((xlat_mutablec.x * xlat_mutablec.x) - (xlat_mutablec.y * xlat_mutablec.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutablec.x) * xlat_mutablec.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  xlat_mutabletmp = xlat_mutablezz;\n  xlat_mutablezz.x = ((xlat_mutablezz.x * xlat_mutablezz.x) - (xlat_mutablezz.y * xlat_mutablezz.y));\n  xlat_mutablezz.y = ((2.0 * xlat_mutabletmp.x) * xlat_mutabletmp.y);\n  xlat_mutablezz = (xlat_mutablezz + xlat_mutablec);\n  ret_1 = (((texture (sampler_noise_lq, \n    (abs(xlat_mutablezz) / 12.0)\n  ) * 0.15) / (\n    dot (xlat_mutablezz, xlat_mutablezz)\n   + 2.0)).xyz + texture (sampler_fc_main, (uv + (xlat_mutablezz * q18))).xyz);\n  ret_1 = ((ret_1 * 0.99) - 0.01);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"vec2 xlat_mutabledz;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutableuv3;\nshader_body\n{\n  vec2 uv2_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.0;\n  tmpvar_2.x = texsize.z;\n  vec2 tmpvar_3;\n  tmpvar_3.x = 0.0;\n  tmpvar_3.y = texsize.w;\n  xlat_mutabledz.x = dot ((texture (sampler_main, (uv + tmpvar_2)).xyz - texture (sampler_main, (uv - tmpvar_2)).xyz), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz), vec3(0.32, 0.49, 0.29));\n  uv2_1 = (uv - 0.5);\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (time / 2.0);\n  xlat_mutableuv3 = ((0.2 * cos(\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\n  )) + (99.0 * xlat_mutabledz));\n  float tmpvar_5;\n  tmpvar_5 = clamp ((0.01 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_5)) + (0.9 * dot (vec3(tmpvar_5), vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * 1.252262));\n  xlat_mutableuv3 = ((0.2 * uv2_1) + 0.5);\n  xlat_mutableuv3 = ((0.2 * cos(\n    ((42.0 * fract(xlat_mutableuv3)) + tmpvar_4)\n  )) + (99.0 * xlat_mutabledz));\n  float tmpvar_6;\n  tmpvar_6 = clamp ((0.01 / sqrt(\n    dot (xlat_mutableuv3, xlat_mutableuv3)\n  )), 0.0, 1.0);\n  xlat_mutableneu = ((0.1 * vec3(tmpvar_6)) + (0.9 * dot (vec3(tmpvar_6), vec3(0.32, 0.49, 0.29))));\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * 1.252262));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (xlat_mutableret1 + clamp ((\n    (16.0 * ((0.5 * texture (sampler_main, (uv + \n      (0.1 * xlat_mutabledz)\n    )).xyz) + 0.01))\n   * \n    (0.1 + xlat_mutableret1)\n  ), 0.0, 1.0));\n  ret = tmpvar_7.xyz;\n}\n\n"}