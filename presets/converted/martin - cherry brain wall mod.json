{"baseVals":{"rating":4,"gammaadj":1.88,"decay":0.5,"echo_zoom":0.952,"echo_alpha":0.5,"echo_orient":0,"wave_mode":6,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0,"wave_scale":1.211,"wave_smoothing":0.09,"wave_mystery":0.4,"modwavealphastart":1.42,"modwavealphaend":2,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":1.0099,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0,"wave_g":1,"wave_b":1,"wave_x":1,"wave_y":0.5,"ob_size":0,"ob_r":0.1,"ob_g":0,"ob_b":0.3,"ob_a":0,"ib_size":0.15,"ib_r":0.6,"ib_g":0.5,"ib_b":0.4,"ib_a":0,"mv_x":12,"mv_y":9,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":0.6,"b2x":0.6,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":25,"additive":0,"thickoutline":1,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.5703,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":0,"r2":1,"g2":1,"b2":1,"a2":0.5,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q24 = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.bob=1.5; m.ro=0; m.red=rand(20);\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.rad=(0.57+(0.1*Math.sin((m.q1*1.24)))); m.tex_zoom=(1.2+(0.4*Math.sin(m.q3))); m.tex_ang=Math.sin((m.q4*3.29)); m.border_a=div(m.q24,4); m.x=(0.5+(0.10*Math.sin((m.q2*0.62)))); m.y=(0.5+(0.10*Math.sin((m.q3*0.73)))); m.a=(0.5+(0.5*Math.sin((m.q4*0.452)))); m.a2=Math.min(0.8, (1+Math.sin((m.q4*1.6)))); m.a=(1-m.a2);"},{"baseVals":{"enabled":1,"sides":15,"additive":0,"thickoutline":1,"textured":0,"num_inst":4,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":0,"g2":0,"b2":0,"a2":0.5,"border_r":0,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.arg = 0;\nm.fac = 0;\nm.q1 = 0;\nm.q11 = 0;\nm.ccx = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.rad1 = 0;\nm.q27 = 0;\nm.q32 = 0;\nm.ccy = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.arg=((div(m.q10,m.num_inst)+div(m.instance,m.num_inst))*6.283); m.rad1=0.25; m.ccx=(0.5+(0.1*Math.sin((m.q4*2.7)))); m.ccy=(0.5+(0.1*Math.sin((m.q1*4.8)))); m.x=(m.ccx+div((m.rad1*Math.cos(((m.arg*m.q11)-(m.q1*0.31)))),m.q11)); m.y=(m.ccy+((m.rad1*Math.sin(m.arg))*m.q32)); m.rad=Math.min(0.3, ((m.bass_att+m.mid_att)*0.04)); m.r=(0.5+(0.4*Math.sin(div(m.frame,4)))); m.b=(0.5+(0.4*Math.sin((div(m.frame,4)+2.1)))); m.g=(0.5+(0.4*Math.sin((div(m.frame,4)+4.2)))); m.fac=0.5; m.r2=(m.r*m.fac); m.b2=(m.b*m.fac); m.g2=(m.g*m.fac); m.a=1; m.a2=div(m.q11,2); m.border_a=((m.q27<3)?1:0);"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":4,"x":0.5,"y":0.5,"rad":0.40272,"ang":0,"tex_ang":2.51327,"tex_zoom":0.55045,"r":1,"g":0.95,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.k1 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.tex_ang=m.q3; m.k1=((div(m.instance,m.num_inst)*6.28)+div(3.14,4)); m.x=(0.5+(0.5*Math.cos(m.k1))); m.y=(0.5+(0.5*Math.sin(m.k1)));"},{"baseVals":{"enabled":1,"sides":5,"additive":0,"thickoutline":0,"textured":0,"num_inst":25,"x":0.5,"y":0.5,"rad":0.08195,"ang":0,"tex_ang":0,"tex_zoom":0.90529,"r":1,"g":1,"b":1,"a":0.2,"r2":0.3,"g2":0.3,"b2":0.3,"a2":0.2,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.k1 = 0;\nm.ccx = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.k2 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.ccy = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"((((m.instance==0)?1:0)!=0)?(m.k1=0):(m.k1+=(0.05*m.bass_att))); m.k2=(m.k1+(m.q10*6.283)); m.ccx=(0.2*Math.sin((m.q4*0.96))); m.ccy=(0.2*-Math.sin((m.q3*0.296))); m.x=((0.5+m.ccx)+(0.3*Math.cos((m.k2+Math.sin((m.q2*2.29)))))); m.y=((0.5+m.ccy)+((0.3*Math.sin(m.k2))*m.q32)); m.ang=m.k2; m.rad=Math.min(0.1, (0.035*m.treb_att));"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":1,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.n = 0;\nm.maxbpm = 0;\nm.trel3 = 0;\nm.tm1_ = 0;\nm.maxind1 = 0;\nm.bindex = 0;\nm.num_res = 0;\nm.maxv = 0;\nm.q25 = 0;\nm.index = 0;\nm.quali = 0;\nm.q12 = 0;\nm.iba = 0;\nm.q18 = 0;\nm.q21 = 0;\nm.dt = 0;\nm.count6 = 0;\nm.maxquad = 0;\nm.q1 = 0;\nm.r1 = 0;\nm.rand = 0;\nm.obs = 0;\nm.dt1 = 0;\nm.dec_f = 0;\nm.dec_s = 0;\nm.count5 = 0;\nm.minbpm = 0;\nm.reg50 = 0;\nm.omega = 0;\nm.tm2_ = 0;\nm.tm4 = 0;\nm.ec_steps = 0;\nm.is_beat = 0;\nm.tm2 = 0;\nm.tm3_ = 0;\nm.bpm = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.pi = 0;\nm.q10 = 0;\nm.bestsig = 0;\nm.blocksize = 0;\nm.v0 = 0;\nm.dec_m = 0;\nm.q4 = 0;\nm.sig = 0;\nm.r2 = 0;\nm.dir = 0;\nm.ex = 0;\nm.tm3 = 0;\nm.q26 = 0;\nm.avg = 0;\nm.tmpv = 0;\nm.r3 = 0;\nm.beatsin = 0;\nm.trig = 0;\nm.trel4 = 0;\nm.beat = 0;\nm.vol = 0;\nm.tm1 = 0;\nm.tm4_ = 0;\nm.peak = 0;\nm.prog = 0;\nm.beatcos = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.trel1 = 0;\nm.num_sig = 0;\nm.tmp = 0;\nm.vol2 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.dec = 0;\nm.m = 0;\nm.quad = 0;\nm.q32 = 0;\nm.r4 = 0;\nm.q28 = 0;\nm.excite = 0;\nm.n=-5000; for(var mdparser_idx1=0;mdparser_idx1<20000;mdparser_idx1++){m.megabuf[m.n]=0; m.gmegabuf[m.n]=0; m.n+=1;} m.minbpm=50; m.maxbpm=180; m.num_res=80; m.num_sig=3; m.blocksize=((m.num_res*12)+12); m.reg04=m.blocksize; m.sig=0; for(var mdparser_idx2=0;mdparser_idx2<m.num_sig;mdparser_idx2++){m.index=0; for(var mdparser_idx3=0;mdparser_idx3<m.num_res;mdparser_idx3++){m.n=((m.blocksize*m.sig)+(12*m.index)); m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.index,m.num_res))); m.gmegabuf[m.n]=m.bpm; m.index+=1;} m.sig+=1;} m.pi=3.1416; m.octave=div((m.num_res*Math.log(2)),Math.log(div(m.maxbpm,m.minbpm))); m.prog=0; m.bindex=Math.floor(rand(8)); m.count5=Math.floor(rand(8));","frame_eqs_str":"m.dt=Math.min(div(1,m.fps), 0.1); m.dec_f=0.8; m.dec_m=(1-(4*m.dt)); m.dec_s=(1-m.dt); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_s)+(m.beat*(1-m.dec_s))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.25))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_m)); m.bindex=mod((m.bindex+m.is_beat),16); m.q24=m.is_beat; m.q27=m.bindex; m.sig=0; for(var mdparser_idx4=0;mdparser_idx4<m.num_sig;mdparser_idx4++){m.excite=((((m.sig==0)?1:0)!=0)?((m.bass-m.bass_att)):(((((m.sig==1)?1:0)!=0)?((m.mid-m.mid_att)):((m.treb-m.treb_att))))); m.index=0; m.maxquad=0; m.m=((m.sig*m.blocksize)+(m.num_res*12)); m.gmegabuf[(m.m+2)]=0.001; m.gmegabuf[(m.m+3)]=0; for(var mdparser_idx5=0;mdparser_idx5<m.num_res;mdparser_idx5++){m.n=((m.sig*m.blocksize)+(m.index*12)); m.omega=div((m.gmegabuf[m.n]*6.283),60); m.gmegabuf[(m.n+1)]*=(1-(0.22*m.dt)); m.ec_steps=(Math.floor(((10*m.dt)*m.omega))+1); m.dt1=div(m.dt,m.ec_steps); m.ex=div(m.excite,sqrt(m.omega)); for(var mdparser_idx6=0;mdparser_idx6<m.ec_steps;mdparser_idx6++){m.gmegabuf[(m.n+1)]+=((m.ex-(sqr(m.omega)*m.gmegabuf[(m.n+2)]))*m.dt1); m.gmegabuf[(m.n+2)]+=(m.gmegabuf[(m.n+1)]*m.dt1);} m.beatcos=m.gmegabuf[(m.n+1)]; m.beatsin=(m.gmegabuf[(m.n+2)]*m.omega); m.quad=sqrt((pow(m.beatsin, 2)+pow(m.beatcos, 2))); m.gmegabuf[(m.m+4)]+=Math.abs((m.gmegabuf[(m.n+3)]-m.quad)); m.gmegabuf[(m.n+3)]=((m.gmegabuf[(m.n+3)]*m.dec_m)+(m.quad*(1-m.dec_m))); ((((m.gmegabuf[(m.n+3)]>m.gmegabuf[(m.m+3)])?1:0)!=0)?(m.gmegabuf[(m.m+3)]=m.gmegabuf[(m.n+3)]):(0)); m.gmegabuf[(m.m+2)]+=div(m.gmegabuf[(m.n+3)],m.num_res); m.gmegabuf[(m.n+4)]=m.beatcos; m.gmegabuf[(m.n+5)]=m.beatsin; m.index+=1;} m.sig+=1;} m.sig=0; m.quali=0; m.bestsig=-1; for(var mdparser_idx7=0;mdparser_idx7<m.num_sig;mdparser_idx7++){m.m=((m.sig*m.blocksize)+(m.num_res*12)); m.tmp=div(m.gmegabuf[(m.m+3)],m.gmegabuf[(m.m+2)]); ((((m.tmp>m.quali)?1:0)!=0)?((function(){m.quali=m.tmp; return m.bestsig=m.sig;})()):(0)); m.sig+=1;} m.index=0; m.maxind1=0; m.maxv*=m.dec_s; for(var mdparser_idx8=0;mdparser_idx8<m.num_res;mdparser_idx8++){m.n=((m.bestsig*m.blocksize)+(m.index*12)); m.tmpv=m.gmegabuf[(m.n+3)]; ((((m.tmpv>m.maxv)?1:0)!=0)?((function(){m.maxv=m.tmpv; return m.maxind1=m.index;})()):(0)); m.index+=1;} m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.maxind1,m.num_res))); m.trel1+=(div(m.bpm,60)*m.dt); m.q10=m.trel1; m.q11=(((((m.bpm<125)?1:0)*((Math.sin(div((m.q10*6.283),128))>0.3)?1:0))*((m.quali>4)?1:0))+1); m.q12=Math.max(0, (m.quali-2)); m.trig=((m.is_beat&&((mod(m.bindex,2)==0)?1:0))?1:0); m.r1=((m.trig!=0)?((rand(2)-1)):(m.r1)); m.r2=((m.trig!=0)?((rand(2)-1)):(m.r2)); m.r3=((m.trig!=0)?((rand(2)-1)):(m.r3)); m.r4=((m.trig!=0)?((rand(2)-1)):(m.r4)); m.v0=div(((m.bass+m.mid)+m.treb),3); m.dec=((((m.v0>m.vol)?1:0)!=0)?(0.5):(m.dec_s)); m.vol=((m.vol*m.dec)+((1-m.dec)*m.v0)); m.dir=((((m.bindex<12)?1:0)!=0)?(1):(-1)); m.tm1+=(div(((((m.r1>0.3)?1:0)*m.dt)*(0.8+m.vol)),1.8)*m.dir); m.tm2+=div(((((m.r2>0.3)?1:0)*m.dt)*(0.8+m.vol)),2.3); m.tm3+=div(((((m.r3>0.3)?1:0)*m.dt)*(0.8+m.vol)),3.4); m.tm4+=div(((((m.r4>0.3)?1:0)*m.dt)*(0.8+m.vol)),3.6); m.tm1_=((m.dec_f*m.tm1_)+((1-m.dec_f)*m.tm1)); m.tm2_=((m.dec_f*m.tm2_)+((1-m.dec_f)*m.tm2)); m.tm3_=((m.dec_f*m.tm3_)+((1-m.dec_f)*m.tm3)); m.tm4_=((m.dec_f*m.tm4_)+((1-m.dec_f)*m.tm4)); m.q1=m.tm1_; m.q2=m.tm2_; m.q3=m.tm3_; m.q4=m.tm4_; m.q25=((m.is_beat*((m.v0>4)?1:0))*((m.prog>30)?1:0)); m.count5+=((m.is_beat&&((m.v0>5)?1:0))?1:0); m.count6+=((((m.bindex==0)?1:0)*m.is_beat)*((m.v0>3)?1:0)); m.q26=m.count5; m.warp=div(Math.cos((m.q1*0.29)),4); m.zoom=(1+(0.025*Math.sin((m.q3-(m.q1*1.32))))); m.rot=0.0; m.trel3+=(Math.sin((m.q10*6.283))*m.dt); m.q18=m.trel3; m.q32=m.aspecty; m.prog+=1; m.reg50=m.dt; m.trel4+=(div((div((((m.q12>1.5)?1:0)*m.bpm),60)*m.pi),2)*m.dt); m.q28=-m.trel4; m.dec=((((m.v0>m.vol2)?1:0)!=0)?(0.5):(m.dec_m)); m.vol2=((m.vol2*m.dec)+((1-m.dec)*m.v0)); m.q21=Math.min(1.8, (div(m.vol2,5)+0.6)); m.trig=((m.is_beat&&((mod(m.bindex,8)==0)?1:0))?1:0); ((m.trig!=0)?((function(){m.obs=div(rand(10),30); return m.iba=div((div(rand(10),100)*rand(10)),10);})()):(0)); m.ob_size=m.obs; m.ib_a=m.iba; m.ib_r=(0.3+(0.2*Math.sin(div(m.time,11)))); m.ib_g=(0.3+(0.2*Math.sin(div(m.time,17)))); m.ib_b=(0.3+(0.2*Math.sin(div(m.time,7)))); m.monitor=m.q12;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.03);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (cos(tmpvar_1.y) * sin(-(tmpvar_1.y)));\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos(-(tmpvar_1.y)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \n    ((tmpvar_2 * texsize.zw) * 12.0)\n  )) * 0.98) - 0.008).xyz;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"uniform sampler2D sampler_rand00;\nfloat fc;\nfloat size;\nvec2 hor;\nvec2 ver;\nfloat xlat_mutableang1;\nfloat xlat_mutableca;\nvec2 xlat_mutabledz;\nfloat xlat_mutablesa;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv4;\nshader_body\n{\n  fc = (0.5 + (0.3 * sin(q4)));\n  size = (0.4 + (0.1 * sin(q2)));\n  vec2 tmpvar_1;\n  tmpvar_1.y = 0.0;\n  tmpvar_1.x = texsize.z;\n  hor = (tmpvar_1 * 2.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.0;\n  tmpvar_2.y = texsize.w;\n  ver = (tmpvar_2 * 2.0);\n  vec2 uv_3;\n  float noise_4;\n  vec3 ret_5;\n  uv_3 = (((\n    (uv - 0.5)\n   * 2.0) / (1.0 + rad)) + 0.5);\n  xlat_mutableuv1 = (((\n    (uv_3 - 0.5)\n   * aspect.xy) * (1.2 + \n    (rand_preset.y * 0.4)\n  )) + 0.5);\n  xlat_mutableang1 = (((\n    (q1 / 7.0)\n   + \n    (q2 / 9.0)\n  ) + (q3 / 11.0)) - q26);\n  xlat_mutableang1 = (xlat_mutableang1 * 1.8);\n  xlat_mutableca = cos(xlat_mutableang1);\n  xlat_mutablesa = sin(xlat_mutableang1);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = xlat_mutableca;\n  tmpvar_6[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_6[1u].x = xlat_mutablesa;\n  tmpvar_6[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((xlat_mutableuv1 - 0.5) * tmpvar_6) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = xlat_mutableuv1.x;\n  tmpvar_7.y = (abs((xlat_mutableuv1.y - size)) + size);\n  mat2 tmpvar_8;\n  tmpvar_8[uint(0)].x = xlat_mutableca;\n  tmpvar_8[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_8[1u].x = xlat_mutablesa;\n  tmpvar_8[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_7 - 0.5) * tmpvar_8) + 0.5);\n  vec2 tmpvar_9;\n  tmpvar_9.x = xlat_mutableuv1.x;\n  tmpvar_9.y = (abs((xlat_mutableuv1.y - size)) + size);\n  mat2 tmpvar_10;\n  tmpvar_10[uint(0)].x = xlat_mutableca;\n  tmpvar_10[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_10[1u].x = xlat_mutablesa;\n  tmpvar_10[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_9 - 0.5) * tmpvar_10) + 0.5);\n  vec2 tmpvar_11;\n  tmpvar_11.x = xlat_mutableuv1.x;\n  tmpvar_11.y = (abs((xlat_mutableuv1.y - size)) + size);\n  mat2 tmpvar_12;\n  tmpvar_12[uint(0)].x = xlat_mutableca;\n  tmpvar_12[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_12[1u].x = xlat_mutablesa;\n  tmpvar_12[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_11 - 0.5) * tmpvar_12) + 0.5);\n  vec2 tmpvar_13;\n  tmpvar_13.x = xlat_mutableuv1.x;\n  tmpvar_13.y = (abs((xlat_mutableuv1.y - size)) + size);\n  mat2 tmpvar_14;\n  tmpvar_14[uint(0)].x = xlat_mutableca;\n  tmpvar_14[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_14[1u].x = xlat_mutablesa;\n  tmpvar_14[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_13 - 0.5) * tmpvar_14) + 0.5);\n  vec2 tmpvar_15;\n  tmpvar_15.x = xlat_mutableuv1.x;\n  tmpvar_15.y = (abs((xlat_mutableuv1.y - size)) + size);\n  xlat_mutableuv1 = (((\n    (tmpvar_15 - fc)\n   * aspect.yx) + fc) + (0.1 * cos(\n    (q4 * 2.72)\n  )));\n  vec2 tmpvar_16;\n  tmpvar_16 = fract(xlat_mutableuv1);\n  xlat_mutabledz.x = dot (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_16 - hor)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_16 + hor)).xyz * scale1) + bias1)\n  )), vec3(0.32, 0.49, 0.29));\n  xlat_mutabledz.y = dot (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_16 - ver)).xyz * scale1) + bias1)\n  ) - (2.0 * \n    ((texture (sampler_blur1, (tmpvar_16 + ver)).xyz * scale1) + bias1)\n  )), vec3(0.32, 0.49, 0.29));\n  float tmpvar_17;\n  tmpvar_17 = (0.5 / log((1.0 + \n    pow ((uv_3.x - 0.5), 0.5)\n  )));\n  xlat_mutableuv4 = (uv_3 - 0.5);\n  vec2 tmpvar_18;\n  tmpvar_18.x = (tmpvar_17 + (time * 0.1));\n  tmpvar_18.y = (xlat_mutableuv4.y * tmpvar_17);\n  xlat_mutableuv4 = tmpvar_18;\n  noise_4 = ((texture (sampler_noise_lq, tmpvar_18).x + 0.25) * (1.0 - texture (sampler_noise_lq, (tmpvar_18 + \n    (texsize.zw * -4.0)\n  )).x));\n  noise_4 = (noise_4 * (0.5 + dot (\n    vec4(greaterThan (texture (sampler_rand00, tmpvar_18), vec4(0.5, 0.5, 0.5, 0.5)))\n  , vec4(0.32, 0.49, 0.29, 0.0))));\n  float tmpvar_19;\n  tmpvar_19 = clamp ((q21 - (1.1 * rad)), 0.0, 1.0);\n  ret_5 = ((0.08 + (\n    (1.3 * (1.2 - tmpvar_19))\n   * \n    ((texture (sampler_blur2, tmpvar_16).xyz * scale2) + bias2)\n  )) * (0.2 + noise_4));\n  vec2 x_20;\n  x_20 = (cos((12.0 * tmpvar_16)) + (xlat_mutabledz * 16.0));\n  vec3 tmpvar_21;\n  tmpvar_21 = ((tmpvar_19 / (\n    sqrt(dot (x_20, x_20))\n   + 0.07)) * ((texture (sampler_blur1, tmpvar_16).xyz * scale1) + bias1));\n  ret_5 = (max (ret_5, tmpvar_21) + ((0.2 * tmpvar_19) * tmpvar_21));\n  xlat_mutableang1 = (q28 / 2.0);\n  xlat_mutableca = cos(xlat_mutableang1);\n  xlat_mutablesa = sin(xlat_mutableang1);\n  mat2 tmpvar_22;\n  tmpvar_22[uint(0)].x = xlat_mutableca;\n  tmpvar_22[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_22[1u].x = xlat_mutablesa;\n  tmpvar_22[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_16 - 0.5) * tmpvar_22) + 0.5);\n  vec2 tmpvar_23;\n  tmpvar_23.x = xlat_mutableuv1.y;\n  tmpvar_23.y = (abs((xlat_mutableuv1.x - size)) + size);\n  mat2 tmpvar_24;\n  tmpvar_24[uint(0)].x = xlat_mutableca;\n  tmpvar_24[uint(0)].y = -(xlat_mutablesa);\n  tmpvar_24[1u].x = xlat_mutablesa;\n  tmpvar_24[1u].y = xlat_mutableca;\n  xlat_mutableuv1 = (((tmpvar_23 - 0.5) * tmpvar_24) + 0.5);\n  vec2 tmpvar_25;\n  tmpvar_25.x = xlat_mutableuv1.y;\n  tmpvar_25.y = (abs((xlat_mutableuv1.x - size)) + size);\n  xlat_mutableuv1 = tmpvar_25;\n  float tmpvar_26;\n  tmpvar_26 = cos((8.0 * tmpvar_25.x));\n  ret_5 = (ret_5 + ((\n    ((1.0 - rad) * 0.6)\n   * \n    clamp (((0.05 / abs(\n      sqrt((tmpvar_26 * tmpvar_26))\n    )) - 0.5), 0.0, 1.0)\n  ) * noise_4));\n  vec2 x_27;\n  x_27 = (uv_3 - 0.5);\n  vec3 tmpvar_28;\n  tmpvar_28 = mix (vec3(dot (ret_5, vec3(0.32, 0.49, 0.29))), ret_5, vec3(clamp ((2.2 - \n    (3.0 * sqrt(dot (x_27, x_27)))\n  ), 0.0, 1.0)));\n  ret_5 = tmpvar_28;\n  vec4 tmpvar_29;\n  tmpvar_29.w = 1.0;\n  tmpvar_29.xyz = tmpvar_28;\n  ret = tmpvar_29.xyz;\n}\n\n"}