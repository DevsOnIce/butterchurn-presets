{"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.698,"wave_smoothing":0.45,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_g":0.1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":25.6,"mv_y":9.6,"mv_l":5,"mv_g":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.n = 0;\nm.maxbpm = 0;\nm.int = 0;\nm.reg26 = 0;\nm.maxind1 = 0;\nm.uvx0 = 0;\nm.cosb_ = 0;\nm.reg34 = 0;\nm.num_res = 0;\nm.reg28 = 0;\nm.reg23 = 0;\nm.q25 = 0;\nm.angchg = 0;\nm.reg20 = 0;\nm.reg15 = 0;\nm.reg10 = 0;\nm.sinb_ = 0;\nm.index = 0;\nm.quali = 0;\nm.v3 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.diry = 0;\nm.q6 = 0;\nm.posx = 0;\nm.dt = 0;\nm.reg25 = 0;\nm.mean = 0;\nm.uvx = 0;\nm.q1 = 0;\nm.posz = 0;\nm.q5 = 0;\nm.rand = 0;\nm.reg52 = 0;\nm.dt1 = 0;\nm.dec_f = 0;\nm.dirz = 0;\nm.dec_s = 0;\nm.reg16 = 0;\nm.bt2 = 0;\nm.reg36 = 0;\nm.minbpm = 0;\nm.reg22 = 0;\nm.uvy = 0;\nm.rotz = 0;\nm.cosb = 0;\nm.omega = 0;\nm.dist_ = 0;\nm.ec_steps = 0;\nm.bpm = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.reg24 = 0;\nm.ran2 = 0;\nm.pi = 0;\nm.q10 = 0;\nm.reg14 = 0;\nm.sinb = 0;\nm.reg53 = 0;\nm.posy = 0;\nm.reg31 = 0;\nm.dirx = 0;\nm.dec_m = 0;\nm.q4 = 0;\nm.start = 0;\nm.reg12 = 0;\nm.reg13 = 0;\nm.v2p = 0;\nm.c2 = 0;\nm.sqrt = 0;\nm.reg37 = 0;\nm.ex = 0;\nm.s3 = 0;\nm.yslope = 0;\nm.q16 = 0;\nm.xslope = 0;\nm.q26 = 0;\nm.reg38 = 0;\nm.v3p = 0;\nm.reg35 = 0;\nm.p2 = 0;\nm.mov = 0;\nm.reg11 = 0;\nm.tx = 0;\nm.avg = 0;\nm.bt1 = 0;\nm.beatsin = 0;\nm.uvz = 0;\nm.c3 = 0;\nm.uvy0 = 0;\nm.reg27 = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.vol = 0;\nm.reg32 = 0;\nm.reg21 = 0;\nm.uvz0 = 0;\nm.len = 0;\nm.reg18 = 0;\nm.beatcos = 0;\nm.reg30 = 0;\nm.q2 = 0;\nm.b1y = 0;\nm.q27 = 0;\nm.bri = 0;\nm.slen = 0;\nm.q14 = 0;\nm.dist = 0;\nm.trel1 = 0;\nm.p3 = 0;\nm.reg17 = 0;\nm.v1 = 0;\nm.speed = 0;\nm.vol2 = 0;\nm.q3 = 0;\nm.s1 = 0;\nm.vol_ = 0;\nm.dec = 0;\nm.s2 = 0;\nm.quad = 0;\nm.b2y = 0;\nm.ran1 = 0;\nm.q32 = 0;\nm.reg33 = 0;\nm.q7 = 0;\nm.ds = 0;\nm.q28 = 0;\nm.ty = 0;\nm.excite = 0;\nm.c1 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.p4 = 0;\nm.q8 = 0;\nm.maxvol = 0;\nm.n=0; for(var mdparser_idx1=0;mdparser_idx1<20000;mdparser_idx1++){m.megabuf[m.n]=0; m.gmegabuf[m.n]=0; m.n+=1;} m.minbpm=30; m.maxbpm=230; m.num_res=100; m.index=0; for(var mdparser_idx2=0;mdparser_idx2<m.num_res;mdparser_idx2++){m.n=(12*m.index); m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.index,m.num_res))); m.gmegabuf[m.n]=m.bpm; m.index+=1;} m.pi=3.1416; m.octave=div((m.num_res*Math.log(2)),Math.log(div(m.maxbpm,m.minbpm))); m.q7=0.15; m.q8=(0.2+rand(1)); m.q16=1.6; m.start=1; m.travel=0; m.rotz=0; m.t0=(m.time+3); m.cran0=rand(1); m.trelx=0; m.trely=0; m.trelz=0; m.reg20=1; m.reg21=0; m.reg22=0; m.reg23=0; m.reg24=1; m.reg25=0; m.reg26=0; m.reg27=0; m.reg28=1; (function(){var mdparser_idx3;var mdparser_count4=0;do{mdparser_count4+=1;mdparser_idx3=(function(){m.ran1=rand(8); m.ran2=rand(8); m.ran3=rand(8); m.posx=rand(8); m.posy=rand(8); m.posz=rand(8); m.c1=Math.cos(m.ran1); m.c2=Math.cos(m.ran2); m.c3=Math.cos(m.ran3); m.s1=Math.sin(m.ran1); m.s2=Math.sin(m.ran2); m.s3=Math.sin(m.ran3); m.reg20=(m.c2*m.c1); m.reg21=(m.c2*m.s1); m.reg22=-m.s2; m.reg23=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg24=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg25=(m.s3*m.c2); m.reg26=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg27=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg28=(m.c3*m.c2); m.dist=0.001; (function(){var mdparser_idx5;var mdparser_count6=0;do{mdparser_count6+=1;mdparser_idx5=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(1+(2*(((div(m.uvx,4)+30.5)-Math.floor((div(m.uvx,4)+30.5)))-0.5))); m.uvy=(2+(2*(((div(m.uvy,4)+30.5)-Math.floor((div(m.uvy,4)+30.5)))-0.5))); m.uvz=(3+(2*(((div(m.uvz,4)+30.5)-Math.floor((div(m.uvz,4)+30.5)))-0.5))); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx7=0;mdparser_idx7<(7+1);mdparser_idx7++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.05; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx5!==0&&mdparser_count6<1048576);}()); return ((m.dist<0.06)?1:0)})()}while(mdparser_idx3!==0&&mdparser_count4<1048576);}());","frame_eqs_str":"m.dt=Math.min(div(1,m.fps), 0.1); m.dec_f=0.8; m.dec_m=(1-(4*m.dt)); m.dec_s=(1-m.dt); m.vol=div(((m.bass+div(m.mid,2))+m.treb),3); m.vol_=((m.vol_*m.dec_m)+((1-m.dec_m)*m.vol)); m.dec=m.dec_s; m.vol2=((m.vol2*m.dec)+((1-m.dec)*Math.min(3, m.vol))); m.maxvol=((((m.vol>m.maxvol)?1:0)!=0)?(m.vol):((m.maxvol*m.dec_s))); m.excite=(m.vol-m.vol_); m.index=0; m.maxind1=0; m.mean=0; for(var mdparser_idx8=0;mdparser_idx8<m.num_res;mdparser_idx8++){m.n=(m.index*12); m.omega=div(((m.gmegabuf[m.n]*2)*m.pi),60); m.gmegabuf[(m.n+1)]*=(1-(0.25*m.dt)); m.ec_steps=(Math.floor(((10*m.dt)*m.omega))+1); m.dt1=div(m.dt,m.ec_steps); m.ex=m.excite; for(var mdparser_idx9=0;mdparser_idx9<m.ec_steps;mdparser_idx9++){m.gmegabuf[(m.n+1)]+=((m.ex-(sqr(m.omega)*m.gmegabuf[(m.n+2)]))*m.dt1); m.gmegabuf[(m.n+2)]+=(m.gmegabuf[(m.n+1)]*m.dt1);} m.beatcos=m.gmegabuf[(m.n+1)]; m.beatsin=(m.gmegabuf[(m.n+2)]*m.omega); m.quad=sqrt((pow(m.beatsin, 2)+pow(m.beatcos, 2))); m.mean+=div(m.quad,m.num_res); m.gmegabuf[(m.n+3)]=((m.gmegabuf[(m.n+3)]*m.dec_m)+(m.quad*(1-m.dec_m))); ((((m.gmegabuf[(m.n+3)]>m.gmegabuf[((m.maxind1*12)+3)])?1:0)!=0)?(m.maxind1=m.index):(0)); m.index+=1;} m.quali=div(m.gmegabuf[((m.maxind1*12)+3)],m.mean); m.bpm=(m.minbpm*pow(div(m.maxbpm,m.minbpm), div(m.maxind1,m.num_res))); ((((m.bpm>160)?1:0)!=0)?(m.bpm/=2):(0)); m.trel1+=((((div(m.bpm,60)*m.pi)+(m.excite*m.cosb))*((m.maxvol>0.7)?1:0))*m.dt); m.q32=m.trel1; m.speed=((div(((0.15+(m.dist_*0.25))*(1+m.avg)),m.q7)*(0.34+(m.vol_*0.34)))*(m.q8+0.8)); m.ds=((m.ds*m.dec_s)+((((1-m.dec_s)*m.speed)*0.25)*m.dt)); m.rotz=(0.8*pow(Math.sin(div(m.time,12)), 5)); m.dirx=m.reg26; m.diry=m.reg27; m.dirz=m.reg28; m.posx+=(m.ds*m.dirx); m.posy+=(m.ds*m.diry); m.posz+=(m.ds*m.dirz); m.q4=m.posx; m.q5=m.posy; m.q6=m.posz; m.angchg=Math.max(0, (0.4-m.dist_)); m.v1=((m.v1*m.dec_m)+(((1-m.dec_m)*m.rotz)*m.ds)); m.dec=(1-(3*m.dt)); m.v2p=((m.v2p*m.dec)+(((1-m.dec)*((m.angchg*m.xslope)+(m.p2*0.02)))*m.dt)); m.v3p=((m.v3p*m.dec)+(((1-m.dec)*((m.angchg*m.yslope)+(m.p3*0.02)))*m.dt)); m.v2=((m.v2*m.dec)+((1-m.dec)*m.v2p)); m.v3=((m.v3*m.dec)+((1-m.dec)*m.v3p)); m.p3=sign(m.v3); m.p4=sign(m.v2); m.reg30=m.reg20; m.reg31=m.reg21; m.reg32=m.reg22; m.reg33=m.reg23; m.reg34=m.reg24; m.reg35=m.reg25; m.reg36=m.reg26; m.reg37=m.reg27; m.reg38=m.reg28; m.n=0; m.avg=0; for(var mdparser_idx10=0;mdparser_idx10<5;mdparser_idx10++){m.n=(m.n+1); m.ran1=div(rand(100),100); m.ran2=(div(rand(100),200)-0.25); m.tx=((Math.cos(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.ty=((Math.sin(((m.n*1.57)+m.ran2))*((m.n<=4)?1:0))*m.ran1); m.c1=Math.cos(m.v1); m.c2=Math.cos((m.v2+m.ty)); m.c3=Math.cos((m.v3+m.tx)); m.s1=Math.sin(m.v1); m.s2=Math.sin((m.v2+m.ty)); m.s3=Math.sin((m.v3+m.tx)); m.reg10=(m.c2*m.c1); m.reg11=(m.c2*m.s1); m.reg12=-m.s2; m.reg13=(((m.s3*m.s2)*m.c1)-(m.c3*m.s1)); m.reg14=(((m.s3*m.s2)*m.s1)+(m.c3*m.c1)); m.reg15=(m.s3*m.c2); m.reg16=(((m.c3*m.s2)*m.c1)+(m.s3*m.s1)); m.reg17=(((m.c3*m.s2)*m.s1)-(m.s3*m.c1)); m.reg18=(m.c3*m.c2); m.reg20=m.reg30; m.reg21=m.reg31; m.reg22=m.reg32; m.reg23=m.reg33; m.reg24=m.reg34; m.reg25=m.reg35; m.reg26=m.reg36; m.reg27=m.reg37; m.reg28=m.reg38; m.q20=(((m.reg10*m.reg20)+(m.reg11*m.reg23))+(m.reg12*m.reg26)); m.q21=(((m.reg10*m.reg21)+(m.reg11*m.reg24))+(m.reg12*m.reg27)); m.q22=(((m.reg10*m.reg22)+(m.reg11*m.reg25))+(m.reg12*m.reg28)); m.q23=(((m.reg13*m.reg20)+(m.reg14*m.reg23))+(m.reg15*m.reg26)); m.q24=(((m.reg13*m.reg21)+(m.reg14*m.reg24))+(m.reg15*m.reg27)); m.q25=(((m.reg13*m.reg22)+(m.reg14*m.reg25))+(m.reg15*m.reg28)); m.q26=(((m.reg16*m.reg20)+(m.reg17*m.reg23))+(m.reg18*m.reg26)); m.q27=(((m.reg16*m.reg21)+(m.reg17*m.reg24))+(m.reg18*m.reg27)); m.q28=(((m.reg16*m.reg22)+(m.reg17*m.reg25))+(m.reg18*m.reg28)); m.reg20=m.q20; m.reg21=m.q21; m.reg22=m.q22; m.reg23=m.q23; m.reg24=m.q24; m.reg25=m.q25; m.reg26=m.q26; m.reg27=m.q27; m.reg28=m.q28; m.dist=0.002; (function(){var mdparser_idx11;var mdparser_count12=0;do{mdparser_count12+=1;mdparser_idx11=(function(){m.uvx=div((m.reg26*m.dist),m.q7); m.uvy=div((m.reg27*m.dist),m.q7); m.uvz=div((m.reg28*m.dist),m.q7); m.uvx+=m.posx; m.uvy+=m.posy; m.uvz+=m.posz; m.uvx=(1+(2*(((div(m.uvx,4)+30.5)-Math.floor((div(m.uvx,4)+30.5)))-0.5))); m.uvy=(2+(2*(((div(m.uvy,4)+30.5)-Math.floor((div(m.uvy,4)+30.5)))-0.5))); m.uvz=(3+(2*(((div(m.uvz,4)+30.5)-Math.floor((div(m.uvz,4)+30.5)))-0.5))); m.uvx0=(m.uvx+m.q8); m.uvy0=(m.uvy+m.q8); m.uvz0=(m.uvz+m.q8); for(var mdparser_idx13=0;mdparser_idx13<(7+1);mdparser_idx13++){m.uvx=((((m.uvx>1)?1:0)!=0)?((2-m.uvx)):(((((m.uvx<-1)?1:0)!=0)?((-2-m.uvx)):(m.uvx)))); m.uvy=((((m.uvy>1)?1:0)!=0)?((2-m.uvy)):(((((m.uvy<-1)?1:0)!=0)?((-2-m.uvy)):(m.uvy)))); m.uvz=((((m.uvz>1)?1:0)!=0)?((2-m.uvz)):(((((m.uvz<-1)?1:0)!=0)?((-2-m.uvz)):(m.uvz)))); m.slen=(((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz)); m.uvx=((((((m.slen<0.25)?1:0)!=0)?((m.uvx*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvx,m.slen)):(m.uvx))))*2.6)+m.uvx0); m.uvy=((((((m.slen<0.25)?1:0)!=0)?((m.uvy*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvy,m.slen)):(m.uvy))))*2.6)+m.uvy0); m.uvz=((((((m.slen<0.25)?1:0)!=0)?((m.uvz*4)):(((((m.slen<1)?1:0)!=0)?(div(m.uvz,m.slen)):(m.uvz))))*2.6)+m.uvz0);} m.len=sqrt((((m.uvx*m.uvx)+(m.uvy*m.uvy))+(m.uvz*m.uvz))); m.dist*=1.1; return (((m.dist<0.6)?1:0)*((m.len>30)?1:0))})()}while(mdparser_idx11!==0&&mdparser_count12<1048576);}()); m.megabuf[m.n]=((m.megabuf[m.n]*m.dec_s)+((1-m.dec_s)*m.dist)); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.n=0; m.avg=0; for(var mdparser_idx14=0;mdparser_idx14<5;mdparser_idx14++){m.n=(m.n+1); m.avg=(m.avg+Math.abs(div(m.megabuf[m.n],5)));} m.xslope=Math.min(Math.max((8*(m.megabuf[1]-m.megabuf[3])), -2), 2); m.yslope=Math.min(Math.max((8*(m.megabuf[4]-m.megabuf[2])), -2), 2); m.dist_=((m.dist_*m.dec_m)+((1-m.dec_m)*m.dist)); m.q10=(m.ds*m.q7); m.q14=((((1*Math.abs(m.ds))+(2*((Math.abs(m.v1)+Math.abs(m.v2))+Math.abs(m.v3))))+div(1.0,255))+(m.start*0.0)); m.start=(m.start*0.9); m.reg52=-m.v2; m.reg53=m.v3; m.warp=0.0; m.zoom=1; m.rot=m.v1; m.sinb=Math.sin(m.trel1); m.cosb=Math.cos(m.trel1); m.bt1=(((m.sinb*m.sinb_)<0)?1:0); m.bt2=(((m.cosb*m.cosb_)<0)?1:0); ((m.bt1!=0)?((function(){m.b1x=(rand(2)-1); return m.b1y=(rand(2)-1);})()):(0)); ((m.bt2!=0)?((function(){m.b2x=(rand(2)-1); return m.b2y=(rand(2)-1);})()):(0)); m.sinb_=m.sinb; m.cosb_=m.cosb; m.bri=(((m.vol2*0.012)*sqrt(div(100,m.bpm)))+(m.excite*0.01)); m.mov=div(sqrt(((m.v3*m.v3)+(m.v2*m.v2))),m.dt); m.q1=(m.b1x*Math.abs(m.b1x)); m.q2=(m.b1y*Math.abs(m.b1y)); m.q17=(m.b2x*0.4); m.q18=(m.b2y*0.4); m.len=(pow(m.q1, 2)+pow(m.q2, 2)); m.q3=(((pow(m.sinb, 2)*m.bri)*(1+(m.len*4)))*Math.max(0, (1-(5*m.mov)))); m.q19=((pow(m.cosb, 2)*m.bri)*1.2); m.monitor=m.q8;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.warp=0.0; m.zoom=1; m.tx=Math.tan((((2*m.x)-1)*0.9)); m.ty=Math.tan((((2*m.y)-1)*0.9)); m.dx=(div(m.reg52,m.q16)*(1+(0.5*Math.abs(m.tx)))); m.dy=(div(m.reg53,m.q16)*(1+(0.5*Math.abs(m.ty)))); m.dx+=(((m.reg53*m.ty)*(m.x-0.5))*1); m.dy+=(((m.reg52*m.tx)*(m.y-0.5))*1);","warp":"float sustain;\nfloat pix;\nvec3 mod1;\nfloat xlat_mutabledist;\nfloat xlat_mutablestruc;\nvec2 xlat_mutableuv1;\nvec3 xlat_mutableuv2;\nshader_body\n{\n  xlat_mutablestruc = struc;\n  xlat_mutableuv2 = uv2;\n  mat3 tmpvar_1;\n  tmpvar_1[uint(0)].x = q20;\n  tmpvar_1[uint(0)].y = q23;\n  tmpvar_1[uint(0)].z = q26;\n  tmpvar_1[1u].x = q21;\n  tmpvar_1[1u].y = q24;\n  tmpvar_1[1u].z = q27;\n  tmpvar_1[2u].x = q22;\n  tmpvar_1[2u].y = q25;\n  tmpvar_1[2u].z = q28;\n  vec3 tmpvar_2;\n  tmpvar_2.x = q4;\n  tmpvar_2.y = q5;\n  tmpvar_2.z = q6;\n  sustain = (0.97 - q14);\n  pix = (texsize.z * 2.0);\n  mod1 = (rand_preset.xyz - 0.5);\n  vec2 uv_3;\n  vec3 ret_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - 0.5);\n  xlat_mutableuv1 = ((tmpvar_5 * aspect.xy) * q16);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_pw_main, uv);\n  uv_3 = ((tmpvar_5 * (1.0 - \n    (q10 / (1.0 - (tmpvar_6.z + (0.003921569 * tmpvar_6.y))))\n  )) + 0.5);\n  vec4 tmpvar_7;\n  tmpvar_7 = fract((8.0 * texture (sampler_noise_lq, (uv_3 + rand_frame.yz))));\n  xlat_mutabledist = tmpvar_7.x;\n  if ((tmpvar_7.y > 0.16)) {\n    vec4 nb2_8;\n    vec4 nb_9;\n    vec4 tmpvar_10;\n    tmpvar_10 = texture (sampler_pw_main, (uv_3 + vec2(-(pix))));\n    nb_9.x = (1.0 - (tmpvar_10.z + (0.003921569 * tmpvar_10.y)));\n    vec4 tmpvar_11;\n    tmpvar_11 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, -1.0))));\n    nb_9.y = (1.0 - (tmpvar_11.z + (0.003921569 * tmpvar_11.y)));\n    vec4 tmpvar_12;\n    tmpvar_12 = texture (sampler_pw_main, (uv_3 + vec2(pix)));\n    nb_9.z = (1.0 - (tmpvar_12.z + (0.003921569 * tmpvar_12.y)));\n    vec4 tmpvar_13;\n    tmpvar_13 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 1.0))));\n    nb_9.w = (1.0 - (tmpvar_13.z + (0.003921569 * tmpvar_13.y)));\n    vec4 tmpvar_14;\n    tmpvar_14 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, -1.0))));\n    nb2_8.x = (1.0 - (tmpvar_14.z + (0.003921569 * tmpvar_14.y)));\n    vec4 tmpvar_15;\n    tmpvar_15 = texture (sampler_pw_main, (uv_3 + (pix * vec2(1.0, 0.0))));\n    nb2_8.y = (1.0 - (tmpvar_15.z + (0.003921569 * tmpvar_15.y)));\n    vec4 tmpvar_16;\n    tmpvar_16 = texture (sampler_pw_main, (uv_3 + (pix * vec2(0.0, 1.0))));\n    nb2_8.z = (1.0 - (tmpvar_16.z + (0.003921569 * tmpvar_16.y)));\n    vec4 tmpvar_17;\n    tmpvar_17 = texture (sampler_pw_main, (uv_3 + (pix * vec2(-1.0, 0.0))));\n    nb2_8.w = (1.0 - (tmpvar_17.z + (0.003921569 * tmpvar_17.y)));\n    vec4 tmpvar_18;\n    tmpvar_18 = min (nb_9, nb2_8);\n    nb_9.zw = tmpvar_18.zw;\n    nb_9.xy = min (tmpvar_18.xy, tmpvar_18.zw);\n    xlat_mutabledist = ((min (nb_9.x, nb_9.y) + (\n      (0.006 * (tmpvar_7.xyz - 0.5).x)\n     * tmpvar_7.y)) - (q10 * 0.5));\n  };\n  float theta_19;\n  theta_19 = (xlat_mutabledist * 1.35);\n  float theta_20;\n  theta_20 = (xlat_mutabledist * 1.35);\n  vec3 tmpvar_21;\n  tmpvar_21.xy = (xlat_mutableuv1 * ((\n    sin(theta_19)\n   / \n    cos(theta_19)\n  ) / 1.35));\n  tmpvar_21.z = ((sin(theta_20) / cos(theta_20)) / 1.35);\n  xlat_mutableuv2 = (((tmpvar_21 / q7) * tmpvar_1) + tmpvar_2);\n  xlat_mutableuv2 = (((\n    fract(((xlat_mutableuv2 / 4.0) + 0.5))\n   - 0.5) * 2.0) + vec3(1.0, 2.0, 3.0));\n  vec3 zz0_23;\n  vec3 zz_24;\n  zz_24 = xlat_mutableuv2;\n  zz0_23 = (xlat_mutableuv2 + q8);\n  for (int n_22 = 0; n_22 <= 8; n_22++) {\n    zz_24 = ((2.0 * clamp (zz_24, vec3(-1.0, -1.0, -1.0), vec3(1.0, 1.0, 1.0))) - zz_24);\n    zz_24 = (zz_24 * max ((1.0/(\n      dot (zz_24, zz_24)\n    )), 1.0));\n    zz_24 = ((2.6 * zz_24) + zz0_23);\n  };\n  vec4 tmpvar_25;\n  tmpvar_25.w = 0.0;\n  tmpvar_25.xyz = zz_24;\n  float tmpvar_26;\n  tmpvar_26 = sqrt(dot (zz_24, zz_24));\n  vec4 tmpvar_27;\n  tmpvar_27.w = 0.0;\n  tmpvar_27.xyz = mod1;\n  xlat_mutablestruc = ((1.0 - (\n    (1.4 * dot (tmpvar_25, tmpvar_27))\n   / 40.0)) - (xlat_mutabledist * 0.3));\n  if (((tmpvar_26 < 40.0) && (xlat_mutabledist > (0.04 * \n    (1.0 - rad)\n  )))) {\n    ret_4.x = mix (xlat_mutablestruc, texture (sampler_main, uv_3).x, sustain);\n    float x_28;\n    x_28 = ((1.0 - xlat_mutabledist) * 255.0);\n    float ip_29;\n    ip_29 = float(int(x_28));\n    vec2 tmpvar_30;\n    tmpvar_30.x = (x_28 - ip_29);\n    tmpvar_30.y = (ip_29 / 255.0);\n    ret_4.yz = tmpvar_30;\n  } else {\n    ret_4 = ((texture (sampler_fc_main, uv_3) * sustain) - 0.003921569).xyz;\n  };\n  vec4 tmpvar_31;\n  tmpvar_31.w = 1.0;\n  tmpvar_31.xyz = ret_4;\n  ret = tmpvar_31.xyz;\n}\n\n","comp":"float xlat_mutablecross1;\nvec2 xlat_mutabledz1;\nfloat xlat_mutablerdist;\nvec2 xlat_mutableuv0;\nvec2 xlat_mutableuv4;\nvec2 xlat_mutableuva;\nvec2 xlat_mutableuvb;\nshader_body\n{\n  xlat_mutablecross1 = cross1;\n  vec2 tmpvar_1;\n  tmpvar_1.x = q1;\n  tmpvar_1.y = q2;\n  vec2 tmpvar_2;\n  tmpvar_2.x = q17;\n  tmpvar_2.y = q18;\n  vec2 uv_3;\n  vec3 ret_4;\n  uv_3 = (uv + (texsize.zw / 2.0));\n  xlat_mutableuv0 = uv_3;\n  vec2 uvi_5;\n  uvi_5 = (uv_3 + vec2(0.002, 0.0));\n  float tmpvar_6;\n  tmpvar_6 = mix (((texture (sampler_blur1, uvi_5).xyz * scale1) + bias1).x, texture (sampler_main, uvi_5).x, 0.1);\n  vec2 uvi_7;\n  uvi_7 = (uv_3 - vec2(0.002, 0.0));\n  float tmpvar_8;\n  tmpvar_8 = mix (((texture (sampler_blur1, uvi_7).xyz * scale1) + bias1).x, texture (sampler_main, uvi_7).x, 0.1);\n  xlat_mutabledz1.x = ((tmpvar_6 * float(\n    (tmpvar_6 > 0.02)\n  )) - (tmpvar_8 * float(\n    (tmpvar_8 > 0.02)\n  )));\n  vec2 uvi_9;\n  uvi_9 = (uv_3 + vec2(0.0, 0.002));\n  float tmpvar_10;\n  tmpvar_10 = mix (((texture (sampler_blur1, uvi_9).xyz * scale1) + bias1).x, texture (sampler_main, uvi_9).x, 0.1);\n  vec2 uvi_11;\n  uvi_11 = (uv_3 - vec2(0.0, 0.002));\n  float tmpvar_12;\n  tmpvar_12 = mix (((texture (sampler_blur1, uvi_11).xyz * scale1) + bias1).x, texture (sampler_main, uvi_11).x, 0.1);\n  xlat_mutabledz1.y = ((tmpvar_10 * float(\n    (tmpvar_10 > 0.02)\n  )) - (tmpvar_12 * float(\n    (tmpvar_12 > 0.02)\n  )));\n  uv_3 = (uv_3 + (xlat_mutabledz1 * 0.26));\n  xlat_mutablerdist = ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1).z;\n  vec4 tmpvar_13;\n  tmpvar_13.w = 0.0;\n  tmpvar_13.xyz = texture (sampler_noise_hq, vec2(((xlat_mutablerdist * 0.05) + (time * 0.02)))).xyz;\n  vec4 tmpvar_14;\n  tmpvar_14 = mix (tmpvar_13, roam_sin, vec4(0.5, 0.5, 0.5, 0.5));\n  xlat_mutableuv4 = (uv_3 - 0.4);\n  xlat_mutableuva = ((xlat_mutableuv4 - tmpvar_1) - ((\n    ((texture (sampler_blur1, uv_3).xyz * scale1) + bias1)\n  .x * 0.4) * float(\n    (xlat_mutablerdist > 0.2)\n  )));\n  xlat_mutableuvb = ((xlat_mutableuv4 - tmpvar_2) - ((\n    (texture (sampler_blur1, uv_3).xyz * scale1)\n   + bias1).x * 0.4));\n  float angle_15;\n  float tmpvar_16;\n  tmpvar_16 = abs(xlat_mutableuva.x);\n  if ((xlat_mutableuva.y >= 0.0)) {\n    angle_15 = (1.0 - ((xlat_mutableuva.y - tmpvar_16) / (xlat_mutableuva.y + tmpvar_16)));\n  } else {\n    angle_15 = (3.0 - ((xlat_mutableuva.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuva.y)));\n  };\n  float tmpvar_17;\n  if ((xlat_mutableuva.x < 0.0)) {\n    tmpvar_17 = -(angle_15);\n  } else {\n    tmpvar_17 = angle_15;\n  };\n  xlat_mutablecross1 = ((pow (\n    sin((3.141593 * (tmpvar_17 + (5.1 * q20))))\n  , 1.5) + (xlat_mutablerdist / 2.0)) + 0.1);\n  vec3 tmpvar_18;\n  tmpvar_18 = vec3((((1.0/(\n    dot (xlat_mutableuva, xlat_mutableuva)\n  )) / xlat_mutablecross1) * q3));\n  vec3 tmpvar_19;\n  tmpvar_19 = vec3(((1.0/(dot (xlat_mutableuvb, xlat_mutableuvb))) * q19));\n  ret_4 = (clamp ((1.0 - \n    (2.0 * xlat_mutablerdist)\n  ), 0.0, 1.0) * ((\n    (tmpvar_18 * tmpvar_14.xyz)\n   + \n    (tmpvar_19 * (1.0 - tmpvar_14.xyz))\n  ) + 0.1));\n  ret_4 = (ret_4 + (clamp (\n    (2.0 * xlat_mutablerdist)\n  , 0.0, 1.0) * (\n    (tmpvar_18 * tmpvar_14.zyx)\n   + \n    (tmpvar_19 * (1.0 - tmpvar_14.zyx))\n  )));\n  ret_4 = (ret_4 + ((\n    (texture (sampler_blur1, xlat_mutableuv0).xyz * scale1)\n   + bias1).x * 0.05));\n  ret_4 = (1.0 - exp(-(ret_4)));\n  vec4 tmpvar_20;\n  tmpvar_20.w = 1.0;\n  tmpvar_20.xyz = ret_4;\n  ret = tmpvar_20.xyz;\n}\n\n"}