{"baseVals":{"rating":0,"gammaadj":1.7,"decay":0.995,"echo_zoom":0.335,"echo_alpha":0.35,"echo_orient":2,"wave_mode":2,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.195,"wave_scale":0.2,"wave_smoothing":0,"wave_mystery":0.14,"modwavealphastart":0.47,"modwavealphaend":1.32,"dx":0.00001,"dy":0.00001,"warp":0.01,"wave_b":0.3,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.myamp = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(div((-10.4*pow(m.value1, 1.81)),pow(m.value1, 1.8))+10.2); m.myamp=((below(m.freqlvl, 0.5)!=0)?(m.freqlvl):(0.49)); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265359; m.pi23=((2*m.pi)*0.33333333333); m.fade=((m.value1*15)*(1.1-m.myfreq)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=m.myamp; m.y=m.myfreq;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.myamp = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(div((10.4*pow(m.value2, 1.01)),m.value2)-9.2); m.myamp=((above(m.freqlvl, 0.5)!=0)?(m.freqlvl):(0.51)); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265358; m.pi23=((2*m.pi)*0.33333333333); m.fade=((m.value2*15)*(1.1-m.myfreq)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=m.myamp; m.y=m.myfreq;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(div((-10.4*pow(m.value1, 1.81)),pow(m.value1, 1.8))+10.2); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265358; m.pi23=((2*m.pi)*0.33333333333); m.fade=((m.value1*15)*(1.1-m.myfreq)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=(div((10.4*pow(m.value1, 1.81)),pow(m.value1, 1.8))-9.7); m.y=m.myfreq;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(div((10.4*pow(m.value1, 1.81)),pow(m.value2, 1.8))-9.2); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265358; m.pi23=((2*m.pi)*0.33333333333); m.fade=((m.value2*15)*(1.1-m.myfreq)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=(div((-10.4*pow(m.value2, 1.81)),pow(m.value2, 1.8))+10.7); m.y=m.myfreq;"}],"init_eqs_str":"m.thresh = 0;\nm.dx_r = 0;\nm.dy_r = 0;","frame_eqs_str":"m.wave_r=(0.5+(0.5*Math.sin((6*m.time)))); m.wave_g=(0.5+(0.5*Math.sin((4.1*m.time)))); m.wave_b=(-1+(((1-m.wave_r)+1)-m.wave_g)); m.warp=0; m.wave_mystery=(m.wave_mystery+(above(Math.sin((100*m.time)), 0.5)*Math.abs(Math.tan((25*m.time)))));\n\t\tm.rkeys = ['thresh','dx_r','dy_r','dx','zoom'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.dx=(m.dx+Math.abs((0.025*Math.cos((1-Math.abs((0.5*Math.tan(((12*m.dx_r)*m.time))))))))); m.zoom=(m.zoom+((0.05*Math.sin((1-(Math.abs(((1.5*m.dx_r)*m.rad))*m.time))))*Math.cos((4*m.time))));","warp":"vec3 xlat_mutablemus;\nshader_body\n{\n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  float tmpvar_4;\n  tmpvar_4 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_4);\n  tmpvar_5[uint(0)].y = sin(tmpvar_4);\n  tmpvar_5[1u].x = -(sin(tmpvar_4));\n  tmpvar_5[1u].y = cos(tmpvar_4);\n  uv6_2 = (tmpvar_3 * tmpvar_5);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_3)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_6;\n  tmpvar_6 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_7.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_7 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_7, tmpvar_7))\n   * tmpvar_6)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((crisp_1 - \n    (dot (tmpvar_6, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz + (clamp (\n    ((((texture (sampler_blur2, uv).xyz * scale2) + bias2) * 2.8) - 0.13)\n  , 0.0, 1.0) * vec3(1.4, 0.3, 1.3)));\n  ret = tmpvar_1.xyz;\n}\n\n"}