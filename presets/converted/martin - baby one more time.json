{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.229,"wave_smoothing":0.9,"wave_mystery":0.2,"modwavealphastart":0,"modwavealphaend":0,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":12,"num_inst":256,"x":0.123,"y":0,"rad":0.20303,"tex_zoom":0.49981,"g":1,"b":1,"b2":1,"a2":1,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.q12 = 0;\nm.q15 = 0;\nm.k1 = 0;\nm.q11 = 0;\nm.q16 = 0;\nm.q17 = 0;\nm.q32 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.k1=(div(m.instance,m.num_inst)*6.3); m.x=((0.5+(m.q15*Math.cos((m.k1+m.q17))))+(m.q11*-0.2)); m.y=((0.5+((m.q16*m.q32)*Math.sin(((m.k1+m.q17)+m.time))))+(m.q12*0.2)); m.a=0.5; m.a2=0.1; m.r=0.5; m.b=1; m.g=1; m.rad=Math.max((Math.max(Math.abs(m.q15), Math.abs(m.q16))*0.2), 0.04);"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q12 = 0;\nm.peak_ = 0;\nm.q22 = 0;\nm.q15 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.ran1_ = 0;\nm.rott = 0;\nm.my = 0;\nm.is_beat = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.ma = 0;\nm.ran3 = 0;\nm.q16 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.mx = 0;\nm.beat = 0;\nm.q17 = 0;\nm.p1 = 0;\nm.ran2_ = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.t0 = 0;\nm.ran1 = 0;\nm.q32 = 0;\nm.ran3_ = 0;\nm.q28 = 0;\nm.peak__ = 0;\nm.ran1=((div(rand(100),100)-0.5)*2); m.ran2=((div(rand(100),100)-0.5)*2); m.ran3=((div(rand(100),100)-0.5)*2); m.index2=3;","frame_eqs_str":"m.dec_med=pow(0.85, div(30,m.fps)); m.dec_slow=pow(0.96, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((-0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),32); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.q22=m.peak; m.q27=m.index; m.q28=(m.index2+1); m.q24=m.is_beat; m.trig=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.trig*(m.p1+1))+((1-m.trig)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.trig=(m.is_beat*equal(mod(m.index,24), 0)); m.ran1=((m.trig!=0)?(((div(rand(100),100)-0.5)*2)):(m.ran1)); m.trig=(m.is_beat*equal(mod(m.index,16), 0)); m.ran2=((m.trig!=0)?(((div(rand(100),100)-0.5)*2)):(m.ran2)); m.trig=(m.is_beat*equal(mod(m.index,12), 0)); m.ran3=((m.trig!=0)?(((div(rand(100),100)-0.5)*2)):(m.ran3)); m.ran1_=((m.dec_med*m.ran1_)+((1-m.dec_med)*m.ran1)); m.ran2_=((m.dec_med*m.ran2_)+((1-m.dec_med)*m.ran2)); m.ran3_=((m.dec_med*m.ran3_)+((1-m.dec_med)*m.ran3)); m.q11=m.ran1_; m.q12=m.ran2_; m.dx=(0.02*m.ran1_); m.dy=(0.02*m.ran2_); m.zoom=(1+(0.05*m.ran3_)); m.peak_=((m.dec_med*m.peak_)+((1-m.dec_med)*m.peak)); m.peak__=((m.dec_slow*m.peak__)+((1-m.dec_slow)*m.peak_)); m.ma=(m.ma+(div(((m.peak_-m.peak__)*50),m.fps)*bnot(mod(m.index,2)))); m.mx=((m.mx*m.dec_slow)+((1-m.dec_slow)*Math.cos((m.ma*1.3)))); m.my=((m.my*m.dec_slow)+((1-m.dec_slow)*Math.sin(m.ma))); m.q15=m.mx; m.q16=(m.my*0.8); m.q17=(m.ma*0.8); m.q32=m.aspecty; m.monitor=m.dx;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\n  float tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3 = (dot ((\n    (tmpvar_4.xyz * scale1)\n   + bias1), vec3(0.32, 0.49, 0.29)) * 4.0);\n  mat2 tmpvar_5;\n  tmpvar_5[uint(0)].x = cos(tmpvar_3);\n  tmpvar_5[uint(0)].y = -(sin(tmpvar_3));\n  tmpvar_5[1u].x = sin(tmpvar_3);\n  tmpvar_5[1u].y = cos(tmpvar_3);\n  uv_1 = ((tmpvar_2 + (\n    (0.1 * dot (((tmpvar_4.xyz * scale1) + bias1), vec3(0.32, 0.49, 0.29)))\n   * \n    (tmpvar_2 * tmpvar_5)\n  )) - 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6 = ((uv_1 * texsize.xy) * 0.02);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (cos((tmpvar_6.y * q1)) * sin(-(tmpvar_6.y)));\n  tmpvar_7.y = (sin(tmpvar_6.x) * cos((tmpvar_6.y * q2)));\n  uv_1 = (uv_1 - ((tmpvar_7 * texsize.zw) * (q28 * 4.0)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.02);\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"vec2 xlat_mutabledz;\nshader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = ((uv - 0.5) * aspect.xy);\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 4.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * 4.0);\n  xlat_mutabledz.x = ((2.0 * dot (texture (sampler_main, \n    (uv + tmpvar_4)\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \n    (uv - tmpvar_4)\n  ).xyz, vec3(0.32, 0.49, 0.29))));\n  xlat_mutabledz.y = ((2.0 * dot (texture (sampler_main, \n    (uv + tmpvar_6)\n  ).xyz, vec3(0.32, 0.49, 0.29))) - (2.0 * dot (texture (sampler_main, \n    (uv - tmpvar_6)\n  ).xyz, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_main, uv);\n  xlat_mutabledz = (xlat_mutabledz * 12.0);\n  vec2 tmpvar_8;\n  tmpvar_8 = sin(((\n    (2.0 * tmpvar_2)\n   + \n    (xlat_mutabledz * 0.8)\n  ) + vec2(1.0, 1.0)));\n  vec2 tmpvar_9;\n  tmpvar_9 = sin(((\n    (2.0 * tmpvar_2)\n   + xlat_mutabledz) + vec2(1.0, 1.0)));\n  vec2 tmpvar_10;\n  tmpvar_10 = sin(((\n    (2.0 * tmpvar_2)\n   + \n    (xlat_mutabledz * 1.2)\n  ) + vec2(1.0, 1.0)));\n  vec3 tmpvar_11;\n  tmpvar_11.x = (0.1 / sqrt(dot (tmpvar_8, tmpvar_8)));\n  tmpvar_11.y = (0.1 / sqrt(dot (tmpvar_9, tmpvar_9)));\n  tmpvar_11.z = (0.1 / sqrt(dot (tmpvar_10, tmpvar_10)));\n  ret_1 = ((tmpvar_11 - (tmpvar_7.xyz * 0.15)) + (tmpvar_7.y / 2.0));\n  ret_1 = (ret_1 * (1.0 + ret_1));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n}\n\n"}