{"baseVals":{"rating":3,"gammaadj":1,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":0.55045,"smoothing":1,"r":0.19,"g":0.15,"b":0.11},"init_eqs_str":"m.cang = 0;\nm.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.fix = 0;\nm.yp = 0;\nm.t1 = 0;\nm.q1 = 0;\nm.cubesize = 0;\nm.xq = 0;\nm.sang = 0;\nm.zq = 0;\nm.ang = 0;\nm.tm = 0;\nm.zp = 0;\nm.q2 = 0;\nm.taille = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t1=(m.q1*0.25); m.a=((above(((m.treb+m.mid)*0.3), 1)!=0)?(1):((m.treb*0.5)));","point_eqs_str":"m.n=(m.sample*6.283); m.cubesize=m.q2; m.fix=(div(1,m.cubesize)*0.5); m.tm=((m.q1*4)+(m.sample*4)); m.taille=((m.bass*0.25)+0.3); m.xp=(((Math.sin(m.tm)*Math.cos((m.tm*3)))*m.taille)+0.5); m.yp=(((Math.sin((m.tm*1.1))*Math.sin((m.tm*4.1)))*m.taille)+0.5); m.zp=(((Math.sin((m.tm*2.9))*Math.cos((m.tm*1.77)))*m.taille)+0.5); m.xp=((div(Math.floor((m.xp*m.cubesize)),m.cubesize)-0.5)+m.fix); m.yp=((div(Math.floor((m.yp*m.cubesize)),m.cubesize)-0.5)+m.fix); m.zp=((div(Math.floor((m.zp*m.cubesize)),m.cubesize)-0.5)+m.fix); m.ang=m.t1; m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=((m.xp*m.sang)+(m.zp*m.cang)); m.yq=m.yp; m.zq=((m.xp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.ang=(m.t1*0.75); m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=m.xp; m.yq=((m.yp*m.sang)+(m.zp*m.cang)); m.zq=((m.yp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.zp=(m.zp+2); m.x=(div(m.xp,m.zp)+0.5); m.y=((div(m.yp,m.zp)*1.333)+0.5); m.r=(m.bass*0.05); m.g=(m.mid*0.05); m.b=(m.treb*0.05);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mainangle = 0;\nm.q1 = 0;\nm.kick = 0;\nm.beat = 0;\nm.vol = 0;\nm.bc = 0;\nm.size = 0;\nm.q2 = 0;\nm.trigger = 0;\nm.q7 = 0;\nm.mtime = 0;\nm.q8 = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.dcsp=0; m.size=6; m.bc=0;","frame_eqs_str":"m.decay=0.985; m.vol=(((m.bass+m.mid)+m.treb)*0.25); m.vol=(m.vol*m.vol); m.q8=m.vol; m.mtime=(m.mtime+((m.vol*0.01)*div(75,m.fps))); m.q7=m.mtime; m.monitor=div(512,8); m.warp=0; m.q1=(m.mtime*0.9); m.beat=above(m.vol, 1.5); m.bc=Math.max(m.bc, 0); m.bc=((equal(m.bc, 0)!=0)?((m.bc+m.beat)):((m.bc-div(div(1,m.fps),4)))); m.trigger=equal(m.bc, 1); m.monitor=m.bc; m.size=(m.size+m.trigger); m.size=((above(m.size, 9)!=0)?(6):(m.size)); m.mainangle=((m.q1*0.255)*0.75); m.kick=((equal(m.trigger, 1)!=0)?(2):(1)); m.dx=((Math.cos(m.mainangle)*0.003)*m.kick); m.dy=((Math.sin(m.mainangle)*0.003)*m.kick); m.zoom=(1-((m.vol*0.005)*Math.abs(Math.cos(m.mainangle)))); m.q2=Math.floor(m.size);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  float tmpvar_2;\n  tmpvar_2 = dot (texsize.zw, texsize.zw);\n  vec2 tmpvar_3;\n  tmpvar_3 = (uv - 0.5);\n  tmpvar_1.xyz = (max (max (texture (sampler_main, uv).xyz, texture (sampler_main, \n    ((tmpvar_3 * (1.0 - (8.0 * \n      sqrt(tmpvar_2)\n    ))) + 0.5)\n  ).xyz), texture (sampler_main, (\n    (tmpvar_3 * (1.0 + (8.0 * sqrt(tmpvar_2))))\n   + 0.5)).xyz) - 0.03);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec3 ret_4;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_3.x = ((uv_1.x * -0.497265) - (uv_1.y * 0.8675987));\n  uv2_3.y = ((uv_1.x * 0.8675987) + (uv_1.y * -0.497265));\n  uv3_2.x = ((uv_1.x * -0.5000263) - (uv_1.y * -0.8660102));\n  uv3_2.y = ((uv_1.x * -0.8660102) + (uv_1.y * -0.5000263));\n  ret_4 = (max (max (texture (sampler_main, \n    (uv_1 + 0.5)\n  ).xyz, texture (sampler_main, \n    (uv2_3 + 0.5)\n  ).xyz), texture (sampler_main, (uv3_2 + 0.5)).xyz) * 1.3);\n  ret_4 = (ret_4 * ((hue_shader * 4.0) - 2.0));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_4;\n  ret = tmpvar_5.xyz;\n}\n\n"}