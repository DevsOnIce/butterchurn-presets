{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":0.527,"wave_smoothing":0.09,"wave_mystery":0,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0.8,"wave_g":0.49,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":0.7,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":0,"thickoutline":0,"textured":0,"num_inst":1024,"x":0.5,"y":0.5,"rad":0.03632,"ang":0,"tex_ang":1.00531,"tex_zoom":1.53117,"r":1,"g":0,"b":1,"a":0,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":0,"border_a":0},"init_eqs_str":"m.n = 0;\nm.fov = 0;\nm.t1 = 0;\nm.y0 = 0;\nm.x0 = 0;\nm.z0 = 0;\nm.reg02 = 0;\nm.reg03 = 0;\nm.reg00 = 0;\nm.q32 = 0;\n\n\t\t\tm.rkeys = ['b2'];","frame_eqs_str":"m.fov=m.reg03; m.n=(m.instance*m.reg00); m.x0=m.gmegabuf[m.n]; m.y0=m.gmegabuf[(m.n+1)]; m.z0=(m.gmegabuf[(m.n+2)]+m.reg02); m.x=((div(m.x0,m.z0)*m.fov)+0.5); m.y=(((div(m.y0,m.z0)*m.q32)*m.fov)+0.5); m.r=m.gmegabuf[(m.n+3)]; m.g=m.gmegabuf[(m.n+4)]; m.b=m.gmegabuf[(m.n+5)]; m.r2=div(m.r,2); m.g2=div(m.g,2); m.b2=div(m.b2,2); m.a=div(m.instance,1024); m.a2=(m.a*0.5); m.rad=(((Math.min(div(0.02,m.z0), 0.5)*((m.z0>0)?1:0))*2.5)*sqrt(m.a)); m.rad*=m.gmegabuf[(m.n+6)]; m.t1-=1;"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":128,"x":0.26,"y":0.2,"rad":0.39317,"ang":0,"tex_ang":0,"tex_zoom":0.9355,"r":1,"g":1,"b":0.6,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":13,"additive":1,"thickoutline":0,"textured":0,"num_inst":5,"x":0.65,"y":0.38,"rad":0.57049,"ang":0,"tex_ang":0,"tex_zoom":0.73678,"r":1,"g":0,"b":0,"a":0.7,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":0.5,"border_g":0.5,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":14,"additive":1,"thickoutline":1,"textured":1,"num_inst":1,"x":0.6,"y":0.55,"rad":0.97237,"ang":1.25664,"tex_ang":0,"tex_zoom":0.34933,"r":1,"g":0.6,"b":0,"a":1,"r2":0,"g2":0,"b2":1,"a2":0,"border_r":0.2,"border_g":0.7,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":2.15542,"smoothing":0.2,"r":0,"g":1,"b":1,"a":0.7},"init_eqs_str":"m.n = 0;\nm.fov = 0;\nm.t1 = 0;\nm.y0 = 0;\nm.x0 = 0;\nm.reg01 = 0;\nm.k1 = 0;\nm.z0 = 0;\nm.reg02 = 0;\nm.reg03 = 0;\nm.t2 = 0;\nm.reg00 = 0;\n\n\t\t\tm.rkeys = ['t1','t2'];","frame_eqs_str":"m.t1=1023; m.t2=0;","point_eqs_str":"m.fov=m.reg03; m.n=(m.t1*m.reg00); m.x0=m.gmegabuf[m.n]; m.y0=m.gmegabuf[(m.n+1)]; m.z0=(m.gmegabuf[(m.n+2)]+m.reg02); m.x=((div(m.x0,m.z0)*m.fov)+0.5); m.y=((div(m.y0,m.z0)*m.fov)+0.5); m.a=Math.max(0, div(m.t1,1024)); m.k1=(m.reg01+m.t1); m.r=m.gmegabuf[(m.n+3)]; m.g=m.gmegabuf[(m.n+4)]; m.b=m.gmegabuf[(m.n+5)]; m.a=div((div(m.t1,1024)*((m.z0>=0.5)?1:0)),2); m.t1-=1; m.gmegabuf[(10000+m.t2)]=Math.abs((m.value1+m.value2)); m.t2+=1;"},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":0,"g":1,"b":1,"a":0.1},"init_eqs_str":"m.n = 0;\nm.fov = 0;\nm.t1 = 0;\nm.y0 = 0;\nm.x0 = 0;\nm.z0 = 0;\nm.reg02 = 0;\nm.reg03 = 0;\nm.reg00 = 0;\n\n\t\t\tm.rkeys = ['t1'];","frame_eqs_str":"m.t1=512;","point_eqs_str":"m.fov=m.reg03; m.n=(m.t1*m.reg00); m.x0=m.gmegabuf[m.n]; m.y0=m.gmegabuf[(m.n+1)]; m.z0=(m.gmegabuf[(m.n+2)]+m.reg02); m.x=((div(m.x0,m.z0)*m.fov)+0.5); m.y=((div(m.y0,m.z0)*m.fov)+0.5); m.r=m.gmegabuf[(m.n+3)]; m.g=m.gmegabuf[(m.n+4)]; m.b=m.gmegabuf[(m.n+5)]; m.a=div((div(m.t1,1024)*((m.z0>=0.5)?1:0)),2); m.t1-=1;"},{"baseVals":{"enabled":0,"samples":32,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":0.89152,"smoothing":0.82,"r":0,"g":0.2,"b":0.6,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.xang = 0;\nm.n = 0;\nm.fov = 0;\nm.index2 = 0;\nm.ran9 = 0;\nm.ran5_ = 0;\nm.right = 0;\nm.ran4 = 0;\nm.index = 0;\nm.q12 = 0;\nm.yang = 0;\nm.q6 = 0;\nm.y0 = 0;\nm.ran8 = 0;\nm.q1 = 0;\nm.r1 = 0;\nm.q5 = 0;\nm.ran1_ = 0;\nm.rand = 0;\nm.points = 0;\nm.dt1 = 0;\nm.dec_f = 0;\nm.x0 = 0;\nm.new = 0;\nm.dec_s = 0;\nm.k3 = 0;\nm.reg01 = 0;\nm.my = 0;\nm.oz = 0;\nm.is_beat = 0;\nm.k1 = 0;\nm.ran2 = 0;\nm.q11 = 0;\nm.z0 = 0;\nm.q10 = 0;\nm.ran4_ = 0;\nm.ran9_ = 0;\nm.ran3 = 0;\nm.ran5 = 0;\nm.dec_m = 0;\nm.ran7 = 0;\nm.k2 = 0;\nm.mz = 0;\nm.ran8_ = 0;\nm.ddy = 0;\nm.ran6 = 0;\nm.dec2 = 0;\nm.ran6_ = 0;\nm.oy = 0;\nm.rsum = 0;\nm.mx = 0;\nm.beat = 0;\nm.vol = 0;\nm.ran2_ = 0;\nm.peak = 0;\nm.ddx = 0;\nm.q2 = 0;\nm.zang = 0;\nm.trel1 = 0;\nm.ran7_ = 0;\nm.t0 = 0;\nm.dec = 0;\nm.m = 0;\nm.ran1 = 0;\nm.q32 = 0;\nm.ran3_ = 0;\nm.left = 0;\nm.pk = 0;\nm.recsize = 0;\nm.ox = 0;\nm.zofs = 0;\nm.index=0; for(var mdparser_idx1=0;mdparser_idx1<100000;mdparser_idx1++){m.megabuf[m.index]=0; m.gmegabuf[m.index]=0; m.index=(m.index+1);} m.recsize=8; m.reg00=m.recsize; m.points=(512*2); m.reg01=0; m.zofs=(1+(div(rand(100),100)*2)); m.reg02=m.zofs; m.fov=0.3; m.reg03=m.fov;","frame_eqs_str":"m.dec_f=pow(0.3, div(30,m.fps)); m.dec_m=pow(0.85, div(30,m.fps)); m.dec_s=pow(0.95, div(30,m.fps)); m.beat=((((m.bass+m.mid)+m.treb)-((m.bass_att+m.mid_att)+m.treb_att))+((m.bass+m.mid)+m.treb)); m.beat/=3; m.peak=((m.peak*m.dec_m)+((((1-m.dec_m)*pow((m.beat-1), 1))*((m.beat>1)?1:0))*4)); m.is_beat=(above(m.beat, 1)*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),8); ((m.is_beat!=0)?((function(){m.ran1=(div(rand(100),50)-1); m.ran2=(div(rand(100),50)-1); return m.ran3=(div(rand(100),50)-1);})()):(0)); m.ran1_=((m.dec_m*m.ran1_)+((1-m.dec_m)*m.ran1)); m.ran2_=((m.dec_m*m.ran2_)+((1-m.dec_m)*m.ran2)); m.ran3_=((m.dec_m*m.ran3_)+((1-m.dec_m)*m.ran3)); m.rsum=sqrt((((m.ran1_*m.ran1_)+(m.ran2_*m.ran2_))+(m.ran3_*m.ran3_))); (((m.is_beat*((m.index==2)?1:0))!=0)?((function(){m.ran4=(div(rand(100),50)-1); m.ran5=(div(rand(100),50)-1); return m.ran6=(div(rand(100),50)-1);})()):(0)); m.ran4_=((m.dec_m*m.ran4_)+((1-m.dec_m)*m.ran4)); m.ran5_=((m.dec_m*m.ran5_)+((1-m.dec_m)*m.ran5)); m.ran6_=((m.dec_m*m.ran6_)+((1-m.dec_m)*m.ran6)); (((m.is_beat*((m.index==6)?1:0))!=0)?((function(){m.ran7=(div(rand(100),50)-1); m.ran8=(div(rand(100),50)-1); return m.ran9=(div(rand(100),50)-1);})()):(0)); m.ran7_=((m.dec_m*m.ran7_)+((1-m.dec_m)*m.ran7)); m.ran8_=((m.dec_m*m.ran8_)+((1-m.dec_m)*m.ran8)); m.ran9_=((m.dec_m*m.ran9_)+((1-m.dec_m)*m.ran9)); m.pk=sqrt((m.peak+0.1)); m.new=Math.floor((((12*(m.ran4-m.ran5))*m.pk)-div((12*(m.ran3-m.ran1)),m.pk))); m.new=Math.max(Math.min(m.new, 20), 2); m.reg01+=m.new; m.dec=m.dec_m; m.n=(m.recsize*m.points); m.m=0; m.dt1=div((div(((((m.ran1>0)?1:0)!=0)?((4*m.pk)):(div(4,m.pk))),m.fps)*m.new),6); m.vol=((Math.max((m.ran1+m.ran2), 0.2)*m.pk)*2); for(var mdparser_idx2=0;mdparser_idx2<m.new;mdparser_idx2++){m.trel1=(m.trel1+m.dt1); m.x0=((m.x0*m.dec)+((1-m.dec)*((Math.sin((m.trel1+(m.ran3*6)))*m.vol)+m.ran1))); m.y0=((m.y0*m.dec)+((1-m.dec)*((Math.sin((m.trel1+(m.ran2*6)))*m.vol)+m.ran2))); m.z0=((m.z0*m.dec)+((1-m.dec)*((Math.sin((m.trel1+(m.ran1*6)))*m.vol)+m.ran3))); m.gmegabuf[m.n]=m.x0; m.gmegabuf[(m.n+1)]=m.y0; m.gmegabuf[(m.n+2)]=m.z0; m.gmegabuf[(m.n+3)]=(div(div(m.ran1_,m.rsum),3)+0.5); m.gmegabuf[(m.n+4)]=(div(div(m.ran2_,m.rsum),3)+0.5); m.gmegabuf[(m.n+5)]=(div(div(m.ran3_,m.rsum),3)+0.5); m.gmegabuf[(m.n+6)]=((m.gmegabuf[(10000+m.m)]*0)+1); m.n+=m.recsize; m.m+=1;} m.n=0; for(var mdparser_idx3=0;mdparser_idx3<(m.recsize*m.points);mdparser_idx3++){m.gmegabuf[m.n]=m.gmegabuf[(m.n+(m.new*m.recsize))]; m.n+=1;} m.xang=div(m.ran4_,m.fps); m.yang=div(m.ran5_,m.fps); m.zang=div(m.ran6_,m.fps); m.ddx=Math.min(Math.max((m.ddx+div(m.yang,m.fps)), -1), 1); m.ddy=Math.min(Math.max((m.ddy+div(m.xang,m.fps)), -1), 1); m.q1=(m.ddx*2); m.q2=(m.ddy*2); m.n=0; for(var mdparser_idx4=0;mdparser_idx4<m.points;mdparser_idx4++){m.ox=m.gmegabuf[m.n]; m.oy=m.gmegabuf[(m.n+1)]; m.oz=m.gmegabuf[(m.n+2)]; m.mx=((m.ox*Math.cos(m.zang))-(m.oy*Math.sin(m.zang))); m.my=((m.ox*Math.sin(m.zang))+(m.oy*Math.cos(m.zang))); m.ox=m.mx; m.oy=m.my; m.mx=((m.ox*Math.cos(m.yang))+(m.oz*Math.sin(m.yang))); m.mz=((-m.ox*Math.sin(m.yang))+(m.oz*Math.cos(m.yang))); m.ox=m.mx; m.oz=m.mz; m.my=((m.oy*Math.cos(m.xang))-(m.oz*Math.sin(m.xang))); m.mz=((m.oy*Math.sin(m.xang))+(m.oz*Math.cos(m.xang))); m.oy=m.my; m.oz=m.mz; m.gmegabuf[m.n]=m.ox; m.gmegabuf[(m.n+1)]=m.oy; m.gmegabuf[(m.n+2)]=m.oz; m.n+=m.recsize;} m.k1=div(div(m.ran7_,m.fps),2); m.k2=div(div(m.ran8_,m.fps),2); m.k3=div(Math.abs(m.ran9_),m.fps); m.dec=(0.4+(0.6*m.ran5_)); m.dec2=(1-m.dec); m.r1=(0.5+(0.3*m.ran4_)); m.n=0; for(var mdparser_idx5=0;mdparser_idx5<(m.points-1);mdparser_idx5++){m.m=(m.n*m.recsize); m.left=(mod(((m.n-1)+m.points),m.points)*m.recsize); m.right=(mod(((m.n+1)+m.points),m.points)*m.recsize); m.gmegabuf[m.m]=((m.dec*m.gmegabuf[m.m])+(m.dec2*(((m.gmegabuf[m.left]*m.r1)+(m.gmegabuf[m.right]*(1-m.r1)))+m.k1))); m.gmegabuf[(m.m+1)]=((m.dec*m.gmegabuf[(m.m+1)])+(m.dec2*(((m.gmegabuf[(m.left+1)]*m.r1)+(m.gmegabuf[(m.right+1)]*(1-m.r1)))+m.k2))); m.n+=1;} m.m=mod(m.frame,m.points); m.m=Math.max(0, Math.floor((1024+((m.t0-m.time)*200)))); m.n=(m.m*m.recsize); m.q5=(div(m.gmegabuf[m.n],(m.gmegabuf[(m.n+2)]+m.zofs))*m.fov); m.q6=(div(-m.gmegabuf[(m.n+1)],(m.gmegabuf[(m.n+2)]+m.zofs))*m.fov); m.q10=sqrt(m.gmegabuf[(m.n+3)]); m.q11=sqrt(m.gmegabuf[(m.n+4)]); m.q12=sqrt(m.gmegabuf[(m.n+5)]); m.monitor=m.m; m.q32=m.aspecty;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=0; m.zoom=1; m.warp=0; m.dy=0.00; m.dx=-0.00;","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = vec3(0.0, 0.0, 0.0);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"float xlat_mutablesmask;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\nshader_body\n{\n  float flash_1;\n  float dist_2;\n  float stars_3;\n  vec3 ret_4;\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 * time);\n  float tmpvar_6;\n  tmpvar_6 = (0.2 * rad);\n  dist_2 = ((1.0 - fract(\n    (0.3333333 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_7;\n  tmpvar_7.x = q1;\n  tmpvar_7.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_8;\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = max (0.0, clamp ((\n    (1.0 - dist_2)\n   * \n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\n  ), 0.0, 1.0));\n  dist_2 = ((1.0 - fract(\n    (0.6666667 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_9;\n  tmpvar_9.x = q1;\n  tmpvar_9.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_10;\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = (stars_3 + max (stars_3, clamp (\n    ((1.0 - dist_2) * ((0.1 / sqrt(\n      dot (tmpvar_10, tmpvar_10)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  dist_2 = ((1.0 - fract(\n    (1.0 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_11;\n  tmpvar_11.x = q1;\n  tmpvar_11.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_12;\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = (stars_3 + max (stars_3, clamp (\n    ((1.0 - dist_2) * ((0.1 / sqrt(\n      dot (tmpvar_12, tmpvar_12)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = q5;\n  tmpvar_13.y = q6;\n  xlat_mutableuv2 = (xlat_mutableuv1 - tmpvar_13);\n  float tmpvar_14;\n  tmpvar_14 = ((0.01 / sqrt(\n    dot (xlat_mutableuv2, xlat_mutableuv2)\n  )) * min (3.0, (\n    ((mid - 0.5) * float((mid > 0.5)))\n   * 2.0)));\n  flash_1 = tmpvar_14;\n  float angle_15;\n  float tmpvar_16;\n  tmpvar_16 = abs(xlat_mutableuv2.x);\n  if ((xlat_mutableuv2.y >= 0.0)) {\n    angle_15 = (1.0 - ((xlat_mutableuv2.y - tmpvar_16) / (xlat_mutableuv2.y + tmpvar_16)));\n  } else {\n    angle_15 = (3.0 - ((xlat_mutableuv2.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuv2.y)));\n  };\n  angle_15 = (angle_15 * 0.25);\n  float tmpvar_17;\n  if ((xlat_mutableuv2.x < 0.0)) {\n    tmpvar_17 = -(angle_15);\n  } else {\n    tmpvar_17 = angle_15;\n  };\n  flash_1 = (tmpvar_14 * (tmpvar_14 / (\n    abs((fract((\n      (3.0 * tmpvar_17)\n     + \n      (time * 2.0)\n    )) - 0.5))\n   + 0.18)));\n  vec3 tmpvar_18;\n  tmpvar_18 = max ((texture (sampler_main, uv).xyz * 2.0), ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 2.0));\n  vec2 tmpvar_19;\n  tmpvar_19 = sin(xlat_mutableuv3);\n  ret_4 = (clamp ((0.025 / \n    sqrt(dot (tmpvar_19, tmpvar_19))\n  ), 0.0, 1.0) * vec3(0.4, 0.1, 1.0));\n  ret_4 = (ret_4 + clamp ((stars_3 * stars_3), 0.0, 1.0));\n  ret_4 = (ret_4 * clamp ((1.0 - \n    (2.0 * dot (tmpvar_18, vec3(0.32, 0.49, 0.29)))\n  ), 0.0, 1.0));\n  ret_4 = (ret_4 + tmpvar_18);\n  vec3 tmpvar_20;\n  tmpvar_20.x = q10;\n  tmpvar_20.y = q11;\n  tmpvar_20.z = q12;\n  ret_4 = (ret_4 + ((2.0 * \n    clamp (flash_1, 0.0, 1.0)\n  ) * tmpvar_20));\n  vec4 tmpvar_21;\n  tmpvar_21.w = 1.0;\n  tmpvar_21.xyz = ret_4;\n  ret = tmpvar_21.xyz;\n}\n\n"}