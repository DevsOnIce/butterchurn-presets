{"baseVals":{"rating":5,"gammaadj":1,"decay":0.955,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.619,"wave_scale":0.628,"wave_smoothing":0.9,"wave_mystery":1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":1,"zoom":1.00796,"rot":0.02,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.00016,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.5,"wave_y":1,"ob_size":0.01,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":0,"ib_size":0.01,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":5,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0.05,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"g":1,"b":0,"a":1},"init_eqs_str":"m.d = 0;\nm.t1 = 0;\nm.t8 = 0;\nm.t3 = 0;\nm.t2 = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['t3','t2','t1','d'];","frame_eqs_str":"m.t8=1; m.r=(m.r+(0.620*Math.sin((0.777*m.time)))); m.b=(m.b+(0.225*Math.sin((0.443*m.time)))); m.g=(m.g+(0.111*Math.sin((0.883*m.time))));","point_eqs_str":"m.t3=((m.t3*0.6)+(m.value1*1)); m.t2=((m.t2*0.7)+(m.t3*0.2)); m.t1=((m.t1*0.8)+(m.t2*0.1)); m.d=((m.d*0.9)+(m.t1*0.2)); m.y=(0.5+((m.d*m.sample)*(1-m.sample))); m.x=(-0.05+(m.sample*1.1)); m.t8=0;"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.du = 0;\nm.q1 = 0;\nm.mult = 0;\nm.ang2 = 0;\nm.dv = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.dist = 0;\nm.q3 = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.350*((0.60*Math.sin((0.980*m.time)))+(0.40*Math.sin((1.047*m.time)))))); m.wave_g=(m.wave_g+(0.350*((0.60*Math.sin((0.835*m.time)))+(0.40*Math.sin((1.081*m.time)))))); m.wave_b=(m.wave_b+(0.350*((0.60*Math.sin((0.814*m.time)))+(0.40*Math.sin((1.011*m.time)))))); m.q1=(((m.cx*2)-1)+(0.32*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.q2=(((m.cy*2)-1)+(0.52*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.q3=(((m.cx*2)-1)+(0.32*((0.60*Math.sin((0.174*-m.time)))+(0.40*Math.sin((0.364*m.time)))))); m.q4=(((m.cy*2)-1)+(0.52*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.271*-m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,5), 0)));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.du=(((m.x*2)-1)-m.q1); m.dv=(((m.y*2)-1)-m.q2); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=Math.atan2(m.du, m.dv); m.mult=div(0.012,(m.dist+0.4)); m.dx=(m.mult*Math.sin((m.ang2-1.5))); m.dy=(m.mult*Math.cos((m.ang2-1.5))); m.du=(((m.x*2)-1)-m.q3); m.dv=(((m.y*2)-1)-m.q4); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=Math.atan2(m.du, m.dv); m.mult=div(0.012,(m.dist+0.4)); m.dx=(m.dx+(m.mult*Math.sin((m.ang2+1.5)))); m.dy=(m.dy+(m.mult*Math.cos((m.ang2+1.5))));","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_2;\n  tmpvar_2 = (normalize((uv - uv_orig)) * texsize.zw);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  tmpvar_3.xyz = ret_1;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 0.0;\n  tmpvar_4.xyz = max (tmpvar_3, texture (sampler_main, (uv + (tmpvar_2 * 2.3)))).xyz;\n  ret_1 = (max (tmpvar_4, texture (sampler_main, (uv - \n    (tmpvar_2 * 2.3)\n  ))).xyz * 0.97);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"vec2 xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nvec2 xlat_mutableuv_y;\nshader_body\n{\n  vec3 ret_1;\n  xlat_mutabled = (texsize.zw * 4.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_2;\n  tmpvar_2.x = xlat_mutabledx.y;\n  tmpvar_2.y = xlat_mutabledy.y;\n  xlat_mutableuv_y = (uv + (tmpvar_2 * 0.4));\n  xlat_mutabled = (texsize.zw * 18.0);\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (xlat_mutableuv_y + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (xlat_mutableuv_y - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  ret_1 = ((tmpvar_3.x * (\n    (-(xlat_mutabledx) + xlat_mutabledy)\n   + 1.0).x) * pow (hue_shader, vec3(4.0, 4.0, 4.0)));\n  vec3 tmpvar_4;\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_blur1, uv);\n  tmpvar_4 = mix (mix (ret_1, pow (hue_shader.yzx, vec3(4.0, 4.0, 4.0)), vec3((\n    ((tmpvar_5.xyz * scale1) + bias1)\n  .y * 0.5))), (hue_shader.zxy * 1.2), vec3((tmpvar_3.z * (1.0 - \n    (((tmpvar_5.xyz * scale1) + bias1).y * 2.0)\n  ))));\n  ret_1 = tmpvar_4;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = tmpvar_4;\n  ret = tmpvar_6.xyz;\n}\n\n"}