{"baseVals":{"rating":3,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.103,"wave_smoothing":0.54,"wave_mystery":0.38,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":0.4,"ob_a":0.2,"ib_size":0,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":18,"textured":1,"rad":0.15416,"tex_ang":3.76991,"tex_zoom":5.27784,"g":1,"b":1,"a":0.7,"r2":1,"b2":1,"border_b":0,"border_a":0},"init_eqs_str":"m.q1 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.tex_ang=(3+(2*m.q1));"},{"baseVals":{"enabled":1,"sides":32,"rad":0.06892,"tex_zoom":1.8315,"g":1,"b":1,"a":0.9,"g2":0,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.q24 = 0;\nm.q22 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.a=div(m.q24,2); m.a2=0; m.r=div(rand(10),10); m.g=div(rand(10),10); m.b=div(rand(10),10); m.rad=(0.06*m.q22);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"y":0.51,"rad":0.19869,"tex_ang":1.00531,"tex_zoom":0.49981,"g":0.4,"a":0.7,"r2":1,"b2":1,"border_r":0.5,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.05+div(rand(900),1000)); m.y=(0.05+div(rand(900),1000));"}],"waves":[{"baseVals":{"enabled":1,"samples":442,"thick":1,"additive":1,"scaling":0.89152,"smoothing":0.82},"init_eqs_str":"m.q24 = 0;\nm.q27 = 0;\nm.t1=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t2=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t3=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t4=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t5=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t6=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t7=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3)); m.t8=(1+(((rand(101)*0.01)-(rand(101)*0.01))*0.3));\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.x=m.sample; m.y=(0.5+(m.value2*0)); m.a=((0.5*m.q24)*mod((m.q27+1),2)); m.r=0;"},{"baseVals":{"enabled":1,"thick":1,"scaling":0.89152,"smoothing":0.82,"a":0.1},"init_eqs_str":"m.q24 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.y=m.sample; m.x=(0.5+(m.value2*0)); m.a=((0.5*m.q24)*mod(m.q27,2)); m.r=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index4 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.monitor=m.index4; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q11=Math.min(m.q22, 3); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.14159265359),2); m.q27=(8-m.index); m.q28=m.index2; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.zoom=(1.0+(0.02*m.q1)); m.rot=(0.01*m.q2); m.dx=(0.0*m.index); m.wave_a=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.04);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (cos((tmpvar_1.y * q1)) * sin(-(tmpvar_1.y)));\n  tmpvar_2.y = (sin(tmpvar_1.x) * cos((tmpvar_1.y * q2)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, (uv - \n    ((tmpvar_2 * texsize.zw) * (24.0 * q28))\n  )).xyz * 0.99) - 0.006);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 crisp_1;\n  vec2 uv3_2;\n  vec2 uv2_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 / (sqrt(\n    dot (tmpvar_4, tmpvar_4)\n  ) + 0.1));\n  vec2 tmpvar_6;\n  float tmpvar_7;\n  tmpvar_7 = (ang / 3.14);\n  tmpvar_6.x = tmpvar_7;\n  tmpvar_6.y = tmpvar_5;\n  uv2_3.y = (tmpvar_5 + (0.1 * time));\n  uv2_3.x = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_7;\n  tmpvar_8.y = (tmpvar_5 * 1.5);\n  uv3_2.y = (tmpvar_8.y + (0.08 * time));\n  uv3_2.x = (tmpvar_7 + (time / 32.0));\n  crisp_1 = (((2.0 * texture (sampler_main, uv2_3).xyz) + texture (sampler_main, uv3_2).xyz) + ((2.0 * \n    ((texture (sampler_blur2, fract(uv2_3)).xyz * scale2) + bias2)\n  ) + (2.0 * \n    ((texture (sampler_blur2, fract(uv3_2)).xyz * scale2) + bias2)\n  )));\n  crisp_1 = ((3.0 * crisp_1) * rad);\n  float tmpvar_9;\n  tmpvar_9 = clamp ((1.0 - (4.0 * rad)), 0.0, 1.0);\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ((crisp_1 + (\n    ((vec3(0.0, 0.0, 1.0) * uv.y) * pow ((1.0 - rad), 8.0))\n   * tmpvar_9)) + (tmpvar_9 * texture (sampler_main, uv).xyz));\n  ret = tmpvar_10.xyz;\n}\n\n"}