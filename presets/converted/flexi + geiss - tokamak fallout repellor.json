{"baseVals":{"rating":5,"gammaadj":1.28,"decay":0.8,"echo_zoom":1,"echo_alpha":0,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":1,"darken":0,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"wave_mystery":0,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":0,"zoom":1.004,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.19788,"sx":0.99967,"sy":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":1,"ob_g":0,"ob_b":0,"ob_a":0.7,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":0,"sides":39,"additive":1,"thickoutline":0,"textured":0,"num_inst":126,"x":0.5,"y":0.5,"rad":0.06989,"ang":0,"tex_ang":0.62832,"tex_zoom":1,"r":1,"g":0,"b":0,"a":0,"r2":1,"g2":0,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.8);"},{"baseVals":{"enabled":0,"sides":41,"additive":1,"thickoutline":0,"textured":0,"num_inst":239,"x":0.5,"y":0.5,"rad":0.06989,"ang":0,"tex_ang":0.62832,"tex_zoom":1,"r":0,"g":1,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.05)*m.bass)); m.ma=(m.ma-(((above(m.mid, 1)*3.1415)*0.05)*m.mid)); m.mx=(m.mx+(0.0001*Math.cos(m.ma))); m.my=(m.my+(0.0001*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.1);"},{"baseVals":{"enabled":0,"sides":43,"additive":1,"thickoutline":0,"textured":0,"num_inst":32,"x":0.5,"y":0.5,"rad":0.06989,"ang":0,"tex_ang":0.62832,"tex_zoom":1,"r":0,"g":0,"b":1,"a":1,"r2":0,"g2":0,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"m.ma=(m.ma+(((above(m.mid, 1)*3.1415)*0.01)*m.mid)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0004*Math.cos(m.ma))); m.my=(m.my+(0.0004*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.3);"},{"baseVals":{"enabled":1,"sides":14,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.15964,"ang":0,"tex_ang":0.62832,"tex_zoom":1,"r":1,"g":0,"b":0,"a":0,"r2":1,"g2":1,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.01)*m.bass)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0002*Math.cos(m.ma))); m.my=(m.my+(0.0002*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.8);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 1)*3.1415)*0.05)*m.bass)); m.ma=(m.ma-(((above(m.mid, 1)*3.1415)*0.05)*m.mid)); m.mx=(m.mx+(0.0001*Math.cos(m.ma))); m.my=(m.my+(0.0001*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.1);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.mid, 1)*3.1415)*0.01)*m.mid)); m.ma=(m.ma-(((above(m.treb, 1)*3.1415)*0.01)*m.treb)); m.mx=(m.mx+(0.0004*Math.cos(m.ma))); m.my=(m.my+(0.0004*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.3);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.my = 0;\nm.ma = 0;\nm.mx = 0;\n\n\t\t\tm.rkeys = ['ma','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.ma=(m.ma+(((above(m.bass, 0.5)*3.1415)*0.02)*m.bass)); m.ma=(m.ma-(((above(m.treb, 0.5)*3.1415)*0.02)*m.treb)); m.mx=(m.mx+(0.0008*Math.cos(m.ma))); m.my=(m.my+(0.0008*Math.sin(m.ma))); m.mx=((above(m.mx, 0.9)!=0)?((0.9-m.mx)):(m.mx)); m.my=((above(m.my, 0.9)!=0)?((0.9-m.my)):(m.my)); m.mx=((below(m.mx, 0.1)!=0)?((0.9+m.mx)):(m.mx)); m.my=((below(m.my, 0.1)!=0)?((0.9+m.my)):(m.my)); m.x=m.mx; m.y=m.my; m.a=above(((m.bass+m.mid)+m.treb), 0.2);"}],"init_eqs_str":"m.du = 0;\nm.q1 = 0;\nm.mult = 0;\nm.ang2 = 0;\nm.dv = 0;\nm.q2 = 0;\nm.dist = 0;","frame_eqs_str":"m.mv_r=(m.mv_r+(0.2*((0.60*Math.sin((0.980*m.time)))+(0.40*Math.sin((1.047*m.time)))))); m.mv_g=(m.mv_g+(0.2*((0.60*Math.sin((0.835*m.time)))+(0.40*Math.sin((1.081*m.time)))))); m.mv_b=(m.mv_b+(0.2*((0.60*Math.sin((0.814*m.time)))+(0.40*Math.sin((1.011*m.time)))))); m.q1=(((m.cx*2)-1)+(0.6*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.q2=(((m.cy*2)-1)+(0.6*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.ob_r=(1-(0.4*Math.abs(m.q1))); m.ob_g=(0.3*Math.abs(m.q2)); m.ob_b=(0.4*Math.abs(m.q1)); m.wave_x=((1-Math.abs(m.q2))-0.05); m.wave_y=((1-Math.abs(m.q1))-0.06); m.wave_r=(m.wave_r+(0.4*((0.60*Math.sin((0.514*m.time)))+(0.40*Math.sin((1.211*m.time)))))); m.wave_b=(m.wave_b+(0.4*((0.60*Math.sin((0.714*m.time)))+(0.40*Math.sin(m.q2))))); m.wave_g=(m.wave_g+(0.4*((0.60*Math.sin((10*m.q1)))+(0.40*Math.sin((10*m.q2)))))); m.zoom=1; m.warp=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.du=(((m.x*2)-1)-m.q1); m.dv=(((m.y*2)-1)-m.q2); m.dist=sqrt(((m.du*m.du)+(m.dv*m.dv))); m.ang2=(Math.atan2(m.du, m.dv)+(m.time*0.15)); m.mult=(0.04*Math.sin((m.dist*0.05))); m.dx=((m.mult*Math.sin(((m.ang2*2)-1.5)))*m.aspectx); m.dy=((m.mult*Math.cos(((m.ang2*2)-1.5)))*m.aspecty);","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - 0.04));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = mix (mix ((vec3(0.8, 0.6, 0.5) * texture (sampler_fc_main, \n    (uv - (tmpvar_2 * 0.4))\n  ).x), mix (vec3(2.0, 1.2, 0.0), vec3(-1.0, 0.8, -1.0), tmpvar_3.zzz), vec3((\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .y * 0.35))), vec3(0.4, 0.0, 0.0), vec3(((tmpvar_3.z * \n    (1.0 - tmpvar_3.y)\n  ) * 2.0)));\n  ret = tmpvar_4.xyz;\n}\n\n"}