{"baseVals":{"rating":3,"gammaadj":1,"decay":0.997,"echo_zoom":0.997,"echo_alpha":0,"echo_orient":1,"wave_mode":5,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.001,"wave_scale":0.024,"wave_smoothing":0.9,"wave_mystery":0,"modwavealphastart":0.5,"modwavealphaend":1,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":0.8,"wave_g":0.6,"wave_b":0.2,"wave_x":0.5,"wave_y":0.69,"ob_size":0.015,"ob_r":0,"ob_g":0,"ob_b":1,"ob_a":0,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":1,"textured":0,"num_inst":6,"x":0.12,"y":0.5,"rad":0.77371,"ang":0,"tex_ang":4.71239,"tex_zoom":0.48276,"r":0.4,"g":0.11,"b":0,"a":1,"r2":0.02,"g2":0.09,"b2":0.17,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":10,"additive":0,"thickoutline":0,"textured":0,"num_inst":601,"x":0.23,"y":0.19,"rad":0.04268,"ang":0,"tex_ang":1.5708,"tex_zoom":0.47878,"r":1,"g":0.31,"b":0,"a":0.6,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":0.1,"border_a":0},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.w2 = 0;\nm.x1 = 0;\nm.q6 = 0;\nm.zoom = 0;\nm.p = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.my = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.my_y = 0;\nm.mz = 0;\nm.t = 0;\nm.w1 = 0;\nm.x2 = 0;\nm.mx = 0;\nm.l = 0;\nm.y2 = 0;\nm.z1 = 0;\nm.s1 = 0;\nm.s2 = 0;\nm.sample = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.s1=(30*m.sample); m.s2=mod(m.s1,30); m.x=((0.5+m.s2)-m.s1); m.y=0; m.t=(0.21*m.s2); m.mx=((m.x*Math.sin(m.t))+(m.y*Math.cos(m.t))); m.my=((m.y*Math.sin(m.t))-(m.x*Math.cos(m.t))); m.mz=(-2.9+(0.2*m.s2)); m.my_x=(1.3*m.mx); m.my_y=(1.3*m.my); m.my_z=m.mz; m.rad=(m.rad*((1+(3*bnot(mod(m.instance,20))))+(3*bnot(mod((m.instance-1),20))))); m.d=7; m.zoom=1.5; m.w1=(0.5*m.time); m.w2=0; m.w3=1.57; m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.x=(0.5+div(m.my_x,m.q6)); m.y=(0.5+m.my_y); m.rad=div((m.rad*m.zoom),m.d);"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":10,"x":0.43,"y":0.73,"rad":0.55125,"ang":0,"tex_ang":0,"tex_zoom":0.49825,"r":0.5,"g":0.5,"b":1,"a":0.7,"r2":1,"g2":1,"b2":1,"a2":0.3,"border_r":1,"border_g":1,"border_b":0.1,"border_a":0.08},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":10,"additive":0,"thickoutline":0,"textured":0,"num_inst":600,"x":0.5,"y":0.5,"rad":0.02944,"ang":0,"tex_ang":0,"tex_zoom":4.06728,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0.1,"border_r":1,"border_g":0.8,"border_b":0.3,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":100,"spectrum":1,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":0.42,"g":0.42,"b":0.53,"a":0.42},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":100,"spectrum":1,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":0.42,"g":0.42,"b":0.75,"a":0.43},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":1,"samples":512,"sep":0,"spectrum":1,"usedots":0,"thick":1,"additive":1,"scaling":50.42194,"smoothing":0,"r":0.9,"g":1,"b":1,"a":0.06},"init_eqs_str":"m.bz = 0;\nm.bx = 0;\nm.q1 = 0;\nm.by = 0;\nm.ax = 0;\nm.vx = 0;\nm.vy = 0;\nm.vz = 0;\nm.ay = 0;\nm.t = 0;\nm.az = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.t=above(Math.sin(((512*m.sample)+(m.time*4))), 0); m.ax=((2.75+((1.5*m.t)*Math.abs(m.value1)))*Math.cos((6.2831*m.sample))); m.ay=((2.75+((1.5*m.t)*Math.abs(m.value2)))*Math.sin((6.2831*m.sample))); m.az=0; m.bx=m.ax; m.by=((m.ay*Math.cos(m.q1))-(m.az*Math.sin(m.q1))); m.ay=m.by; m.bz=m.az; m.vx=m.bx; m.vy=m.by; m.vz=m.bz; m.x=(div(m.vx,Math.abs((m.vz-10)))+0.5); m.y=(div(m.vy,Math.abs((m.vz-10)))+0.5);"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.py__ = 0;\nm.py_ = 0;\nm.ph2a = 0;\nm.light = 0;\nm.crumple = 0;\nm.px_ = 0;\nm.index2 = 0;\nm.blend = 0;\nm.ph3 = 0;\nm.index = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.dec_b = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.px__ = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.mshape = 0;\nm.blend_ = 0;\nm.dist_ = 0;\nm.is_beat = 0;\nm.q24 = 0;\nm.mwidth = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.ph2 = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.avg = 0;\nm.trig = 0;\nm.q19 = 0;\nm.beat = 0;\nm.q17 = 0;\nm.trel2 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.dist = 0;\nm.trel1 = 0;\nm.open = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q20 = 0;\nm.ph1 = 0;\nm.crumple=0; m.mwidth=0.5; m.mshape=0; m.dist=4; m.dist_=4;","frame_eqs_str":"m.dec_med=pow(0.8, div(30,m.fps)); m.dec_b=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.9, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, (m.avg+m.peak))*above(m.time, (m.t0+0.1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),32); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q24=m.is_beat; m.q26=((m.bass_att+m.mid_att)+m.treb_att); m.q27=(m.index+1); m.q28=m.index2; m.light=((m.light*m.dec_med)+((1-m.dec_med)*m.q22)); m.light=Math.min(m.light, 3); m.q15=div(m.light,3); m.ph1=below(m.q27, 8); m.ph2=(above(m.q27, 8)*below(m.q27, 16)); m.ph2a=above(m.q27, 29); m.ph3=above(m.q27, 30); m.blend=(above(m.q27, 30)+below(m.q27, 2)); m.blend_=((m.dec_b*m.blend_)+((1-m.dec_b)*m.blend)); m.q19=m.blend_; m.q18=(1-m.blend_); m.dist=((m.ph1!=0)?(3):(m.dist)); m.dist=((m.ph2!=0)?(Math.max((m.dist-div(1,m.fps)), 1.8)):(m.dist)); m.dist=((m.ph3!=0)?(Math.max((m.dist-div(8,m.fps)), -1)):(m.dist)); m.dist_=((m.dist_*m.dec_med)+(m.dist*(1-m.dec_med))); m.q11=m.dist_; m.open=((m.ph2a!=0)?((m.open*m.dec_slow)):(4)); m.q16=(((4-m.open)+div(m.q27,16))+div(m.q15,2)); m.q17=above(m.q27, 16); m.trel1=(m.trel1+(div(1,m.fps)*(1+((m.q15*2)*(mod(m.q27,2)-0.5))))); m.trel2=(m.trel2+(div(1,m.fps)*(1+((m.q15*2)*(mod(m.q27,4)-1.5))))); m.px_=div(Math.sin(m.trel1),5); m.py_=(div(Math.cos(m.trel2),5)-0.1); m.px__=((m.dec_slow*m.px__)+(m.px_*(1-m.dec_slow))); m.py__=((m.dec_slow*m.py__)+(m.py_*(1-m.dec_slow))); m.q5=(m.px_+(0.1*Math.sin(m.time))); m.q6=(m.py_+(0.1*Math.cos((2*m.time)))); m.q9=div((m.px__*sqrt(m.dist_)),2); m.q10=div((m.py__*sqrt(m.dist_)),2); m.trig=(equal(m.q27, 31)*m.q24); m.crumple=((m.trig!=0)?((rand(20)-5)):(m.crumple)); m.mwidth=((m.trig!=0)?((0.2+div(rand(20),15))):(m.mwidth)); m.mshape=((m.trig!=0)?(div(rand(20),40)):(m.mshape)); m.q1=m.crumple; m.q2=m.mwidth; m.q3=0.1; m.q4=m.mshape; m.monitor=m.trig;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 4.0))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  vec2 tmpvar_8;\n  tmpvar_8 = mix (uv, uv_orig, vec2(1.0004, 1.0004));\n  ret_2.y = (max (texture (sampler_fc_main, tmpvar_8).y, texture (sampler_fc_main, tmpvar_8).z) - 0.008);\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"float xlat_mutablesmask;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv3;\nvec2 xlat_mutableuv4;\nshader_body\n{\n  float flash_1;\n  float dist_2;\n  float stars_3;\n  vec3 ret_4;\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_5;\n  tmpvar_5 = (0.1 * time);\n  float tmpvar_6;\n  tmpvar_6 = (0.2 * rad);\n  dist_2 = ((1.0 - fract(\n    (0.3333333 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_7;\n  tmpvar_7.x = q1;\n  tmpvar_7.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_7);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_8;\n  tmpvar_8 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = max (0.0, clamp ((\n    (1.0 - dist_2)\n   * \n    ((0.1 / sqrt(dot (tmpvar_8, tmpvar_8))) * xlat_mutablesmask)\n  ), 0.0, 1.0));\n  dist_2 = ((1.0 - fract(\n    (0.6666667 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_9;\n  tmpvar_9.x = q1;\n  tmpvar_9.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_9);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_10;\n  tmpvar_10 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = (stars_3 + max (stars_3, clamp (\n    ((1.0 - dist_2) * ((0.1 / sqrt(\n      dot (tmpvar_10, tmpvar_10)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  dist_2 = ((1.0 - fract(\n    (1.0 + tmpvar_5)\n  )) * (1.0 - tmpvar_6));\n  vec2 tmpvar_11;\n  tmpvar_11.x = q1;\n  tmpvar_11.y = q2;\n  xlat_mutableuv3 = (xlat_mutableuv1 + tmpvar_11);\n  xlat_mutableuv4 = ((32.0 * dist_2) * xlat_mutableuv3);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv4 / 256.0)).y - 0.9);\n  vec2 tmpvar_12;\n  tmpvar_12 = abs((fract(xlat_mutableuv4) - 0.5));\n  stars_3 = (stars_3 + max (stars_3, clamp (\n    ((1.0 - dist_2) * ((0.1 / sqrt(\n      dot (tmpvar_12, tmpvar_12)\n    )) * xlat_mutablesmask))\n  , 0.0, 1.0)));\n  vec2 tmpvar_13;\n  tmpvar_13.x = q5;\n  tmpvar_13.y = q6;\n  xlat_mutableuv2 = (xlat_mutableuv1 - tmpvar_13);\n  float tmpvar_14;\n  tmpvar_14 = ((0.01 / sqrt(\n    dot (xlat_mutableuv2, xlat_mutableuv2)\n  )) * min (3.0, (\n    ((mid - 0.5) * float((mid > 0.5)))\n   * 2.0)));\n  flash_1 = tmpvar_14;\n  float angle_15;\n  float tmpvar_16;\n  tmpvar_16 = abs(xlat_mutableuv2.x);\n  if ((xlat_mutableuv2.y >= 0.0)) {\n    angle_15 = (1.0 - ((xlat_mutableuv2.y - tmpvar_16) / (xlat_mutableuv2.y + tmpvar_16)));\n  } else {\n    angle_15 = (3.0 - ((xlat_mutableuv2.y + tmpvar_16) / (tmpvar_16 - xlat_mutableuv2.y)));\n  };\n  angle_15 = (angle_15 * 0.25);\n  float tmpvar_17;\n  if ((xlat_mutableuv2.x < 0.0)) {\n    tmpvar_17 = -(angle_15);\n  } else {\n    tmpvar_17 = angle_15;\n  };\n  flash_1 = (tmpvar_14 * (tmpvar_14 / (\n    abs((fract((\n      (3.0 * tmpvar_17)\n     + \n      (time * 2.0)\n    )) - 0.5))\n   + 0.18)));\n  vec3 tmpvar_18;\n  tmpvar_18 = max ((texture (sampler_main, uv).xyz * 2.0), ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) * 2.0));\n  vec2 tmpvar_19;\n  tmpvar_19 = sin(xlat_mutableuv3);\n  ret_4 = (clamp ((0.025 / \n    sqrt(dot (tmpvar_19, tmpvar_19))\n  ), 0.0, 1.0) * vec3(0.4, 0.1, 1.0));\n  ret_4 = (ret_4 + clamp ((stars_3 * stars_3), 0.0, 1.0));\n  ret_4 = (ret_4 * clamp ((1.0 - \n    (2.0 * dot (tmpvar_18, vec3(0.32, 0.49, 0.29)))\n  ), 0.0, 1.0));\n  ret_4 = (ret_4 + tmpvar_18);\n  vec3 tmpvar_20;\n  tmpvar_20.x = q10;\n  tmpvar_20.y = q11;\n  tmpvar_20.z = q12;\n  ret_4 = (ret_4 + ((2.0 * \n    clamp (flash_1, 0.0, 1.0)\n  ) * tmpvar_20));\n  vec4 tmpvar_21;\n  tmpvar_21.w = 1.0;\n  tmpvar_21.xyz = ret_4;\n  ret = tmpvar_21.xyz;\n}\n\n"}