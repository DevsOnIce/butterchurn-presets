{"baseVals":{"rating":3,"gammaadj":1,"decay":0.995,"echo_zoom":1.007,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":0.107,"zoomexp":0.33077,"zoom":0.9901,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":16,"num_inst":353,"x":0.503,"rad":0.0376,"tex_zoom":1.11234,"g":1,"b":1,"g2":0,"border_a":0.06},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.w2 = 0;\nm.x1 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q1 = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.my_y = 0;\nm.q10 = 0;\nm.p2 = 0;\nm.w1 = 0;\nm.x2 = 0;\nm.l = 0;\nm.p1 = 0;\nm.y2 = 0;\nm.q2 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.sample = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sample=div(m.instance,m.num_inst); m.rad=(0.05+(0.04*Math.sin(m.sample))); m.q10=(250*m.sample); m.my_x=((((-0.22*Math.cos(m.q10))-(1.28*Math.sin(m.q10)))-(0.44*Math.cos((3*m.q10))))-(0.78*Math.sin((3*m.q10)))); m.my_y=((((-0.1*Math.cos((2*m.q10)))-(0.27*Math.sin((2*m.q10))))+(0.38*Math.cos((4*m.q10))))+(0.46*Math.sin((4*m.q10)))); m.my_z=((0.7*Math.cos((3*m.q10)))-(0.4*Math.sin((3*m.q10)))); m.d=0.2; m.zoom=1; m.w3=m.q1; m.w2=m.q2; m.w1=m.q3; m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.p1=(0.2*Math.sin((m.sample*50))); m.p2=(0.2*Math.sin((m.sample*80))); m.x=(0.5+(m.my_x*m.p1)); m.y=(0.5+(m.my_y*m.p2)); m.r=(0.4*Math.sin((m.sample*80))); m.b=(0.8*Math.sin((m.sample*66))); m.g=(0.6*Math.sin((m.sample*120)));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.vt = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.vb = 0;\nm.v = 0;\nm.mm = 0;\nm.tt = 0;\nm.q4 = 0;\nm.bb = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.vvm = 0;\nm.vvb = 0;\nm.vm = 0;\nm.vvt = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.vvb=((below(m.vvb, 0)!=0)?(0):(m.vvb)); m.vvm=((below(m.vvm, 0)!=0)?(0):(m.vvm)); m.vvt=((below(m.vvt, 0)!=0)?(0):(m.vvt)); m.vvb=((above(m.vvb, 1)!=0)?(1):(m.vvb)); m.vvm=((above(m.vvm, 1)!=0)?(1):(m.vvm)); m.vvt=((above(m.vvt, 1)!=0)?(1):(m.vvt)); m.vb=((m.vb*0.85)+(((1-m.vb)*pow(m.bass, 2))*0.01)); m.vvb=((m.vvb*0.95)+(((1-m.vvb)*m.vb)*0.2)); m.vm=((m.vm*0.85)+(((1-m.vm)*pow(m.mid, 2))*0.01)); m.vvm=((m.vvm*0.95)+(((1-m.vvm)*m.vm)*0.2)); m.vt=((m.vt*0.85)+(((1-m.vt)*pow(m.treb, 2))*0.01)); m.vvt=((m.vvt*0.95)+(((1-m.vvt)*m.vt)*0.2)); m.q1=m.vvb; m.q2=m.vvm; m.q3=m.vvt; m.v=(0.2*div(60,m.fps)); m.d=(m.v*0.35); m.bb=((m.bb+(m.vvb*m.v))-m.d); m.mm=((m.mm+(m.vvm*m.v))-m.d); m.tt=((m.tt+(m.vvt*m.v))-m.d); m.q6=m.bb; m.q5=m.mm; m.q4=m.tt; m.zoom=0.995;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).x;\n  tmpvar_3.y = ((2.0 * (\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1)) - (2.0 * (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_2))).xyz * scale1)\n   + bias1))).x;\n  vec2 tmpvar_4;\n  tmpvar_4 = (-(tmpvar_3) * texsize.zw);\n  ret_1.yz = vec2(0.0, 0.0);\n  ret_1.x = (texture (sampler_fw_main, (uv - tmpvar_4)).x - ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x - (\n    (texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1)\n   + bias1).x));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (vec3((tmpvar_2.x * (1.0 - \n    ((texture (sampler_blur2, uv).xyz * scale2) + bias2)\n  .x))) - (roam_sin.wzy * roam_cos.zxy));\n  ret_1 = (ret_1 + ((\n    (1.0 - tmpvar_2.x)\n   * \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  .x) * vec3(2.0, 1.2, 0.0)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n"}