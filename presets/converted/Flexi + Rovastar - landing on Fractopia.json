{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_orient":3,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":9.861,"warpscale":16.217,"zoomexp":1.50374,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_r":1,"ob_g":0.1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.99596,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.xpos = 0;\nm.yamptarg = 0;\nm.y_pos = 0;\nm.ydir = 0;\nm.meanbass_att = 0;\nm.q1 = 0;\nm.myx = 0;\nm.myy = 0;\nm.lastbeat = 0;\nm.beatrate = 0;\nm.peakbass_att = 0;\nm.xamptarg = 0;\nm.xamp = 0;\nm.xspeed = 0;\nm.ypos = 0;\nm.movement = 0;\nm.att = 0;\nm.volume = 0;\nm.beat = 0;\nm.q2 = 0;\nm.yamp = 0;\nm.q3 = 0;\nm.xdir = 0;\nm.q8 = 0;\nm.yspeed = 0;","frame_eqs_str":"m.warp=0; m.volume=(0.3*((m.bass+m.mid)+m.att)); m.xamptarg=((equal(mod(m.frame,15), 0)!=0)?(Math.min(((0.25*m.volume)*m.bass_att), 0.5)):(m.xamptarg)); m.xamp=(m.xamp+(0.5*(m.xamptarg-m.xamp))); m.xdir=((above(Math.abs(m.xpos), m.xamp)!=0)?(-sign(m.xpos)):(((below(Math.abs(m.xspeed), 0.1)!=0)?(((2*above(m.xpos, 0))-1)):(m.xdir)))); m.xspeed=(((m.xspeed+(m.xdir*m.xamp))-m.xpos)-((m.xspeed*0.055)*below(Math.abs(m.xpos), m.xamp))); m.xpos=(m.xpos+(0.001*m.xspeed)); m.yamptarg=((equal(mod(m.frame,15), 0)!=0)?(Math.min(((0.15*m.volume)*m.treb_att), 0.5)):(m.yamptarg)); m.yamp=(m.yamp+(0.5*(m.yamptarg-m.yamp))); m.ydir=((above(Math.abs(m.ypos), m.yamp)!=0)?(-sign(m.ypos)):(((below(Math.abs(m.yspeed), 0.1)!=0)?(((2*above(m.ypos, 0))-1)):(m.ydir)))); m.yspeed=(((m.yspeed+(m.ydir*m.yamp))-m.ypos)-((m.yspeed*0.055)*below(Math.abs(m.ypos), m.yamp))); m.ypos=(m.ypos+(0.001*m.yspeed)); m.beatrate=(equal(m.beatrate, 0)+((1-equal(m.beatrate, 0))*(below(m.volume, 0.01)+((1-below(m.volume, 0.01))*m.beatrate)))); m.lastbeat=(m.lastbeat+(equal(m.lastbeat, 0)*m.time)); m.meanbass_att=(0.1*((m.meanbass_att*9)+m.bass_att)); m.peakbass_att=Math.max(m.bass_att, m.peakbass_att); m.beat=((above(m.volume, 0.8)*below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att)))*above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))); m.beatrate=Math.max(((m.beat!=0)?(((below((m.time-m.lastbeat), (2*m.beatrate))!=0)?((0.1*(((m.beatrate*9)+m.time)-m.lastbeat))):(m.beatrate))):(m.beatrate)), 0.1); m.peakbass_att=((m.beat*m.bass_att)+(((1-m.beat)*m.peakbass_att)*((above((m.time-m.lastbeat), (2*m.beatrate))*0.95)+((1-above((m.time-m.lastbeat), (2*m.beatrate)))*0.995)))); m.lastbeat=((m.beat*m.time)+((1-m.beat)*m.lastbeat)); m.peakbass_att=Math.max(m.peakbass_att, (1.1*m.meanbass_att)); m.wave_x=(m.xpos+0.5); m.wave_y=(1-(m.ypos+0.5)); m.wave_mystery=(-0.17+(0.03*((0.6*Math.sin((0.637*m.time)))+(0.4*Math.sin((0.949*m.time)))))); m.mv_r=((m.beat!=0)?(1):(m.ib_r)); m.mv_b=((m.beat!=0)?(m.wave_b):(m.ib_b)); m.q3=m.wave_mystery; m.q1=m.wave_x; m.q2=(1-m.wave_y); m.q2=(m.ypos+0.5); m.warp=0; m.monitor=m.wave_y; m.movement=(m.movement+(0.4*div(((m.bass+m.bass_att)+(0.1*pow(((m.bass+(0.6*m.bass_att))+(0.2*m.treb_att)), 3))),m.fps))); m.movement=((above(m.movement, 10000)!=0)?(0):(m.movement)); m.rot=(1*Math.sin(m.movement)); m.cx=m.wave_x; m.cy=(m.y_pos+0.5); m.q8=m.movement;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.myy=(m.x-m.q1); m.myx=((m.y-m.q2)+0.1); m.dx=((3*Math.sin((m.q8*0.675)))*((2*m.myx)*m.myy)); m.dy=((3*Math.sin((m.q8*0.675)))*((m.myx*m.myx)-(m.myy*m.myy)));","warp":"shader_body\n{\n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"float xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nshader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutabled = (texsize.zw * 3.0).x;\n  xlat_mutabledx = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz - texture (sampler_main, (uv - \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz) * 2.0);\n  xlat_mutabledy = ((texture (sampler_main, (uv + \n    (vec2(0.0, 1.0) * xlat_mutabled)\n  )).xyz - texture (sampler_main, (uv - \n    (vec2(0.0, 1.0) * xlat_mutabled)\n  )).xyz) * 2.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((\n    (xlat_mutabledx.x + xlat_mutabledy.x)\n   + 0.5) * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x) * vec3(0.7, 0.5, 0.0));\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.x;\n  tmpvar_4.y = xlat_mutabledy.x;\n  uv_1 = (uv - (tmpvar_4 * 0.2));\n  ret_2 = (((1.0 - \n    (abs((texture (sampler_main, (uv_1 + \n      (vec2(1.0, 0.0) * xlat_mutabled)\n    )).xyz - texture (sampler_main, (uv_1 - \n      (vec2(1.0, 0.0) * xlat_mutabled)\n    )).xyz)).z * 4.0)\n  ) * texture (sampler_main, uv_1).z) * vec3(0.2, 0.5, 0.6));\n  vec3 tmpvar_5;\n  tmpvar_5 = pow (mix (ret_2, vec3(3.0, 3.0, 3.0), (tmpvar_3 * 0.5)), vec3(0.9, 0.9, 0.9));\n  ret_2 = tmpvar_5;\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = tmpvar_5;\n  ret = tmpvar_6.xyz;\n}\n\n"}