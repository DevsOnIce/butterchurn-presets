{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"additivewave":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.312,"wave_scale":1.229,"wave_smoothing":0,"wave_mystery":0.2,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":12.8,"mv_y":9.6,"mv_l":0.05,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"additive":1,"num_inst":69,"rad":0.01,"tex_zoom":4.57482,"r":0,"b":1,"g2":0,"border_r":0.8,"border_g":0,"border_a":0},"init_eqs_str":"m.fov = 0;\nm.oz = 0;\nm.k1 = 0;\nm.k2 = 0;\nm.oy = 0;\nm.ox = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.k1=(div(m.instance,m.num_inst)*6.28); m.oz=(m.k1+(m.time*0.04)); m.oz=((1+Math.floor(m.oz))-m.oz); m.ox=Math.sin((m.k1*72)); m.oy=Math.cos((m.k1*31)); m.fov=0.020; m.oz=(m.oz*m.oz); m.k2=0.0; m.x=(div((m.fov*m.ox),(m.oz+m.k2))+0.5); m.y=(div(((2*m.fov)*m.oy),(m.oz+m.k2))+0.5); m.rad=div(0.04,m.oz); m.a=((above(m.oz, 0)*0.5)*Math.max(0, ((1-pow(m.oz, 2))*sqrt(m.oz))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":193,"usedots":1,"additive":1,"scaling":0.89152,"smoothing":0.82,"a":0.6},"init_eqs_str":"m.t1 = 0;\nm.ang1 = 0;\nm.rad1 = 0;\nm.instance = 0;\nm.t2 = 0;\nm.t1=(div(rand(100),300)+0.5); m.t2=(div(rand(100),100)+1);\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.r=1; m.b=10; m.g=0; m.instance=((m.sample*m.t2)*21); m.ang1=(Math.sin(((m.t2*26)*m.instance))*16); m.rad1=m.sample; m.x=(m.t1+((0.15*m.rad1)*Math.cos(m.ang1))); m.y=(0.5+((0.03*m.rad1)*Math.sin(m.ang1))); m.a=div(0.3,m.rad1);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.dir2 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.dec_f = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.dec_slow = 0;\nm.dir__ = 0;\nm.dir = 0;\nm.dir_ = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q30 = 0;\nm.q10=(rand(1000)+100); m.q11=(0.2+div((0.5*rand(100)),100)); m.q12=(12+rand(20)); m.q13=div((4*rand(100)),100); m.q14=(div(rand(100),400)*m.q10); m.q15=(div(rand(70),100)+0.3); m.monitor=m.q15; m.q17=(div(rand(100),200)+0.5); m.q18=(div(rand(100),200)+0.5); m.q19=(div(rand(100),200)+0.5); m.q20=above((m.q19+m.q18), (2*m.q17)); m.q21=(div(rand(100),100)-0.5); m.q22=div(rand(100),300); m.q23=(div(rand(100),100)-0.5); m.q24=div(rand(100),300); m.q25=div(rand(10),30); m.q26=(div(rand(200),100)+1); m.q31=above(rand(100), 30);","frame_eqs_str":"m.dec_f=pow(0.9, div(30,m.fps)); m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.97, div(30,m.fps)); m.beat=((m.bass+m.mid)+m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((1*m.avg)+m.peak))*above(m.time, (m.t0+1))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.trig=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.trig*(m.p1+1))+((1-m.trig)*m.p1)); m.p2=((m.dec_slow*m.p2)+((1-m.dec_slow)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.dec_slow=0; m.dir2=(2*(div(rand(100),100)-0.5)); m.dir=(((m.trig*above(Math.abs((m.dir-m.dir2)), 0.5))!=0)?(m.dir2):(m.dir)); m.dir_=((m.dir_*m.dec_slow)+((1-m.dec_slow)*m.dir)); m.dir__=((m.dir__*m.dec_slow)+((1-m.dec_slow)*m.dir_)); m.q3=m.dir__; m.q30=(Math.sin(div(m.time,3))*0.2);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.warp=0.0; m.rot=0.0; m.zoom=1; m.dy=0.00;","warp":"vec2 xlat_mutableuv1;\nvec2 xlat_mutableuv5;\nshader_body\n{\n  vec3 ret_1;\n  xlat_mutableuv1 = (uv - 0.5);\n  xlat_mutableuv5 = (xlat_mutableuv1 / 8.0);\n  xlat_mutableuv5.x = (xlat_mutableuv5.x + ((0.003 * \n    sin((time + (xlat_mutableuv1.x * 6.28)))\n  ) * abs(xlat_mutableuv1.y)));\n  vec2 tmpvar_2;\n  tmpvar_2.x = (xlat_mutableuv5.x / 4.0);\n  tmpvar_2.y = 0.0;\n  float tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, (tmpvar_2 * 8.0)).x - 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (xlat_mutableuv5.x * 8.0);\n  tmpvar_4.y = ((xlat_mutableuv5.y * 128.0) + (tmpvar_3 / 2.0));\n  float tmpvar_5;\n  tmpvar_5 = (texture (sampler_noise_lq, tmpvar_4).x - 0.5);\n  vec2 tmpvar_6;\n  tmpvar_6.x = (xlat_mutableuv5.x * 8.0);\n  tmpvar_6.y = ((xlat_mutableuv5.y * 8.0) + (tmpvar_5 * 0.01));\n  ret_1.y = clamp ((1.0 - (\n    (((abs(\n      (xlat_mutableuv5.y * 32.0)\n    ) / 0.61) * (1.0 + tmpvar_3)) * (1.0 + tmpvar_5))\n   * \n    (1.0 - (texture (sampler_noise_lq, (tmpvar_6 * 10.0)).x / 2.0))\n  )), 0.0, 1.0);\n  ret_1.x = (((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1).x * 0.7) - 0.005);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"float xlat_mutabledist;\nfloat xlat_mutablefmask;\nfloat xlat_mutablefog;\nfloat xlat_mutableforest;\nfloat xlat_mutablehill1;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nfloat xlat_mutablesmask;\nfloat xlat_mutablesun;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv2;\nvec2 xlat_mutableuv_stars;\nvec2 xlat_mutableuv_wat;\nvec3 xlat_mutablewater;\nfloat xlat_mutablez;\nshader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.y = 0.5;\n  tmpvar_2.x = (0.5 + (0.5 * q3));\n  xlat_mutableuv1 = ((uv - tmpvar_2) * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = clamp ((128.0 * xlat_mutableuv1.y), 0.0, 1.0);\n  xlat_mutabledist = (0.5 / xlat_mutableuv1.y);\n  xlat_mutablers0.x = (xlat_mutableuv1.x * xlat_mutabledist);\n  xlat_mutablers0.y = xlat_mutabledist;\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutablers0.x;\n  float tmpvar_5;\n  tmpvar_5 = (time * 1.4);\n  tmpvar_4.y = (xlat_mutabledist + tmpvar_5);\n  xlat_mutablers = (tmpvar_4 * tmpvar_3);\n  xlat_mutablewater = ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, (xlat_mutablers / 3.0))).xyz - 1.1);\n  vec2 tmpvar_6;\n  tmpvar_6.x = xlat_mutableuv1.x;\n  tmpvar_6.y = abs(xlat_mutableuv1.y);\n  xlat_mutableuv_wat = (tmpvar_6 - ((\n    (xlat_mutablewater * 0.1)\n   * tmpvar_3) / xlat_mutabledist).xy);\n  vec2 tmpvar_7;\n  tmpvar_7.x = xlat_mutableuv1.x;\n  tmpvar_7.y = abs(xlat_mutableuv1.y);\n  xlat_mutableuv_stars = (tmpvar_7 - ((xlat_mutablewater * 0.01) * tmpvar_3).xy);\n  vec2 x_8;\n  x_8 = (xlat_mutableuv_wat - _qf.zw);\n  xlat_mutablesun = (0.02 / sqrt(dot (x_8, x_8)));\n  xlat_mutablehill1 = (q31 * clamp ((\n    (16.0 + (16.0 * texture (sampler_noise_mq, vec2(((\n      (xlat_mutableuv_wat.x * q10)\n     / 2048.0) + rand_preset.x)))))\n   - \n    (q10 * abs(xlat_mutableuv_wat.y))\n  ), 0.0, 1.0)).x;\n  xlat_mutableuv2 = (64.0 * xlat_mutableuv_stars);\n  xlat_mutablesmask = (texture (sampler_pw_noise_lq, (xlat_mutableuv2 / 256.0)).z - 0.8);\n  vec2 tmpvar_9;\n  tmpvar_9 = abs((fract(xlat_mutableuv2) - 0.5));\n  float tmpvar_10;\n  tmpvar_10 = (clamp ((\n    (0.2 / sqrt(dot (tmpvar_9, tmpvar_9)))\n   * xlat_mutablesmask), 0.0, 1.0) * (1.0 - (xlat_mutablesmask * 8.0)));\n  vec2 tmpvar_11;\n  tmpvar_11 = (xlat_mutableuv_stars - _qf.xy);\n  float tmpvar_12;\n  tmpvar_12 = (q12 * sqrt(dot (tmpvar_11, tmpvar_11)));\n  vec2 tmpvar_13;\n  tmpvar_13 = ((sin(tmpvar_12) / cos(tmpvar_12)) * normalize(tmpvar_11));\n  float tmpvar_14;\n  tmpvar_14 = clamp ((100.0 - (71.0 * tmpvar_12)), 0.0, 1.0);\n  vec2 tmpvar_15;\n  tmpvar_15 = (_qf.zw - _qf.xy);\n  xlat_mutablez = (q11 / xlat_mutableuv_wat.x);\n  xlat_mutableuv2.x = (((\n    abs(xlat_mutablez)\n   / 2.0) + sign(xlat_mutablez)) + (0.056 * time));\n  float tmpvar_16;\n  tmpvar_16 = (texture (sampler_noise_hq, vec2((xlat_mutableuv2.x / 18.0))) + 0.1).x;\n  xlat_mutableuv2.y = (((xlat_mutableuv_wat.y * xlat_mutablez) / tmpvar_16) - 0.5);\n  xlat_mutablefmask = (float((xlat_mutableuv2.y <= 0.0)) * float((xlat_mutableuv2.y >= -1.0)));\n  xlat_mutableforest = (clamp ((\n    (texture (sampler_main, (xlat_mutableuv2 * xlat_mutablefmask)).xyz / abs(xlat_mutablez))\n   * 2.0), 0.0, 1.0).y * xlat_mutablefmask);\n  xlat_mutableuv2.x = (((\n    abs(xlat_mutablez)\n   / 2.0) + sign(xlat_mutablez)) + (0.049 * time));\n  xlat_mutableuv2.y = (((xlat_mutableuv_wat.y * xlat_mutablez) / tmpvar_16) - 0.5);\n  xlat_mutablefmask = (float((xlat_mutableuv2.y <= 0.0)) * float((xlat_mutableuv2.y >= -1.0)));\n  xlat_mutableforest = (xlat_mutableforest + ((\n    clamp (((texture (sampler_main, (xlat_mutableuv2 * xlat_mutablefmask)).xyz / abs(xlat_mutablez)) * 2.0), 0.0, 1.0)\n  .y * xlat_mutablefmask) * 0.7));\n  float tmpvar_17;\n  tmpvar_17 = clamp ((1.0 - (xlat_mutableforest * 1.5)), 0.0, 1.0);\n  xlat_mutablefmask = tmpvar_17;\n  ret_1 = (((tmpvar_10 * \n    (tmpvar_10 * q26)\n  ) * clamp (\n    (1.0 - (4.0 * xlat_mutablesun))\n  , 0.0, 1.0)) + (xlat_mutablesun * _qe.xyz));\n  ret_1 = (ret_1 * (1.0 - tmpvar_14));\n  ret_1 = (ret_1 + ((\n    ((clamp ((-0.2 + \n      dot (((tmpvar_13 * (1.0 + \n        abs((texture (sampler_noise_hq, (tmpvar_13 / 2.0)) - 0.5))\n      .x)) * tmpvar_14), tmpvar_15)\n    ), 0.0, 1.0) / sqrt(dot (tmpvar_15, tmpvar_15))) / 2.0)\n   * \n    (_qe.xyz + vec3(0.3, 0.4, 0.5))\n  ) / 2.0));\n  ret_1 = (ret_1 * (1.0 - xlat_mutablehill1));\n  vec2 tmpvar_18;\n  tmpvar_18.x = ((xlat_mutableuv_wat.x * 2.0) - 0.5);\n  tmpvar_18.y = ((xlat_mutableuv_wat.y * 4.0) - 0.5);\n  ret_1 = (ret_1 + ((texture (sampler_main, tmpvar_18).x * xlat_mutablehill1) * vec3(1.0, 0.8, 0.5)));\n  ret_1 = (ret_1 + (clamp (\n    (mix ((q13 * exp(\n      (-(q14) * abs(xlat_mutableuv1.y))\n    )), (0.5 - xlat_mutableuv1.y), q15) * vec3(0.3, 0.4, 0.5))\n  , 0.0, 1.0) * vec3(0.3, 0.4, 0.5)));\n  ret_1 = (ret_1 * tmpvar_17);\n  vec2 tmpvar_19;\n  tmpvar_19.x = (0.5 + (xlat_mutableuv1.x * 0.1));\n  tmpvar_19.y = ((xlat_mutableuv1.y * 0.75) + 0.5);\n  xlat_mutableuv2 = tmpvar_19;\n  xlat_mutablefog = (((texture (sampler_blur2, \n    fract(tmpvar_19)\n  ).xyz * scale2) + bias2).z * q25);\n  ret_1 = ((ret_1 * clamp (\n    (1.0 - xlat_mutablefog)\n  , 0.0, 1.0)) + (xlat_mutablefog * (1.0 + _qe.xyz)));\n  vec2 tmpvar_20;\n  tmpvar_20.x = xlat_mutablers0.x;\n  tmpvar_20.y = ((xlat_mutabledist + (tmpvar_5 * 0.8)) + (q30 * sin(\n    (xlat_mutablers0.x * 4.0)\n  )));\n  xlat_mutablers = (tmpvar_20 * tmpvar_3);\n  vec3 tmpvar_21;\n  tmpvar_21 = ((texture (sampler_noise_hq, xlat_mutablers) + texture (sampler_noise_hq, (xlat_mutablers / 4.0))) - 1.0).xyz;\n  xlat_mutablewater = tmpvar_21;\n  ret_1 = (ret_1 + ((\n    (((clamp (tmpvar_21.y, 0.0, 1.0) * tmpvar_3) * clamp ((xlat_mutablesun * 2.0), 0.0, 1.0)) * 4.0)\n   / xlat_mutabledist) * q20));\n  ret_1 = (1.0 - exp((\n    (-(ret_1) * 2.0)\n   + 0.1)));\n  vec4 tmpvar_22;\n  tmpvar_22.w = 1.0;\n  tmpvar_22.xyz = ret_1;\n  ret = tmpvar_22.xyz;\n}\n\n"}