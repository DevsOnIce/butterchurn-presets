{"baseVals":{"rating":2,"gammaadj":1,"decay":1,"echo_zoom":0.952,"echo_alpha":0,"echo_orient":0,"wave_mode":0,"additivewave":0,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":1,"wave_a":100,"wave_scale":28.599,"wave_smoothing":0.5,"wave_mystery":-1,"modwavealphastart":0.4,"modwavealphaend":1,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":0.6,"zoom":0.9995,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0.9,"ob_r":0.01,"ob_g":0,"ob_b":0,"ob_a":0,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":12,"mv_y":9,"mv_dx":0,"mv_dy":0,"mv_l":1.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.40031,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0.5,"g":0.5,"b":0,"a":1,"r2":0.5,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":0.5,"border_a":0},"init_eqs_str":"m.sounds = 0;\n\n\t\t\tm.rkeys = ['r','g'];","frame_eqs_str":"m.sounds=div(((m.bass+m.treb)+m.mid),3); m.rad=((m.rad*m.sounds)*0.6); m.r=(m.r+(Math.sin(m.bass)*m.g)); m.g=(m.g+(Math.sin(m.mid)*m.g)); m.x=(m.x+(0.207*Math.cos(((m.time*m.bass)*0.1)))); m.y=(m.y+(0.207*Math.sin(((m.time*m.bass)*0.1))));"},{"baseVals":{"enabled":1,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.13465,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":1,"g2":1,"b2":0,"a2":0.3,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.sounds = 0;\n\n\t\t\tm.rkeys = ['g2','g'];","frame_eqs_str":"m.g2=(m.g2+(0.09*Math.sin(((m.treb+m.mid)*1.23)))); m.g=(m.g+(0.09*Math.cos(((m.bass+m.mid)*1.37)))); m.sounds=div(((m.bass+m.mid)+m.treb),3); m.rad=div((m.rad*(m.treb+m.mid)),3); m.x=(m.x+(0.300*Math.sin((m.time*m.bass)))); m.y=(m.y+(0.317*Math.cos((m.time*m.bass))));"},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.20047,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":0.5,"g2":0.5,"b2":1,"a2":0,"border_r":1,"border_g":1,"border_b":0.5,"border_a":0},"init_eqs_str":"m.sounds = 0;\nm.att = 0;\n\n\t\t\tm.rkeys = ['r2','g2'];","frame_eqs_str":"m.sounds=div(((m.bass+m.treb)+m.mid),3); m.att=div(((m.bass_att+m.treb_att)+m.mid_att),3); m.att=div(((m.bass_att+m.treb_att)+m.mid_att),3); m.r2=((m.r2+(0.25*Math.sin((m.time*6.28))))-m.bass); m.g2=((m.g2+(0.25*Math.sin((m.time*6.28))))-m.bass); m.rad=m.rad; m.x=((m.x+(0.217*Math.cos((m.time*2.3))))+(m.sounds*0.1)); m.y=(m.y+(0.217*Math.sin(((m.time*3.5)+(m.sounds*0.3)))));"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":256,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":20.35074,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.r=(m.r+(0.5*Math.sin((m.treb*1.13)))); m.g=(m.g+(0.5*Math.sin((m.bass*1.33)))); m.b=(m.b+(0.5*Math.sin((m.mid*1.23))));","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":256,"spectrum":0,"usedots":1,"thick":0,"additive":0,"scaling":100,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"","frame_eqs_str":"m.zoom+=((above(m.bass, 1.1)!=0)?(0.05):(((above(m.mid, 1.1)!=0)?(-0.05):(0)))); m.rot+=(0.01*Math.sin(((m.bass+m.mid)+m.treb)));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"mat2 ofs;\nvec2 xlat_mutableuv2;\nfloat xlat_mutablezv;\nshader_body\n{\n  mat2 tmpvar_1;\n  tmpvar_1[uint(0)].x = texsize.z;\n  tmpvar_1[uint(0)].y = 0.0;\n  tmpvar_1[1u].x = 0.0;\n  tmpvar_1[1u].y = texsize.w;\n  ofs = (tmpvar_1 * 4.0);\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = ((uv.x - 0.5) + q19);\n  tmpvar_3.y = (uv.y - 0.5);\n  vec2 v_4;\n  v_4.x = ofs[0].x;\n  v_4.y = ofs[1].x;\n  vec2 v_5;\n  v_5.x = ofs[0].x;\n  v_5.y = ofs[1].x;\n  vec2 v_6;\n  v_6.x = ofs[0].y;\n  v_6.y = ofs[1].y;\n  vec2 v_7;\n  v_7.x = ofs[0].y;\n  v_7.y = ofs[1].y;\n  vec2 tmpvar_8;\n  tmpvar_8.x = (texture (sampler_main, (uv + v_4)) - texture (sampler_main, (uv - v_5))).z;\n  tmpvar_8.y = (texture (sampler_main, (uv + v_6)) - texture (sampler_main, (uv - v_7))).z;\n  xlat_mutablezv = (time * 0.08);\n  vec2 tmpvar_9;\n  tmpvar_9.x = (0.02 * time);\n  tmpvar_9.y = (-0.05 * time);\n  xlat_mutableuv2 = ((3.0 * tmpvar_3) + tmpvar_9);\n  vec3 tmpvar_10;\n  tmpvar_10.xy = xlat_mutableuv2;\n  tmpvar_10.z = xlat_mutablezv;\n  vec3 tmpvar_11;\n  tmpvar_11.xy = (xlat_mutableuv2 * vec2(2.0, 2.0));\n  tmpvar_11.z = (xlat_mutablezv * 2.0);\n  vec3 tmpvar_12;\n  tmpvar_12.xy = (xlat_mutableuv2 * vec2(4.0, 4.0));\n  tmpvar_12.z = (xlat_mutablezv * 3.0);\n  vec3 tmpvar_13;\n  tmpvar_13.xy = (xlat_mutableuv2 * vec2(8.0, 8.0));\n  tmpvar_13.z = (xlat_mutablezv * 7.0);\n  xlat_mutableuv2 = (tmpvar_3 + ((\n    (((texture (sampler_noisevol_hq, tmpvar_10).z + (texture (sampler_noisevol_hq, tmpvar_11).z / 2.0)) + (texture (sampler_noisevol_hq, tmpvar_12).z / 4.0)) + (texture (sampler_noisevol_hq, tmpvar_13).z / 8.0))\n   - 1.0) * 0.1));\n  ret_2 = (((\n    (((0.2 + (\n      (((1.0 + bass_att) * 0.01) / sqrt(dot (xlat_mutableuv2, xlat_mutableuv2)))\n     * \n      (1.0 + normalize(slow_roam_cos))\n    .xyz)) + ((rand_preset.z - 0.5) * xlat_mutableuv2.y)) * 0.1)\n   / 2.0) + (texture (sampler_main, \n    (uv - (0.02 * tmpvar_8))\n  ).xyz * 0.9)) - 0.01);\n  vec4 tmpvar_14;\n  tmpvar_14 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv.xyy) * (texsize.xyy * texsize_noisevol_hq.zww)) + (vec3(0.0, 0.0, 0.4) * time)));\n  float tmpvar_15;\n  tmpvar_15 = ((ret_2.x + ret_2.y) + ret_2.z);\n  if (((tmpvar_15 > 0.1) && (tmpvar_15 <= 0.21))) {\n    ret_2 = (ret_2 + (tmpvar_14 * 0.5).xyz);\n  };\n  vec4 tmpvar_16;\n  tmpvar_16.w = 1.0;\n  tmpvar_16.xyz = ret_2;\n  ret = tmpvar_16.xyz;\n}\n\n","comp":"uniform sampler2D sampler_nebula;\nshader_body\n{\n  vec3 tex_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_nebula, (((uv * texsize.xy) + frame) * texsize_nebula.zw));\n  tex_1 = (tmpvar_3.xyz * tmpvar_3.xyz);\n  tex_1 = (tex_1 * (1.0 - clamp (\n    (dot (((texture (sampler_blur2, \n      (uv - 0.01)\n    ).xyz * scale2) + bias2), vec3(0.32, 0.49, 0.29)) * 5.0)\n  , 0.0, 1.0)));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = (mix (tmpvar_2.xyz, tex_1, vec3((1.0 - \n    clamp (((dot (tmpvar_2.xyz, vec3(0.32, 0.49, 0.29)) * 10.0) - 1.0), 0.0, 1.0)\n  ))) * 1.7);\n  ret = tmpvar_4.xyz;\n}\n\n"}