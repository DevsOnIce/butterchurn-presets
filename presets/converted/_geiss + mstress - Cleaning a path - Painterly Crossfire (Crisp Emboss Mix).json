{"baseVals":{"rating":0,"gammaadj":1,"decay":0.989,"echo_zoom":1.168,"echo_alpha":0,"echo_orient":0,"wave_mode":0,"additivewave":1,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.003,"wave_scale":0.573,"wave_smoothing":0,"wave_mystery":0,"modwavealphastart":0.24,"modwavealphaend":1.3,"warpanimspeed":1,"warpscale":1.331,"zoomexp":1,"fshader":0,"zoom":1.00051,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.00002,"sx":1,"sy":1,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"wave_x":0.5,"wave_y":0.5,"ob_size":0.001,"ob_r":0.34,"ob_g":0.34,"ob_b":0.34,"ob_a":0.09,"ib_size":0.001,"ib_r":0.34,"ib_g":0.34,"ib_b":0.34,"ib_a":0.35,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":73,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.83263,"ang":6.03186,"tex_ang":5.78053,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.flag1 = 0;\nm.flag = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['flag1','flag'];","frame_eqs_str":"m.flag1=Math.floor(Math.abs((m.flag1-m.q1))); m.flag=Math.floor(Math.abs((m.flag-(m.q1*m.flag1)))); m.ang=((m.ang+((m.flag!=0)?(0):(-0.4)))+((Math.abs(Math.sin(m.bass))*0.4)*((m.flag!=0)?(1):(-1)))); m.x=(m.x+(Math.sin((m.time*0.7))*0.06)); m.y=(m.y+(Math.sin((m.time*0.5))*0.06));"},{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.81,"y":0.22,"rad":0.50627,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":0.89,"r2":0,"g2":1,"b2":1,"a2":0.31,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.flag = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['flag'];","frame_eqs_str":"m.flag=Math.abs((m.flag-m.q1)); m.y=((m.flag!=0)?(0.8):(0.2));"},{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.181,"y":0.8,"rad":0.59958,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.flag = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['flag'];","frame_eqs_str":"m.flag=Math.abs((m.flag-m.q1)); m.y=((m.flag!=0)?(0.2):(0.8));"},{"baseVals":{"enabled":1,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.56,"y":0.15,"rad":0.23067,"ang":5.40354,"tex_ang":0,"tex_zoom":0.01,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":0.4,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.trebdiff = 0;\nm.meanbass = 0;\nm.meantreb = 0;\nm.meanmid = 0;\nm.middiff = 0;\nm.bassdiff = 0;\n\n\t\t\tm.rkeys = ['meanbass','meantreb','meanmid'];","frame_eqs_str":"m.meanbass=(0.01*((m.meanbass*99)+m.bass)); m.meantreb=(0.01*((m.meantreb*99)+m.treb)); m.meanmid=(0.01*((m.meanmid*99)+m.mid)); m.bassdiff=((m.bass-m.meanbass)*15); m.trebdiff=((m.treb-m.meantreb)*15); m.middiff=((m.mid-m.meanmid)*15); m.bassdiff=(above(m.bassdiff, 0)*m.bassdiff); m.trebdiff=(above(m.trebdiff, 0)*m.trebdiff); m.middiff=(above(m.middiff, 0)*m.middiff); m.g=Math.min(1, Math.max(0, (0.2*m.trebdiff))); m.r=Math.min(1, Math.max(0, (0.2*m.middiff))); m.b=Math.min(1, Math.max(0, (0.2*m.bassdiff))); m.g2=Math.min(1, Math.max(0, (0.2*m.trebdiff))); m.r2=Math.min(1, Math.max(0, (0.2*m.middiff))); m.b2=Math.min(1, Math.max(0, (0.2*m.bassdiff))); m.x=(m.x+(Math.sin((m.time*0.7))*0.06)); m.y=(m.y+(Math.sin((m.time*0.5))*0.06)); m.ang=Math.sin(m.time); m.rad=((m.rad-0.4)+(0.05*m.bass));"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":16,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":2.27969,"smoothing":0.7,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.t7 = 0;\nm.t8 = 0;\nm.t8=m.time;\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t7=m.t8; m.t8=m.time;","point_eqs_str":"m.x=(0.5+Math.sin(((m.sample*3)+(m.time*0.1)))); m.y=((0.5+Math.sin((m.sample*94.23)))+(0.02*Math.sin((m.time*4.5)))); m.b=Math.abs(Math.sin(((m.sample*100)+m.time))); m.r=Math.abs(Math.sin(((m.sample*512)+m.time))); m.g=Math.abs(Math.sin(((m.sample*10)+m.time)));"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.temp = 0;\nm.sq = 0;\nm.trebdiff = 0;\nm.meanbass_att = 0;\nm.q1 = 0;\nm.meanbass = 0;\nm.lastbeat = 0;\nm.beatrate = 0;\nm.peakbass_att = 0;\nm.runmeanbass = 0;\nm.sqq = 0;\nm.y = 0;\nm.meantreb = 0;\nm.volume = 0;\nm.beat = 0;\nm.oldy = 0;\nm.meanmid = 0;\nm.middiff = 0;\nm.bassdiff = 0;\nm.oldy=0.4;","frame_eqs_str":"m.ib_g=(Math.abs(Math.sin((0.1*m.time)))*0.2); m.ib_b=(Math.abs(Math.sin((0.3*m.time)))*0.2); m.ib_r=(Math.abs(Math.sin((0.7*m.time)))*0.2); m.ob_b=Math.abs(Math.sin(((m.time*100)+m.time))); m.ob_r=Math.abs(Math.sin(((m.time*512)+m.time))); m.ob_g=Math.abs(Math.sin(((m.time*10)+m.time))); m.ib_b=Math.abs(Math.sin(((m.time*10)+m.time))); m.ib_r=Math.abs(Math.sin(((m.time*512)+m.time))); m.ib_g=Math.abs(Math.sin(((m.time*100)+m.time))); m.meanbass=(0.01*((m.meanbass*99)+m.bass)); m.meantreb=(0.01*((m.meantreb*99)+m.treb)); m.meanmid=(0.01*((m.meanmid*99)+m.mid)); m.bassdiff=((m.bass-m.meanbass)*15); m.trebdiff=((m.treb-m.meantreb)*15); m.middiff=((m.mid-m.meanmid)*15); m.bassdiff=(above(m.bassdiff, 0)*m.bassdiff); m.trebdiff=(above(m.trebdiff, 0)*m.trebdiff); m.middiff=(above(m.middiff, 0)*m.middiff); m.ob_g=Math.min(1, Math.max(0, (0.2*m.trebdiff))); m.ob_r=Math.min(1, Math.max(0, (0.2*m.middiff))); m.ob_b=Math.min(1, Math.max(0, (0.2*m.bassdiff))); m.volume=((0.3*m.bass)+m.mid); m.beatrate=(equal(m.beatrate, 0)+((1-equal(m.beatrate, 0))*(below(m.volume, 0.01)+((1-below(m.volume, 0.01))*m.beatrate)))); m.lastbeat=(m.lastbeat+(equal(m.lastbeat, 0)*m.time)); m.meanbass_att=(0.1*((m.meanbass_att*9)+m.bass_att)); m.runmeanbass=div(((m.runmeanbass*2)+m.bass_att),3); m.peakbass_att=Math.max(m.bass_att, m.peakbass_att); m.beat=(((above(m.volume, 0.8)*above(m.bass_att, (m.runmeanbass*1.1)))*below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att)))*above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))); m.beatrate=Math.max(((m.beat!=0)?(((below((m.time-m.lastbeat), (2*m.beatrate))!=0)?((0.1*(((m.beatrate*9)+m.time)-m.lastbeat))):(m.beatrate))):(m.beatrate)), 0.1); m.peakbass_att=((m.beat*m.bass_att)+(((1-m.beat)*m.peakbass_att)*((above((m.time-m.lastbeat), (2*m.beatrate))*0.95)+((1-above((m.time-m.lastbeat), (2*m.beatrate)))*0.995)))); m.lastbeat=((m.beat*m.time)+((1-m.beat)*m.lastbeat)); m.peakbass_att=Math.max(m.peakbass_att, (1.1*m.meanbass_att)); m.q1=m.beat; m.temp=m.y; m.y=((m.beat!=0)?(m.oldy):(m.y)); m.oldy=((m.beat!=0)?(m.temp):(m.oldy)); m.monitor=m.y;\n\t\tm.rkeys = ['rot','zoom'];","pixel_eqs_str":"m.sq=(((above(m.x, 0.3)*below(m.x, 0.6))*above(m.y, 0.4))*below(m.y, 0.6)); m.cx=Math.sin((((m.x*10)+m.time)+m.bass)); m.cy=Math.sin((((m.y*10)+m.time)+m.treb)); m.rot=(m.rot+0.012); m.zoom=(m.zoom-(0.7*m.sqq));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (uv + texsize.zw)).xy - 0.37)\n   * 0.03))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 N_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1.0, 0.0) * texsize.zw);\n  N_1.x = ((texture (sampler_main, (uv + tmpvar_3)).xyz - texture (sampler_main, (uv - tmpvar_3)).xyz).x * 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = (vec2(0.0, 1.0) * texsize.zw);\n  N_1.y = ((texture (sampler_main, (uv + tmpvar_4)).xyz - texture (sampler_main, (uv - tmpvar_4)).xyz).x * 0.5);\n  N_1.x = (N_1.x + ((\n    ((texture (sampler_blur1, (uv + tmpvar_3)).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - tmpvar_3)).xyz * scale1) + bias1)\n  ).x * 0.5));\n  N_1.y = (N_1.y + ((\n    ((texture (sampler_blur1, (uv + tmpvar_4)).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - tmpvar_4)).xyz * scale1) + bias1)\n  ).x * 0.5));\n  N_1.z = -0.08;\n  vec3 tmpvar_5;\n  tmpvar_5 = normalize(N_1);\n  N_1 = tmpvar_5;\n  vec3 tmpvar_6;\n  tmpvar_6.z = -0.8;\n  tmpvar_6.x = q6;\n  tmpvar_6.y = q7;\n  vec3 tmpvar_7;\n  tmpvar_7.z = 0.0;\n  tmpvar_7.xy = ((uv_orig * 2.0) - 1.0);\n  vec3 tmpvar_8;\n  tmpvar_8 = normalize((tmpvar_6 - tmpvar_7));\n  vec3 tmpvar_9;\n  tmpvar_9 = normalize((tmpvar_7 - vec3(0.0, 0.0, 1.0)));\n  ret_2 = (vec3(clamp (dot (tmpvar_5, tmpvar_8), 0.0, 1.0)) * normalize((\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n  .yzx + 0.05)));\n  ret_2 = (ret_2 + (pow (\n    clamp (dot (normalize((tmpvar_9 + \n      ((2.0 * tmpvar_5) * dot (tmpvar_9, tmpvar_5))\n    )), tmpvar_8), 0.0, 1.0)\n  , 32.0) * 0.5));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_2;\n  ret = tmpvar_10.xyz;\n}\n\n"}