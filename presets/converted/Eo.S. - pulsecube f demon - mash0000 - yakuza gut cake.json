{"baseVals":{"rating":0,"gammaadj":1.93,"decay":0.96,"echo_zoom":0.997,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":13,"textured":1,"rad":0.33334,"tex_zoom":0.90529,"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"textured":1,"rad":1.65435,"tex_zoom":0.60202,"g":1,"b":1,"r2":0.6,"g2":0.7,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"g":0.19,"b":0.11,"a":0.11},"init_eqs_str":"m.cang = 0;\nm.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.yp = 0;\nm.t1 = 0;\nm.q1 = 0;\nm.t8 = 0;\nm.xq = 0;\nm.sang = 0;\nm.zq = 0;\nm.bend = 0;\nm.ang = 0;\nm.t2 = 0;\nm.zp = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t1=m.q2; m.t8=1; m.t2=m.q1;","point_eqs_str":"m.n=(m.sample*6.283); m.t8=-m.t8; m.bend=(1-pow(Math.abs(((m.sample*2)-1)), 2)); m.xp=(m.t8*(1-((m.bend*0.7)*m.t2))); m.yp=((m.sample*2)-1); m.zp=((m.bend*m.t2)*0.4); m.zp=(m.zp+1); m.ang=m.t1; m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=m.xp; m.yq=((m.yp*m.sang)+(m.zp*m.cang)); m.zq=((m.yp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.ang=(m.t1*2.1); m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=((m.xp*m.sang)+(m.zp*m.cang)); m.yq=m.yp; m.zq=((m.xp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.zp=(m.zp+6.1); m.x=(div(m.xp,m.zp)+0.5); m.y=((div(m.yp,m.zp)*1.333)+0.5); m.g=((1-pow(Math.abs(((m.sample*2)-1)), 2))*0.7); m.a=(((m.q3*m.q3)*0.9)+0.1);"},{"baseVals":{"enabled":1,"thick":1,"r":0.54,"g":0.19,"b":0.71,"a":0.11},"init_eqs_str":"m.cang = 0;\nm.n = 0;\nm.yq = 0;\nm.xp = 0;\nm.yp = 0;\nm.t1 = 0;\nm.q1 = 0;\nm.t8 = 0;\nm.xq = 0;\nm.sang = 0;\nm.zq = 0;\nm.bend = 0;\nm.ang = 0;\nm.t2 = 0;\nm.zp = 0;\nm.q2 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = ['t8'];","frame_eqs_str":"m.t1=m.q2; m.t8=1; m.t2=m.q1;","point_eqs_str":"m.n=(m.sample*6.283); m.t8=-m.t8; m.bend=(1-pow(Math.abs(((m.sample*2)-1)), 2)); m.xp=(m.t8*(1-((m.bend*0.7)*m.t2))); m.yp=((m.sample*2)-1); m.zp=((m.bend*m.t2)*0.4); m.zp=(-m.zp-2); m.ang=m.t1; m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=m.xp; m.yq=((m.yp*m.sang)+(m.zp*m.cang)); m.zq=((m.yp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.ang=(m.t1*2.1); m.sang=Math.sin(m.ang); m.cang=Math.cos(m.ang); m.xq=((m.xp*m.sang)+(m.zp*m.cang)); m.yq=m.yp; m.zq=((m.xp*m.cang)-(m.zp*m.sang)); m.xp=m.xq; m.yp=m.yq; m.zp=m.zq; m.zp=(m.zp+6.1); m.x=(div(m.xp,m.zp)+0.5); m.y=((div(m.yp,m.zp)*1.333)+0.5); m.g=((1-pow(Math.abs(((m.sample*2)-1)), 2))*0.7); m.a=(((m.q3*m.q3)*0.9)+0.1);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;\nm.slow = 0;\nm.vol = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.mtime = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.decay=0; m.dcsp=0;","frame_eqs_str":"m.decay=0.96; m.zoom=0.999; m.warp=0; m.sx=-1; m.q1=((Math.sin((m.time*3.3))*0.5)+0.5); m.vol=(((m.bass+m.mid)+m.treb)*0.2); m.vol=(m.vol*m.vol); m.slow=Math.min((m.bass*m.bass), 1); m.mtime=(m.mtime+((m.vol*0.1)*m.slow)); m.q1=Math.min(m.vol, 1.4); m.q2=(m.mtime*1.6); m.q3=Math.min((m.vol*0.4), 1);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_1;\n  uv_1.y = uv.y;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3.x = roam_cos.x;\n  tmpvar_3.y = roam_sin.x;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize_noise_lq.zw * texsize.xy);\n  uv_1.x = (uv.x + ((0.02 * \n    ((texture (sampler_noise_lq, ((\n      (0.1 * tmpvar_4)\n     * uv) + (tmpvar_3 * 0.1))).y * 2.0) - 1.0)\n  ) * aspect.x));\n  vec2 tmpvar_5;\n  tmpvar_5.x = roam_sin.y;\n  tmpvar_5.y = -(roam_cos.y);\n  uv_1.x = (uv_1.x + ((0.04 * \n    ((texture (sampler_noise_lq, ((\n      (0.0125 * tmpvar_4)\n     * uv_1) + (tmpvar_5 * 0.03))).z * 2.0) - 1.0)\n  ) * aspect.x));\n  ret_2 = (texture (sampler_main, uv_1).xyz * vec3(0.99, 0.98, 0.97));\n  ret_2 = (ret_2 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).x - 0.5)\n   / 256.0) * 2.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_2;\n  ret = tmpvar_6.xyz;\n}\n\n","comp":""}