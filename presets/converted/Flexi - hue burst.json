{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"additivewave":1,"modwavealphabyvolume":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":12,"additive":1,"num_inst":2,"x":0.49,"rad":0.09902,"tex_zoom":4.36077,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=div(rand(1000),1000); m.y=div(rand(1000),1000); m.ang=div(rand(150),100);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":36,"additive":1,"rad":0.81623,"r":0,"g":0.04,"g2":0,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=(1-m.q1); m.y=m.q2; m.x=(0.5+((m.x-0.5)*0.25)); m.y=(0.5+((m.y-0.5)*0.25));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.res = 0;\nm.q1 = 0;\nm.x = 0;\nm.v = 0;\nm.diff = 0;\nm.r = 0;\nm.y = 0;\nm.beat = 0;\nm.vol = 0;\nm.q2 = 0;\nm.m = 0;","frame_eqs_str":"m.vol=(((m.bass*8)+(m.mid*5))+(m.treb*3)); m.m=((m.m*0.97)+(m.vol*0.08)); m.monitor=m.vol; m.beat=((above(m.vol, m.res)*above(m.vol, m.m))*above(m.vol, 16)); m.diff=(((1-m.beat)*m.diff)+(m.beat*(m.vol-m.res))); m.res=((m.beat*(m.vol+(m.m*0.1)))+((1-m.beat)*(m.res-div(((0.1+(m.diff*0.02))*60),m.fps)))); m.res=Math.max(0, m.res); m.x=((m.beat!=0)?(((rand(60)*0.01)+0.2)):(m.x)); m.y=((m.beat!=0)?(((rand(60)*0.01)+0.2)):(m.y)); m.q1=m.x; m.q2=m.y; m.wave_x=m.q1; m.wave_y=(1-m.q2);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.cx=m.q1; m.cy=m.q2; m.d=pow(sqrt((sqr((m.x-m.cx))+sqr((m.y-m.cy)))), 0.8); m.r=0.2; m.v=0.2; m.dx=(((m.x-m.cx)*m.v)*(m.d-m.r)); m.dy=(((m.y-m.cy)*m.v)*(m.d-m.r));","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 12.0);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.8)) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  tmpvar_4.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).x;\n  vec2 tmpvar_5;\n  tmpvar_5 = ((mix (uv_orig, uv, vec2(0.2, 0.2)) + (\n    (tmpvar_4 * texsize.zw)\n   * 2.0)) + ((\n    (texture (sampler_noise_lq, tmpvar_3).xy - 0.5)\n   * texsize.zw) * 4.0));\n  ret_1.x = (((texture (sampler_fc_main, tmpvar_5).x - \n    ((texture (sampler_fc_main, tmpvar_5).x - ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3).x) * 0.02)\n  ) - 0.008) + ((texture (sampler_noise_lq, tmpvar_3).x - 0.5) * 0.1));\n  ret_1.y = texture (sampler_main, uv).y;\n  ret_1.y = (ret_1.y + ((\n    (ret_1.y - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).y)\n   * 0.1) - 0.015));\n  ret_1.z = ((texture (sampler_fc_main, (uv_orig + \n    (uv_orig - uv)\n  )).z * 0.96) - 0.004);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 4.0);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_2.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1)).y;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = mix ((texture (sampler_fc_main, (uv - \n    (tmpvar_2 * 0.4)\n  )).x * (hue_shader.zxy * hue_shader.zxy)), mix ((\n    pow (hue_shader, vec3(4.0, 4.0, 4.0))\n   * 1.2), vec3(3.0, 3.0, 3.0), texture (sampler_main, uv).zzz), vec3(((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1).y * 0.7)));\n  ret = tmpvar_3.xyz;\n}\n\n"}