{"baseVals":{"rating":5,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":5,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":5.552,"wave_smoothing":0.504,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_g":0,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":100,"textured":1,"x":0.46,"y":0.38,"rad":0.267799,"tex_zoom":1.051004,"r":0.8,"g":1,"b":0.5,"r2":0.9,"g2":0.9,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q9 = 0;\nm.q10 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.1*m.q1)); m.y=(0.5+(0.1*m.q2)); m.x=(0.5-div(m.q9,5)); m.y=(0.6+div(m.q10,5));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":5,"additive":1,"x":0.9,"rad":0.22613,"g":0.2,"b":0.2,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.05+div(rand(900),1000)); m.y=(0.05+div(rand(900),1000)); m.ang=div(rand(320),100); m.a=0.4;"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.xk = 0;\nm.kiss = 0;\nm.sw = 0;\nm.yk = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.y0 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.index3 = 0;\nm.q9 = 0;\nm.x0 = 0;\nm.ax = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.vx = 0;\nm.dec_slow = 0;\nm.q10 = 0;\nm.vy = 0;\nm.q4 = 0;\nm.k2 = 0;\nm.q26 = 0;\nm.ay = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.m = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.vol=0; m.p1=0; m.vx=0.2; m.vy=-0.1; m.kx=0; m.ky=0;","frame_eqs_str":"m.dec_med=pow(0.96, div(30,m.fps)); m.dec_slow=pow(0.998, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),2); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.vol=(m.bass_att+m.treb_att); m.v2=((m.v2*m.dec_med)+(m.vol*(1-m.dec_med))); m.q26=Math.max(Math.atan((m.vol-m.v2)), 0); m.q27=(m.index+1); m.sw=((m.sw*m.dec_med)+((1-m.dec_med)*mod(m.index2,2))); m.q28=m.sw; m.kiss=((m.kiss*m.dec_med)+(((1-m.dec_med)*bnot(m.index2))*below(m.index, 4))); m.q29=m.kiss; m.k1=(m.is_beat*bnot(m.index)); m.k2=(m.is_beat*bnot(m.index)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),2); m.monitor=m.k1; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q5=Math.cos(div(m.time,4)); m.q6=-Math.sin(div(m.time,4)); m.q7=-m.q6; m.q8=m.q5; m.zoom=1; m.rot=-0; m.dt=div((0.1*30),m.fps); m.m=1; m.x0=0.0; m.y0=0; m.x0=div(m.q1,4); m.y0=div(m.q2,4); m.ax=-(m.xk-m.x0); m.ay=-(m.yk-m.y0); m.monitor=m.index3; m.vx=((m.vx*m.dec_slow)+(m.ax*m.dt)); m.vy=((m.vy*m.dec_slow)+(m.ay*m.dt)); m.xk=(m.xk+(m.vx*m.dt)); m.yk=(m.yk+(m.vy*m.dt)); m.q9=m.xk; m.q10=m.yk;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec2 xlat_mutableball;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nshader_body\n{\n  vec2 uv_1;\n  vec2 uv2_2;\n  xlat_mutableuv1 = ((uv_orig - 0.5) * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = ((18.0 * sqrt(\n    dot (xlat_mutableuv1, xlat_mutableuv1)\n  )) + time);\n  xlat_mutablers = (clamp ((\n    (sin(tmpvar_3) / cos(tmpvar_3))\n   * \n    normalize(xlat_mutableuv1)\n  ), vec2(-5.0, -5.0), vec2(5.0, 5.0)) / 2.0);\n  float tmpvar_4;\n  tmpvar_4 = ((q29 * 16.0) + 1.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q9;\n  tmpvar_5.y = q10;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * sqrt(tmpvar_4));\n  xlat_mutableball = (sin((xlat_mutableuv1 * tmpvar_4)) - tmpvar_6);\n  float tmpvar_7;\n  tmpvar_7 = (sqrt(dot (xlat_mutableball, xlat_mutableball)) / ((0.035 * \n    pow (tmpvar_4, 0.9)\n  ) * (1.0 + \n    sqrt(dot (tmpvar_6, tmpvar_6))\n  )));\n  float tmpvar_8;\n  tmpvar_8 = clamp ((sign(\n    (1.0 - tmpvar_7)\n  ) * sqrt(\n    (1.0 - tmpvar_7)\n  )), 0.0, 1.0);\n  float tmpvar_9;\n  tmpvar_9 = float((tmpvar_8 >= 0.001));\n  xlat_mutablers = ((q28 * xlat_mutablers) + ((1.0 - q28) * xlat_mutablers.yx));\n  uv_1 = (uv_orig + ((\n    ((1.0 - tmpvar_9) * 0.03)\n   * xlat_mutablers.yx) + (\n    ((0.6 * tmpvar_9) * tmpvar_8)\n   * \n    normalize(xlat_mutableball)\n  )));\n  mat2 tmpvar_10;\n  tmpvar_10[uint(0)] = _qb.xy;\n  tmpvar_10[1u] = _qb.zw;\n  vec2 tmpvar_11;\n  tmpvar_11.x = sin((xlat_mutableuv1.y * 16.0));\n  tmpvar_11.y = sin((xlat_mutableuv1.x * 16.0));\n  uv2_2 = (((0.7 * xlat_mutableuv1) + (0.3 * tmpvar_11)) * 0.2);\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = (((\n    ((texture (sampler_main, uv_1).xyz - ((\n      (texture (sampler_blur1, fract(uv_1)).xyz * scale1)\n     + bias1) * 0.03)) + (vec3(1.0, 0.84, 0.6) * ((0.08 * \n      abs(vec3(((0.16 / (\n        sqrt((xlat_mutableuv1 * tmpvar_10).x)\n       + 0.002)) * rad)))\n    ) - (tmpvar_8 * \n      (0.2 + (0.3 * slow_roam_cos.xyz))\n    ))))\n   + vec3(\n    (q26 * clamp ((0.0015 / sqrt(\n      dot (uv2_2, uv2_2)\n    )), 0.0, 1.0))\n  )) * 0.99) - 0.018);\n  ret = tmpvar_12.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (0.8 * (texture (sampler_main, uv).xyz + (\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1)));\n  ret = tmpvar_1.xyz;\n}\n\n"}