{"baseVals":{"rating":0,"gammaadj":1,"decay":0.965,"echo_zoom":1.007,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":1.47,"zoomexp":1.34784,"fshader":1,"zoom":0.99816,"warp":0.01,"sx":1.00183,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"ob_r":0.51,"ib_size":0.26,"mv_x":21.473,"mv_y":15.907,"mv_l":0.474,"mv_g":0.179,"mv_b":0.483,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"additive":1,"a":0.06},"init_eqs_str":"m.px = 0;\nm.xoffset2 = 0;\nm.py = 0;\nm.xoffset1 = 0;\nm.pheight = 0;\nm.pphase = 0;\nm.yspout = 0;\nm.pphase2 = 0;\nm.xspout = 0;\nm.lrorient = 0;\nm.yheight = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.xspout=0.5; m.yspout=-0.01; m.pphase=(((9999*m.sample)*m.sample)*0.0001); m.pphase2=(0.1+(mod(((m.sample*3349)*m.sample),100)*0.01)); m.pheight=(mod((m.sample*9893),100)*0.002); m.yheight=(mod(((m.sample*1231)*m.sample),100)*0.01); m.r=((mod((m.sample*5454),100)*0.01)*Math.abs(Math.sin((m.time*0.25)))); m.g=(mod((m.sample*9954),100)*0.01); m.xoffset1=(Math.cos(((m.time*m.pphase2)+m.pphase))*m.pheight); m.xoffset2=(-1*(Math.cos(((m.time*m.pphase2)+m.pphase))*m.pheight)); m.lrorient=((below(Math.cos(((m.time*m.pphase2)+m.pphase)), Math.cos((((m.time-0.1)*m.pphase2)+m.pphase)))!=0)?(0):(1)); m.px=((equal(m.lrorient, 0)!=0)?(((m.xspout-m.pheight)+m.xoffset1)):(((m.xspout+m.pheight)-m.xoffset2))); m.py=(m.yspout+(Math.abs(Math.sin(((m.time*m.pphase2)+m.pphase)))*m.yheight)); m.x=m.px; m.y=m.py;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.2},"init_eqs_str":"m.px = 0;\nm.py = 0;\nm.pheight = 0;\nm.pphase = 0;\nm.yspout = 0;\nm.xspout = 0;\n\n\t\t\tm.rkeys = ['yspout','xspout'];","frame_eqs_str":"","point_eqs_str":"m.pphase=((m.sample*5671)*Math.cos((m.time*0.0001))); m.pheight=((mod((m.sample*7654),100)*0.005)*Math.sin((m.time*0.2))); m.xspout=((below(Math.abs(Math.sin((m.time*0.2))), 0.005)!=0)?((0.3+(rand(40)*0.01))):(m.xspout)); m.yspout=((below(Math.abs(Math.sin((m.time*0.2))), 0.005)!=0)?((0.3+(rand(40)*0.01))):(m.yspout)); m.px=(m.xspout+(Math.cos((m.time+m.pphase))*m.pheight)); m.py=(m.yspout+(Math.sin((m.time+m.pphase))*m.pheight)); m.x=m.px; m.y=m.py; m.a=Math.abs(((Math.sin((m.time*0.2))*0.3)+(m.treb_att*0.1)));"},{"baseVals":{"enabled":1,"usedots":1,"additive":1,"a":0.2},"init_eqs_str":"m.px = 0;\nm.py = 0;\nm.pheight = 0;\nm.pphase = 0;\nm.yspout = 0;\nm.xspout = 0;\n\n\t\t\tm.rkeys = ['yspout','xspout'];","frame_eqs_str":"","point_eqs_str":"m.pphase=((m.sample*5566)*Math.sin((m.time*0.001))); m.pheight=((mod((m.sample*3443),100)*0.005)*Math.sin((m.time*0.45))); m.xspout=((below(Math.abs(Math.sin((m.time*0.45))), 0.005)!=0)?((0.3+(rand(40)*0.01))):(m.xspout)); m.yspout=((below(Math.abs(Math.sin((m.time*0.45))), 0.005)!=0)?((0.3+(rand(40)*0.01))):(m.yspout)); m.px=(m.xspout+(Math.cos((m.time+m.pphase))*m.pheight)); m.py=(m.yspout+(Math.sin((m.time+m.pphase))*m.pheight)); m.x=m.px; m.y=m.py; m.a=Math.abs(((Math.sin((m.time*0.45))*0.3)+(m.bass_att*0.1)));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1},"init_eqs_str":"m.px = 0;\nm.xoffset2 = 0;\nm.py = 0;\nm.xoffset1 = 0;\nm.pheight = 0;\nm.pphase = 0;\nm.yspout = 0;\nm.pphase2 = 0;\nm.xspout = 0;\nm.lrorient = 0;\nm.yheight = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.xspout=0.5; m.yspout=-0.01; m.pphase=(((1234*m.sample)*m.sample)*0.0001); m.pphase2=(0.1+(mod(((m.sample*6666)*m.sample),100)*0.01)); m.pheight=(mod((m.sample*5555),100)*0.001); m.yheight=(mod(((m.sample*5511)*m.sample),100)*0.01); m.r=((mod((m.sample*2222),100)*0.01)*Math.abs(Math.sin((m.time*0.25)))); m.g=(mod((m.sample*642),100)*0.01); m.xoffset1=(Math.cos(((m.time*m.pphase2)+m.pphase))*m.pheight); m.xoffset2=(-1*(Math.cos(((m.time*m.pphase2)+m.pphase))*m.pheight)); m.lrorient=((below(Math.cos(((m.time*m.pphase2)+m.pphase)), Math.cos((((m.time-0.1)*m.pphase2)+m.pphase)))!=0)?(0):(1)); m.px=((equal(m.lrorient, 0)!=0)?(((m.xspout-m.pheight)+m.xoffset1)):(((m.xspout+m.pheight)-m.xoffset2))); m.py=(m.yspout+(Math.abs(Math.sin(((m.time*m.pphase2)+m.pphase)))*m.yheight)); m.x=m.px; m.y=m.py;"}],"init_eqs_str":"","frame_eqs_str":"m.zoom=1;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"","comp":"shader_body\n{\n  vec3 ret2_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4.x = dot (((\n    (texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_4.y = dot (((\n    (texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv - (0.25 * tmpvar_4));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_blur3, uv);\n  ret_2 = (0.35 * ((tmpvar_6.xyz * scale3) + bias3));\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur2, uv).xyz * scale2)\n   + bias2) - 0.01));\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_blur1, uv);\n  ret_2 = (ret_2 + ((texture (sampler_main, uv).xyz + \n    (((tmpvar_7.xyz * scale1) + bias1) * 0.15)\n  ) - 0.01));\n  ret_2 = (ret_2 + 0.75);\n  float tmpvar_8;\n  tmpvar_8 = dot (ret_2, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (vec3(tmpvar_8), (vec3(tmpvar_8) * dot (\n    ((0.75 * ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)) - ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1))\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader, vec3(tmpvar_8)));\n  ret2_1 = ((-0.375 * (\n    (texture (sampler_blur3, tmpvar_5).xyz * scale3)\n   + bias3)) + ((texture (sampler_blur1, tmpvar_5).xyz * scale1) + bias1));\n  ret2_1 = (ret2_1 - texture (sampler_main, tmpvar_5).xyz);\n  ret2_1 = (ret2_1 - 0.75);\n  float tmpvar_10;\n  tmpvar_10 = dot (ret2_1, vec3(0.32, 0.49, 0.29));\n  vec3 tmpvar_11;\n  tmpvar_11 = mix (vec3(tmpvar_10), (vec3(tmpvar_10) * dot (\n    ((0.75 * ((tmpvar_6.xyz * scale3) + bias3)) - ((tmpvar_7.xyz * scale1) + bias1))\n  , vec3(0.32, 0.49, 0.29))), pow (hue_shader.zxy, tmpvar_9));\n  ret2_1 = tmpvar_11;\n  vec3 tmpvar_12;\n  tmpvar_12 = abs((tmpvar_9 - (2.0 * tmpvar_11)));\n  ret_2 = (tmpvar_12 - (0.135 * sqrt(tmpvar_12)));\n  ret_2 = (ret_2 * ret_2);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_2;\n  ret = tmpvar_13.xyz;\n}\n\n"}