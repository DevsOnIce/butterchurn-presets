{"baseVals":{"rating":1,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0.004,"wave_scale":0.073,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":1.69136,"smoothing":0,"g":0,"b":0},"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.q10 = 0;\nm.yyy = 0;\nm.xxx = 0;\nm.dd = 0;\nm.q4 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.yy = 0;\nm.q7 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = ['xx','yy','sample'];","frame_eqs_str":"","point_eqs_str":"m.sample=(1-m.sample); m.xxx=m.xx; m.yyy=m.yy; m.xx=((((((pow(m.sample, 5)*m.q1)+(((5*pow(m.sample, 4))*(1-m.sample))*m.q1))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.q2))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.q3))+(((5*pow((1-m.sample), 4))*m.sample)*m.q4))+(pow((1-m.sample), 5)*m.q4)); m.yy=((((((pow(m.sample, 5)*m.q5)+(((5*pow(m.sample, 4))*(1-m.sample))*m.q5))+(((10*pow(m.sample, 3))*sqr((1-m.sample)))*m.q6))+(((10*sqr(m.sample))*pow((1-m.sample), 3))*m.q7))+(((5*pow((1-m.sample), 4))*m.sample)*m.q8))+(pow((1-m.sample), 5)*m.q8)); m.d=div(1,sqrt((sqr((m.xx-m.xxx))+sqr((m.yy-m.yyy))))); m.dd=((((m.sample*(1-m.sample))*Math.sin((m.sample*180)))*m.d)*0.1); m.x=(m.xx+((m.yy-m.yyy)*m.dd)); m.y=(m.yy-((m.xx-m.xxx)*m.dd)); m.x=(0.5+((m.x-0.5)*m.q9)); m.y=(0.5+((m.y-0.5)*m.q10));"},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.q12 = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.d1 = 0;\nm.si1 = 0;\nm.vx4 = 0;\nm.x3 = 0;\nm.d2 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.x4 = 0;\nm.x2 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.size = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.si2 = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.yy = 0;\nm.y4 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.strength = 0;\nm.xx1 = 0;\nm.velocity = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.zoom=1; m.warp=0; m.wave_a=0; m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5+((m.xx1-m.xx2)*2)); m.y1=(0.4+(m.yy1*1.5)); m.dt=div(0.03,m.fps); m.vx2=((m.vx2*(1-(2*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*10))); m.vy2=((m.vy2*(1-(2*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*10)-0.5))); m.vx3=((m.vx3*(1-(2*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*10))); m.vy3=((m.vy3*(1-(2*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*10)-0.5))); m.vx4=((m.vx4*(1-(2*m.dt)))+(m.dt*((m.x3-m.x4)*10))); m.vy4=((m.vy4*(1-(2*m.dt)))+(m.dt*(((m.y3-m.y4)*10)-0.5))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*0.5))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*0.5))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*0.5))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*0.5))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*0.5))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*0.5))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*0.5))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*0.5))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*0.5))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*0.5))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*0.5))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*0.5))); m.q1=m.x1; m.q2=m.x2; m.q3=m.x3; m.q4=m.x4; m.q5=m.y1; m.q6=m.y2; m.q7=m.y3; m.q8=m.y4; m.q9=div(1,m.aspectx); m.q10=div(1,m.aspecty); m.q11=m.aspectx; m.q12=m.aspecty; m.q13=(sqrt(((m.vx4*m.vx4)+(m.vy4*m.vy4)))*0.8); m.q14=Math.atan2(m.vx4, m.vy4);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.x=(0.5+((m.x-0.5)*m.q11)); m.y=(0.5+((m.y-0.5)*m.q12)); m.dir=((-m.q14*1)+(Math.asin(1)*1)); m.velocity=m.q13; m.strength=100; m.size=0.07; m.xx=m.q4; m.yy=(1-m.q8); m.x1=(m.xx+(Math.cos((m.dir+1.5708))*m.size)); m.y1=(m.yy-(Math.sin((m.dir+1.5708))*m.size)); m.x2=(m.xx-(Math.cos((m.dir+1.5708))*m.size)); m.y2=(m.yy+(Math.sin((m.dir+1.5708))*m.size)); m.d1=(sqrt((((m.x1-m.x)*(m.x1-m.x))+((m.y1-m.y)*(m.y1-m.y))))-(m.size*2)); m.si1=(1-div(1,(1+pow(2, (-m.d1*100))))); m.d2=(sqrt((((m.x2-m.x)*(m.x2-m.x))+((m.y2-m.y)*(m.y2-m.y))))-(m.size*2)); m.si2=(1-div(1,(1+pow(2, (-m.d2*100))))); m.dx=(((((m.si1*Math.sin((m.y1-m.y)))*m.d1)-((m.si2*Math.sin((m.y2-m.y)))*m.d2))*m.strength)*m.velocity); m.dy=(((((-m.si1*Math.sin((m.x1-m.x)))*m.d1)+((m.si2*Math.sin((m.x2-m.x)))*m.d2))*m.strength)*m.velocity);","warp":"shader_body\n{\n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = (texture (sampler_fc_main, tmpvar_3).x * 0.5);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 4.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1) + bias1)\n  ) - (\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) * 0.5).z;\n  tmpvar_7.y = (((2.0 * \n    ((texture (sampler_blur1, (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1) + bias1)\n  ) - (\n    (texture (sampler_blur1, (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))).xyz * scale1)\n   + bias1)) * 0.5).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((\n    (2.0 * texture (sampler_fc_main, uv_z_1).z)\n   - \n    (2.0 * ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1).z)\n  ) * 0.01));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(0.9996, 0.9996))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 dz_1;\n  vec2 d_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (vec2(1.0, 0.0) * texsize.zw);\n  tmpvar_4.x = (texture (sampler_main, (uv + tmpvar_5)).xyz - texture (sampler_main, (uv - tmpvar_5)).xyz).y;\n  vec2 tmpvar_6;\n  tmpvar_6 = (vec2(0.0, 1.0) * texsize.zw);\n  tmpvar_4.y = (texture (sampler_main, (uv + tmpvar_6)).xyz - texture (sampler_main, (uv - tmpvar_6)).xyz).y;\n  d_2 = (texsize.zw * 2.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * d_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * d_2))\n  ).xyz * scale1) + bias1)).y;\n  dz_1 = ((tmpvar_4 * 3.0) + tmpvar_7);\n  ret_3 = (vec3(((\n    pow ((sqrt(dot (dz_1, dz_1)) * 0.8), 0.7)\n   + \n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).y * 0.4)\n  ) - 0.1)) * vec3(0.4, 0.5, 0.7));\n  vec2 tmpvar_8;\n  tmpvar_8.x = q19;\n  tmpvar_8.y = q20;\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (mix (ret_3, vec3(1.0, 0.4, 0.0), texture (sampler_main, fract(\n    ((0.5 + (uv - 0.5)) + (tmpvar_8 * vec2(-1.0, 1.0)))\n  )).xxx), vec3(1.0, 1.0, 1.0), texture (sampler_main, uv).zzz);\n  ret_3 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n}\n\n"}