{"baseVals":{"rating":3,"gammaadj":1.21,"decay":1,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"darken":1,"invert":1,"wave_a":0.004,"wave_scale":0.01,"wave_smoothing":0,"wave_mystery":-0.44,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":100,"zoomexp":0.92178,"fshader":1,"zoom":0.9901,"warp":0.01,"wave_y":0.04,"ob_size":0.005,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.25,"mv_g":0.5,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.w = 0;\nm.si3 = 0;\nm.q18 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.q21 = 0;\nm.vx3 = 0;\nm.q15 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.d1 = 0;\nm.v = 0;\nm.si1 = 0;\nm.vx4 = 0;\nm.mm = 0;\nm.tt = 0;\nm.grav = 0;\nm.x3 = 0;\nm.d2 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.a = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.bounce = 0;\nm.q16 = 0;\nm.x4 = 0;\nm.x2 = 0;\nm.q19 = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.bb = 0;\nm.q2 = 0;\nm.m1 = 0;\nm.spring = 0;\nm.si2 = 0;\nm.vx2 = 0;\nm.resist = 0;\nm.yy = 0;\nm.y4 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.q20 = 0;\nm.b1 = 0;\nm.q8 = 0;\nm.x1=0.9; m.y1=0.5; m.x2=0.5; m.y2=0.5; m.x3=0.5; m.y3=0.5; m.x4=0.5; m.y4=0.5;","frame_eqs_str":"m.decay=1; m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=((0.5+m.xx1)-m.xx2); m.y1=(0.5+m.yy1); m.spring=28; m.grav=2; m.resist=0.2; m.bounce=0.94; m.dt=0.0001; m.vx2=((m.vx2*(1-(m.resist*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*m.spring))); m.vy2=((m.vy2*(1-(m.resist*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*m.spring)-m.grav))); m.vx3=((m.vx3*(1-(m.resist*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*m.spring))); m.vy3=((m.vy3*(1-(m.resist*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*m.spring)-m.grav))); m.vx4=((m.vx4*(1-(m.resist*m.dt)))+(m.dt*((m.x3-m.x4)*m.spring))); m.vy4=((m.vy4*(1-(m.resist*m.dt)))+(m.dt*(((m.y3-m.y4)*m.spring)-m.grav))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*m.bounce))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*m.bounce))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*m.bounce))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*m.bounce))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*m.bounce))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*m.bounce))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*m.bounce))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*m.bounce))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*m.bounce))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*m.bounce))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*m.bounce))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*m.bounce))); m.q1=m.aspectx; m.q2=m.aspecty; m.q4=m.x4; m.q8=m.y4; m.zoom=1; m.warp=0; m.bb=((m.bb*0.99)+(m.bass*0.02)); m.mm=((m.mm*0.99)+(m.mid*0.02)); m.tt=((m.tt*0.99)+(m.treb*0.02)); m.ob_r=div((m.bb-Math.min(Math.min(m.bb, m.mm), m.tt)),(Math.max(Math.max(m.bb, m.mm), m.tt)-Math.min(Math.min(m.bb, m.mm), m.tt))); m.ob_b=div((m.mm-Math.min(Math.min(m.bb, m.mm), m.tt)),(Math.max(Math.max(m.bb, m.mm), m.tt)-Math.min(Math.min(m.bb, m.mm), m.tt))); m.ob_g=div((m.tt-Math.min(Math.min(m.bb, m.mm), m.tt)),(Math.max(Math.max(m.bb, m.mm), m.tt)-Math.min(Math.min(m.bb, m.mm), m.tt))); m.q6=Math.atan2(m.vx4, m.vy4); m.q5=sqrt(((m.vx4*m.vx4)+(m.vy4*m.vy4))); m.wave_a=0; m.a=((m.a*0.98)-((m.bass-m.treb)*0.01)); m.q15=m.a; m.v=((m.v*0.96)+(m.a*0.12)); m.q16=m.v; m.w=(m.w-(m.v*0.01)); m.q18=m.w; m.q19=(0.5-((m.bass_att-m.treb_att)*0.15)); m.d=(m.d+div((((m.bass_att-0.5)*0.01)*60),m.fps)); m.d2=(m.d2+div((((m.treb_att-0.5)*0.006)*60),m.fps)); m.q20=m.d; m.q21=m.d2; m.monitor=m.d2;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.x=(0.5+((m.x-0.5)*m.q1)); m.y=(0.5+((m.y-0.5)*m.q2)); m.dir=((-m.q6*1)+(Math.asin(1)*1)); m.b1=0.1; m.m1=(m.q5*25); m.t1=0.05; m.xx=m.q4; m.yy=(1-m.q8); m.x1=(m.xx+(Math.cos((m.dir+1.5708))*m.b1)); m.y1=(m.yy-(Math.sin((m.dir+1.5708))*m.b1)); m.x2=(m.xx-(Math.cos((m.dir+1.5708))*m.b1)); m.y2=(m.yy+(Math.sin((m.dir+1.5708))*m.b1)); m.d1=(sqrt((((m.x1-m.x)*(m.x1-m.x))+((m.y1-m.y)*(m.y1-m.y))))-(m.b1*2)); m.si1=(1-div(1,(1+pow(2, (-m.d1*100))))); m.d2=(sqrt((((m.x2-m.x)*(m.x2-m.x))+((m.y2-m.y)*(m.y2-m.y))))-(m.b1*2)); m.si2=(1-div(1,(1+pow(2, (-m.d2*100))))); m.si3=(-pow(m.q5, 3)*00); m.dx=((((((m.si1*Math.sin((m.y1-m.y)))*m.m1)*m.d1)-(((m.si2*Math.sin((m.y2-m.y)))*m.m1)*m.d2))+((m.si3*Math.cos(m.dir))*m.t1))*2); m.dy=((((((-m.si1*Math.sin((m.x1-m.x)))*m.m1)*m.d1)+(((m.si2*Math.sin((m.x2-m.x)))*m.m1)*m.d2))-((m.si3*Math.sin(m.dir))*m.t1))*2);","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_fc_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"vec2 xlat_mutablers;\nshader_body\n{\n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\n  xlat_mutablers.x = (((ang / 3.14) + (rad * \n    (q15 - q16)\n  )) - q18);\n  vec2 x_2;\n  x_2 = (uv_1 - 0.5);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    (sqrt(dot (x_2, x_2)) * 1.4)\n  )) + q21);\n  vec2 tmpvar_3;\n  tmpvar_3 = fract(xlat_mutablers);\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5 = (tmpvar_4 * 4.0);\n  vec2 tmpvar_6;\n  tmpvar_6.x = 0.0;\n  tmpvar_6.y = texsize.w;\n  vec2 tmpvar_7;\n  tmpvar_7 = (tmpvar_6 * 4.0);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot (((\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_5)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_5)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_8.y = dot (((\n    (texture (sampler_blur1, (tmpvar_3 - tmpvar_7)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (tmpvar_3 + tmpvar_7)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  uv_1 = ((0.4 * cos(\n    ((12.56 * tmpvar_3) - (vec2(0.0, 10.0) * (q21 + q20)))\n  )) - (4.0 * tmpvar_8));\n  vec3 tmpvar_9;\n  tmpvar_9 = pow (((\n    (2.0 * (clamp ((0.02 / \n      sqrt(dot (uv_1, uv_1))\n    ), 0.0, 1.0) * hue_shader))\n   * \n    ((texture (sampler_main, tmpvar_3) * 4.0).xyz + 1.0)\n  ) - 0.04), vec3(0.8, 0.8, 0.8));\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = mix (tmpvar_9, tmpvar_9.zxy, vec3(q19)).zxy;\n  ret = tmpvar_10.xyz;\n}\n\n"}