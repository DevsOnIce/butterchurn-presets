{"baseVals":{"rating":0,"gammaadj":1.7,"decay":1,"echo_zoom":0.997,"echo_alpha":0.5,"echo_orient":1,"wave_mode":4,"wave_dots":1,"wave_brighten":0,"wrap":0,"wave_a":0.32,"wave_scale":1.521,"wave_smoothing":0.9,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":2.599,"warpscale":0.01,"zoomexp":0.9999,"zoom":1.00949,"warp":0.01,"sx":0.9901,"sy":1.0017,"ob_size":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dy":0.82,"mv_l":5,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.redsine = 0;\nm.bluesine = 0;\nm.greenif = 0;\nm.q5 = 0;\nm.q4 = 0;\nm.redif = 0;\nm.blueif = 0;\nm.vol = 0;\nm.greensine = 0;\nm.decay=0.1;","frame_eqs_str":"m.sx=0.9; m.vol=(((m.bass+m.mid)+m.treb_att)*0.3333); m.redsine=(0.5+((0.15*m.bass)*Math.sin((m.time*3)))); m.greensine=(0.5+((0.15*m.mid)*Math.sin((m.time*2)))); m.bluesine=(0.5+((0.15*m.treb)*Math.sin(m.time))); m.redif=((above(m.bass, 1.2)!=0)?(m.redsine):(((above(m.redif, 0.95)!=0)?(0):((m.redif*0.85))))); m.greenif=((above(m.mid, 1.2)!=0)?(m.greensine):(((above(m.greenif, 0.95)!=0)?(0):((m.greenif*0.85))))); m.blueif=((above(m.treb, 1.2)!=0)?(m.bluesine):(((above(m.blueif, 0.95)!=0)?(0):((m.blueif*0.85))))); m.q4=(0.95+((0.05*Math.sin((m.time*0.52)))*Math.cos((m.time*0.39)))); m.q5=(0.95+((0.05*Math.sin((m.time*0.44)))*Math.cos((m.time*0.71))));\n\t\tm.rkeys = ['zoom'];","pixel_eqs_str":"m.zoom=(m.zoom+((0.05*m.rad)*m.treb_att));","warp":"shader_body\n{\n  vec3 tmpvar_1;\n  tmpvar_1.z = 0.5;\n  tmpvar_1.x = q4;\n  tmpvar_1.y = q5;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (texture (sampler_fc_main, uv).xyz * tmpvar_1);\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uvp_1;\n  uvp_1.x = uv.x;\n  uvp_1.y = (uv.y * 0.2);\n  vec2 tmpvar_2;\n  tmpvar_2.x = (uv.y + (rad * 0.12));\n  tmpvar_2.y = ((uv.x * rad) * 0.12);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (texture (sampler_noise_hq, ((\n    (texture (sampler_blur1, uvp_1).xyz * scale1)\n   + bias1) * (\n    (texture (sampler_blur2, uvp_1).xyz * scale2)\n   + bias2)).xy).xyz + ((texture (sampler_blur2, tmpvar_2).xyz * scale2) + bias2));\n  ret = tmpvar_3.xyz;\n}\n\n"}