{"baseVals":{"rating":0,"gammaadj":1,"decay":0.95,"wave_mode":5,"brighten":1,"wave_a":0.566,"wave_scale":0.599,"wave_smoothing":0.5,"warpscale":2.853,"fshader":1,"zoom":1.00034,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"ob_size":0.055,"ob_a":1,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":6.4,"mv_y":48,"mv_l":2,"mv_a":0.3},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.thresh = 0;\nm.dy_r = 0;\nm.dx_r = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.502*((0.61*Math.sin((0.933*m.time)))+(0.401*Math.sin((1.045*m.time)))))); m.wave_g=(m.wave_g+(0.504*((0.605*Math.sin((0.909*m.time)))+(0.41*Math.sin((0.956*m.time)))))); m.wave_b=(m.wave_b+(0.501*((0.60*Math.sin((0.910*m.time)))+(0.40*Math.sin((0.992*m.time)))))); m.mv_r=(1-Math.abs(m.wave_r)); m.mv_g=(1-Math.abs(m.wave_g)); m.mv_b=(1-Math.abs(m.wave_b)); m.ib_r=m.wave_g; m.ib_b=m.wave_r; m.ib_g=m.wave_b; m.mv_x=(((160*m.bass)*above(Math.sin(m.time), 0))+(10*below(Math.sin(m.time), 0))); m.mv_y=(((140*m.bass)*below(Math.sin(m.time), 0))+(6*above(Math.sin(m.time), 0)));\n\t\tm.rkeys = ['thresh','dx_r','dy_r','zoom','rot'];","pixel_eqs_str":"m.thresh=((above(m.bass_att, m.thresh)*2)+((1-above(m.bass_att, m.thresh))*(((m.thresh-1.3)*0.96)+1.3))); m.dx_r=(((equal(m.thresh, 2)*0.015)*Math.sin((5*m.time)))+((1-equal(m.thresh, 2))*m.dx_r)); m.dy_r=(((equal(m.thresh, 2)*0.015)*Math.sin((6*m.time)))+((1-equal(m.thresh, 2))*m.dy_r)); m.zoom=(m.zoom+((0.52*(0.5-m.x))*Math.sin((5*m.time)))); m.zoom=(m.zoom+((0.52*(0.5-m.y))*Math.cos((3.14749*m.time)))); m.rot=(m.rot+(m.dx_r*Math.sin(Math.max(((m.bass_att*0.72)*Math.abs((m.treb-Math.cos((4*m.time))))), (m.mid_att*m.rad))))); m.zoom=(m.zoom+0.1); m.rot=(m.rot+(((8*m.dx_r)*(0.5-m.x))*Math.cos((8*m.time)))); m.rot=(m.rot+(((8*m.dy_r)*(0.5-m.y))*Math.sin((8*m.time))));","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, ((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.1))).xyz - 0.5)\n   / 256.0) * 28.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.04, 0.04, 0.04));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n}\n\n","comp":""}