{"baseVals":{"rating":3,"gammaadj":1.78,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"wave_brighten":0,"darken":1,"wave_a":4.1,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":100,"warpscale":0.089,"zoomexp":0.59124,"zoom":1.00951,"warp":0.35949,"sy":1.00183,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1x":0.7,"b1ed":0},"shapes":[{"baseVals":{"enabled":1},"init_eqs_str":"m.zoom = 0;\nm.sx = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.sides=3; m.sx=(m.bass-div((m.zoom*m.time),m.ang)); m.ang=(m.time*3.7); m.x=0.5; m.r=(0.6*m.time); m.b=(0.6*m.time); m.g=(0.5*m.time); m.r2=(0.98*m.time); m.b2=(0.5*m.time); m.g2=(0.7*m.time);"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.y=((Math.sin((m.time*2))*0.4)+0.5); m.x=((Math.sin(m.time)*0.4)+0.5); m.sides=20; m.r=3; m.r2=3; m.b=0; m.b2=0; m.g=0; m.g2=0;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=((Math.sin((m.time*2))*0.4)+0.5); m.y=((Math.sin(m.time)*0.4)+0.5); m.sides=20; m.r=0; m.r2=0; m.b=3; m.b2=3; m.g=3; m.g2=3;"},{"baseVals":{"enabled":1,"rad":0.01},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=((Math.sin((m.bass*0.05))*0.4)+0.5); m.y=((Math.sin(m.bass)*0.4)+0.5); m.sides=20; m.r=0; m.r2=0; m.b=0; m.b2=0; m.g=4; m.g2=4;"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"m.wave_r=(m.bass*0.5); m.wave_b=(m.bass*0.5); m.rot=(m.rot+(((Math.floor(rand(10))-5)*0.02)*m.treb));\n\t\tm.rkeys = ['zoom'];","pixel_eqs_str":"m.zoom=(m.zoom+((above(m.y, 0.5)*Math.sin(m.time))*0.1)); m.zoom=(m.zoom+((below(m.y, 0.5)*Math.cos(m.time))*0.1));","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  uv_1 = (uv + (vec2(0.0, 0.01) * dot (\n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  , vec3(0.32, 0.49, 0.29))));\n  uv6_2 = (0.4 * sin((\n    (uv_1 * 8.0)\n   + \n    (rand_frame * 6.0)\n  .xy)));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (texture (sampler_main, uv_1).xyz - (((texture (sampler_blur2, \n      fract(uv_1)\n    ).xyz * scale2) + bias2) * 0.03))\n   + \n    (0.1 * (vec3((0.1 / sqrt(\n      dot (uv6_2, uv6_2)\n    ))) * ((1.0 + roam_cos) / 2.0).xyz))\n  ) * 0.99) - 0.02);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":""}