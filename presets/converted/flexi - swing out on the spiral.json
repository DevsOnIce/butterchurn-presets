{"baseVals":{"rating":5,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.s = 0;\nm.q12 = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.v = 0;\nm.vx4 = 0;\nm.mm = 0;\nm.tt = 0;\nm.grav = 0;\nm.x3 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.a = 0;\nm.yy1 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.bounce = 0;\nm.x4 = 0;\nm.t = 0;\nm.r = 0;\nm.x2 = 0;\nm.mx = 0;\nm.mn = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.bb = 0;\nm.q2 = 0;\nm.spring = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.resist = 0;\nm.yy = 0;\nm.y4 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.q8 = 0;\nm.q11=div(0.5,Math.asin(1));","frame_eqs_str":"m.ib_r=((Math.sin(((m.time*1.25)*4))*0.3)+0.7); m.ib_g=((Math.sin((m.time*4))*0.3)+0.3); m.ib_b=((Math.sin((div(m.time,3)*4))*0.5)+0.5); m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.yy1=((m.yy1*0.94)+((m.treb+m.bass)*0.0075)); m.x1=(0.5+((m.xx1-m.xx2)*3)); m.y1=(0.4+m.yy1); m.x1=Math.max(0, Math.min(1, m.x1)); m.y1=Math.max(0, Math.min(1, m.y1)); m.spring=25; m.grav=1.1; m.resist=1; m.bounce=0.85; m.dt=(0.0002*div(60,m.fps)); m.vx2=((m.vx2*(1-(m.resist*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*m.spring))); m.vy2=((m.vy2*(1-(m.resist*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*m.spring)-m.grav))); m.vx3=((m.vx3*(1-(m.resist*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*m.spring))); m.vy3=((m.vy3*(1-(m.resist*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*m.spring)-m.grav))); m.vx4=((m.vx4*(1-(m.resist*m.dt)))+(m.dt*((m.x3-m.x4)*m.spring))); m.vy4=((m.vy4*(1-(m.resist*m.dt)))+(m.dt*(((m.y3-m.y4)*m.spring)-m.grav))); m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.x4=(m.x4+m.vx4); m.y4=(m.y4+m.vy4); m.vx2=((above(m.x2, 0)!=0)?(m.vx2):((Math.abs(m.vx2)*m.bounce))); m.vx2=((below(m.x2, 1)!=0)?(m.vx2):((-Math.abs(m.vx2)*m.bounce))); m.vx3=((above(m.x3, 0)!=0)?(m.vx3):((Math.abs(m.vx3)*m.bounce))); m.vx3=((below(m.x3, 1)!=0)?(m.vx3):((-Math.abs(m.vx3)*m.bounce))); m.vx4=((above(m.x4, 0)!=0)?(m.vx4):((Math.abs(m.vx4)*m.bounce))); m.vx4=((below(m.x4, 1)!=0)?(m.vx4):((-Math.abs(m.vx4)*m.bounce))); m.vy2=((above(m.y2, 0)!=0)?(m.vy2):((Math.abs(m.vy2)*m.bounce))); m.vy2=((below(m.y2, 1)!=0)?(m.vy2):((-Math.abs(m.vy2)*m.bounce))); m.vy3=((above(m.y3, 0)!=0)?(m.vy3):((Math.abs(m.vy3)*m.bounce))); m.vy3=((below(m.y3, 1)!=0)?(m.vy3):((-Math.abs(m.vy3)*m.bounce))); m.vy4=((above(m.y4, 0)!=0)?(m.vy4):((Math.abs(m.vy4)*m.bounce))); m.vy4=((below(m.y4, 1)!=0)?(m.vy4):((-Math.abs(m.vy4)*m.bounce))); m.q4=m.x4; m.q8=m.y4; m.q1=m.aspectx; m.q2=m.aspecty; m.zoom=1; m.warp=0; m.bb=((m.bb*0.99)+(m.bass*0.02)); m.mm=((m.mm*0.99)+(m.mid*0.02)); m.tt=((m.tt*0.99)+(m.treb*0.02)); m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.ob_r=div((m.bb-m.mn),(m.mx-m.mn)); m.ob_b=div((m.mm-m.mn),(m.mx-m.mn)); m.ob_g=div((m.tt-m.mn),(m.mx-m.mn)); m.q6=Math.atan2(m.vx4, m.vy4); m.q5=sqrt(((m.vx4*m.vx4)+(m.vy4*m.vy4))); m.a=((m.a*0.95)+m.q5); m.s=((m.s*0.9)+m.a); m.q3=(m.s*0.1); m.t=(m.t+div(0.1,m.fps)); m.t=((above(m.t, 2)!=0)?((m.t-2)):(m.t)); m.q12=-m.t; m.monitor=m.t; m.wave_a=0;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.x=(0.5+((m.x-0.5)*m.q1)); m.y=(0.5+((m.y-0.5)*m.q2)); m.dir=((-m.q6*1)+(Math.asin(1)*0)); m.xx=m.q4; m.yy=(1-m.q8); m.dx=0; m.dy=0; m.d=sqrt((((m.x-m.xx)*(m.x-m.xx))+((m.y-m.yy)*(m.y-m.yy)))); m.r=0.08; m.v=(-15*m.q5); m.dx=((((m.v*Math.sin(m.dir))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 200)))*m.q2); m.dy=((((m.v*Math.cos(m.dir))*(m.r-m.d))*(1-sigmoid((m.d-m.r), 200)))*m.q1);","warp":"shader_body\n{\n  vec3 tmpvar_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  tmpvar_1 = vec3((((tmpvar_2.x + tmpvar_2.y) + tmpvar_2.z) * 0.33333));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((texture (sampler_main, clamp (\n    (uv - ((vec2(0.0, 0.0168) * (tmpvar_1 - 0.35).xy) * (tmpvar_1 - 0.4).xy))\n  , 0.0, 1.0)).xyz - 0.001) + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 2.0)) + rand_frame.xy)\n  ) - 0.5) * 0.04).xyz);\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv - 0.5).yx * aspect.zw);\n  float tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = (min (abs(\n    (tmpvar_1.x / tmpvar_1.y)\n  ), 1.0) / max (abs(\n    (tmpvar_1.x / tmpvar_1.y)\n  ), 1.0));\n  float tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * tmpvar_3);\n  tmpvar_4 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_4) + 0.05368138) * tmpvar_4) - 0.1173503)\n     * tmpvar_4) + 0.1938925) * tmpvar_4) - 0.3326756)\n   * tmpvar_4) + 0.9999793) * tmpvar_3);\n  tmpvar_4 = (tmpvar_4 + (float(\n    (abs((tmpvar_1.x / tmpvar_1.y)) > 1.0)\n  ) * (\n    (tmpvar_4 * -2.0)\n   + 1.570796)));\n  tmpvar_2 = (tmpvar_4 * sign((tmpvar_1.x / tmpvar_1.y)));\n  if ((abs(tmpvar_1.y) > (1e-08 * abs(tmpvar_1.x)))) {\n    if ((tmpvar_1.y < 0.0)) {\n      if ((tmpvar_1.x >= 0.0)) {\n        tmpvar_2 += 3.141593;\n      } else {\n        tmpvar_2 = (tmpvar_2 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_2 = (sign(tmpvar_1.x) * 1.570796);\n  };\n  vec2 tmpvar_5;\n  tmpvar_5.x = (tmpvar_2 * q11);\n  tmpvar_5.y = (((0.5 * \n    log(sqrt(dot (tmpvar_1, tmpvar_1)))\n  ) - (tmpvar_2 * q11)) + q12);\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = pow (texture (sampler_main, (0.5 + (\n    (0.5 - abs(((\n      fract((tmpvar_5 * 0.5))\n     * 2.0) - 1.0)))\n   * vec2(0.96, 1.0)))).xyz, vec3(0.618034, 0.618034, 0.618034));\n  ret = tmpvar_6.xyz;\n}\n\n"}