{"baseVals":{"rating":1,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":2,"additivewave":1,"wave_dots":1,"modwavealphabyvolume":1,"wave_a":0.195,"wave_scale":2.541,"wave_smoothing":0.81,"wave_mystery":0.14,"modwavealphastart":0.47,"modwavealphaend":1.32,"zoomexp":1.00016,"zoom":1.00022,"warp":0,"wave_b":0.3,"ob_size":0.1,"ob_a":0.06,"ib_size":0.035,"ib_g":0.45,"ib_a":0.29,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.beatfreq = 0;\nm.dle = 0;\nm.pulsefreq = 0;\nm.bccl = 0;\nm.bt = 0;\nm.q1 = 0;\nm.lastbeat = 0;\nm.pulse = 0;\nm.q4 = 0;\nm.dqv = 0;\nm.le = 0;\nm.btblock = 0;\nm.leccl = 0;\nm.beat = 0;\nm.hccp = 0;\nm.q2 = 0;\nm.lastpulse = 0;\nm.q3 = 0;\nm.eo = 0;\nm.th = 0;\nm.thccl = 0;\nm.dle=1;","frame_eqs_str":"m.le=(((1.4*m.bass_att)+(0.1*m.bass))+(0.5*m.treb)); m.pulse=above(m.le, m.th); m.pulsefreq=((equal(m.pulsefreq, 0)!=0)?(2):(((m.pulse!=0)?(((0.8*m.pulsefreq)+(0.2*(m.time-m.lastpulse)))):(m.pulsefreq)))); m.lastpulse=((m.pulse!=0)?(m.time):(m.lastpulse)); m.bt=div((m.time-m.lastbeat),((0.5*m.beatfreq)+(0.5*m.pulsefreq))); m.hccp=(div(0.03,(m.bt+0.2))+(0.5*((band(above(m.bt, 0.8), below(m.bt, 1.2))!=0)?((pow(Math.sin(((m.bt-1)*7.854)), 4)-1)):(0)))); m.beat=band(above(m.le, (m.th+m.hccp)), m.btblock); m.btblock=(1-above(m.le, (m.th+m.hccp))); m.lastbeat=((m.beat!=0)?(m.time):(m.lastbeat)); m.beatfreq=((equal(m.beatfreq, 0)!=0)?(2):(((m.beat!=0)?(((0.8*m.beatfreq)+(0.2*(m.time-m.lastbeat)))):(m.beatfreq)))); m.th=((above(m.le, m.th)!=0)?(((m.le+div(114,(m.le+10)))-7.407)):(((m.th+div((m.th*0.07),(m.th-12)))+((below(m.th, 2.7)*0.1)*(2.7-m.th))))); m.th=((above(m.th, 6)!=0)?(6):(m.th)); m.thccl=(m.thccl+(m.th-2.5144)); m.q1=m.le; m.q2=(m.thccl+(0.2*m.leccl)); m.leccl=(m.leccl+(m.dle*m.le)); m.dle=((m.beat!=0)?(-m.dle):(m.dle)); m.bccl=(m.bccl+m.beat); m.wave_r=((0.1+(0.8*sqr(Math.sin((0.011*m.thccl)))))+(0.1*Math.sin((m.leccl*0.061)))); m.wave_g=((0.1+(0.8*sqr(Math.sin((0.013*m.thccl)))))+(0.1*Math.cos((m.leccl*0.067)))); m.wave_b=((0.1+(0.8*sqr(Math.cos((0.017*m.thccl)))))+(0.1*Math.sin((m.leccl*0.065)))); m.ib_r=(m.ib_r+(0.1*Math.sin(((1.3*m.time)+(0.012*m.leccl))))); m.ib_g=(m.ib_g+(0.1*Math.sin(((1.7*m.time)+(0.019*m.leccl))))); m.ib_b=(m.ib_b+(0.1*Math.sin(((1.9*m.time)+(0.017*m.leccl))))); m.mv_r=(0.5*(m.ib_r+m.wave_r)); m.mv_g=(0.5*(m.ib_g+m.wave_g)); m.mv_b=(0.5*(m.ib_b+m.wave_b)); m.mv_a=(0.5*sqr(Math.sin(((0.01*m.leccl)+m.bccl)))); m.echo_alpha=(0.5+(0.2*Math.cos(((0.07*m.leccl)+(0.02*m.thccl))))); m.eo=((band(equal(mod(m.bccl,3), 0), m.beat)!=0)?(rand(4)):(m.eo)); m.q3=((equal(m.eo, 2)+equal(m.eo, 1))*equal(mod(m.bccl,2), 0)); m.q4=((equal(m.eo, 0)+equal(m.eo, 3))*equal(mod(m.bccl,2), 0)); m.echo_orient=m.eo;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.dqv=(above(m.x, 0.5)-above(m.y, 0.5)); m.rot=Math.sin(((Math.sin(((m.rad*(13+(5*Math.sin((0.01*m.q2)))))+(0.06*m.q2)))*m.q1)*0.01)); m.zoom=(1+((((m.q3!=0)?(m.dqv):(1))*0.1)*Math.sin(((7*m.ang)+(0.03*m.q2))))); m.zoom=((m.q4!=0)?(((below(m.rad, (0.8*sqr(Math.sin((0.016*m.q2)))))!=0)?((0.75+(0.4*Math.cos((0.021*m.q2))))):(m.zoom))):(m.zoom));","warp":"shader_body\n{\n  vec3 z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = mix (uv_orig, uv, vec2(0.2, 0.2));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, tmpvar_3);\n  float tmpvar_5;\n  tmpvar_5 = ((tmpvar_4.x * tmpvar_4.y) * tmpvar_4.y);\n  z_1.x = (tmpvar_4.x + ((\n    (-(tmpvar_5) + (0.035 * (1.0 - tmpvar_4.x)))\n   + 0.0007) * 9.0));\n  z_1.y = (tmpvar_4.y + ((tmpvar_5 - \n    (0.095 * tmpvar_4.y)\n  ) * 9.0));\n  z_1.z = (tmpvar_4.z - 0.02);\n  vec2 tmpvar_6;\n  tmpvar_6 = (0.3 * texsize.zw);\n  z_1.x = (z_1.x + (1.8 * (\n    (0.25 * (((texture (sampler_main, \n      (tmpvar_3 + tmpvar_6)\n    ).xyz + texture (sampler_main, \n      (tmpvar_3 + (tmpvar_6 * vec2(-1.0, 1.0)))\n    ).xyz) + texture (sampler_main, (tmpvar_3 + \n      (tmpvar_6 * vec2(1.0, -1.0))\n    )).xyz) + texture (sampler_main, (tmpvar_3 - tmpvar_6)).xyz))\n   - texture (sampler_main, tmpvar_3).xyz)).x);\n  ret_2.yz = z_1.yz;\n  ret_2.x = (z_1.x + (0.09 * (\n    (texture (sampler_noise_lq, (((uv * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz * 2.0)\n   - 1.0)).x);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_2;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = (texture (sampler_main, uv_1).xyz * 4.0);\n  ret_2 = (ret_2 - ((\n    (texture (sampler_blur1, uv_1).xyz * scale1)\n   + bias1) * 4.0));\n  ret_2 = -(ret_2);\n  ret_2 = ((pow (ret_2, vec3(0.5, 0.5, 0.7)) - 0.1) * 1.1);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_2;\n  ret = tmpvar_3.xyz;\n}\n\n"}