{"baseVals":{"rating":0,"decay":1,"echo_zoom":0.388415,"echo_orient":1,"wave_mode":7,"brighten":1,"solarize":1,"invert":1,"wave_a":0.001,"warpscale":0.325446,"rot":-0.22,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"ob_size":0,"ob_b":1,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":44.799995,"mv_y":24.000004,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.274246,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"m.tex_capture = 0;\nm.saw = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['saw'];","frame_eqs_str":"m.tex_capture=m.q1; m.saw=(m.saw-(0.001*m.bass)); m.saw=((below(m.saw, 0.2)!=0)?(0.6):(m.saw)); m.tex_zoom=m.saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.6671,"tex_zoom":0.274246,"g":1,"b":1,"a":0.1,"r2":1,"g2":0,"a2":0.4,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"m.tex_capture = 0;\nm.saw = 0;\nm.q1 = 0;\n\n\t\t\tm.rkeys = ['saw'];","frame_eqs_str":"m.tex_capture=m.q1; m.saw=(m.saw-(0.001*m.bass)); m.saw=((below(m.saw, 0.1)!=0)?(0.6):(m.saw)); m.tex_zoom=m.saw;"},{"baseVals":{"enabled":1,"textured":1,"rad":2.667177,"tex_zoom":0.369642,"g":1,"b":1,"a":0.1,"a2":0.4,"border_g":0,"border_b":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"m.xs = 0;\nm.q1 = 0;\nm.v = 0;\nm.ys = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['xs','ys'];","frame_eqs_str":"","point_eqs_str":"m.q1=0; m.speed=(m.bass_att*0.2); m.v=((m.sample*100000)+((m.value2*m.bass)*0.1)); m.xs=(m.xs+((Math.sin(((m.v*0.1)+(Math.sin(m.v)*0.1)))*m.speed)*Math.atan((m.v*1.51)))); m.ys=(m.ys+((Math.sin(((m.v*0.1)+(Math.cos(m.v)*0.1)))*m.speed)*Math.atan(m.v))); m.x=(0.5+((0.5*Math.sin((m.xs*0.1)))*Math.cos(((m.time*2)+m.ys)))); m.y=(0.5+((0.5*Math.sin((m.ys*0.1)))*Math.cos(((m.time*2.1)+m.xs)))); m.x=m.x; m.y=m.y; m.y=m.y; m.g=1; m.xs=((above(m.xs, 1000)!=0)?(0):(m.xs)); m.ys=((above(m.ys, 1000)!=0)?(0):(m.ys));"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"m.xs = 0;\nm.q1 = 0;\nm.v = 0;\nm.ys = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['xs','ys'];","frame_eqs_str":"","point_eqs_str":"m.q1=0; m.speed=(m.bass_att*0.2); m.v=((m.sample*100000)+((m.value2*m.bass)*0.1)); m.xs=(m.xs+((Math.sin(((m.v*0.1)+(Math.sin(m.v)*0.1)))*m.speed)*Math.atan((m.v*1.51)))); m.ys=(m.ys+((Math.sin(((m.v*0.1)+(Math.cos(m.v)*0.1)))*m.speed)*Math.atan(m.v))); m.x=(0.5+((0.5*Math.sin((m.xs*0.1)))*Math.cos((((m.time*2)+m.ys)+0.7)))); m.y=(0.5+((0.5*Math.sin((m.ys*0.1)))*Math.cos((((m.time*2.1)+m.xs)+0.7)))); m.x=m.x; m.y=m.y; m.y=m.y; m.g=1; m.xs=((above(m.xs, 1000)!=0)?(0):(m.xs)); m.ys=((above(m.ys, 1000)!=0)?(0):(m.ys));"},{"baseVals":{"enabled":1,"thick":1,"smoothing":0},"init_eqs_str":"m.xs = 0;\nm.q1 = 0;\nm.v = 0;\nm.ys = 0;\nm.speed = 0;\n\n\t\t\tm.rkeys = ['xs','ys'];","frame_eqs_str":"","point_eqs_str":"m.q1=0; m.speed=(m.bass_att*0.2); m.v=((m.sample*100000)+((m.value2*m.bass)*0.1)); m.xs=(m.xs+((Math.sin(((m.v*0.1)+(Math.sin(m.v)*0.1)))*m.speed)*Math.atan((m.v*1.51)))); m.ys=(m.ys+((Math.sin(((m.v*0.1)+(Math.cos(m.v)*0.1)))*m.speed)*Math.atan(m.v))); m.x=(0.5+((0.5*Math.sin((m.xs*0.1)))*Math.cos((((m.time*2)+m.ys)+1.4)))); m.y=(0.5+((0.5*Math.sin((m.ys*0.1)))*Math.cos((((m.time*2.1)+m.xs)+1.4)))); m.x=m.x; m.y=m.y; m.y=m.y; m.g=1; m.xs=((above(m.xs, 1000)!=0)?(0):(m.xs)); m.ys=((above(m.ys, 1000)!=0)?(0):(m.ys));"},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.basstime = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.decay_r = 0;\nm.decay_b = 0;\nm.decay_g = 0;","frame_eqs_str":"m.dx=0.0; m.basstime=(m.basstime+(m.bass*0.13)); m.q5=m.basstime; m.decay_r=0; m.decay_g=0; m.decay_b=0; m.ob_r=(0.5+(0.5*Math.sin((m.basstime*0.22)))); m.ob_g=(0.5+(0.5*Math.sin((m.time*0.307)))); m.ob_b=(0.5+(0.5*Math.sin((m.time*0.112)))); m.monitor=m.q1;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1.05; m.rot=0; m.dx=0; m.dy=0; m.warp=0;","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + texture (sampler_fc_main, ((\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3) * 2.0).xy).xyz);\n  ret_1 = (ret_1 * 2.0);\n  ret_1 = (ret_1 * (ret_1 - (ret_1 * 0.2)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}