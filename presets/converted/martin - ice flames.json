{"baseVals":{"rating":2,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":0,"modwavealphabyvolume":0,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":1,"solarize":0,"invert":0,"wave_a":0.002,"wave_scale":0.14,"wave_smoothing":0,"wave_mystery":-0.84,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":0.9999,"sy":1,"wave_r":1,"wave_g":0,"wave_b":0.6,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":1,"ob_g":1,"ob_b":1,"ob_a":0,"ib_size":0.26,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":23,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.72143,"ang":0,"tex_ang":0.62832,"tex_zoom":0.0402,"r":1,"g":1,"b":1,"a":0.9,"r2":0.9,"g2":1,"b2":1,"a2":0.3,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.vis = 0;\nm.q27 = 0;\nm.q22 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.vis=div((bnot(mod(m.q27,8))*m.q22),2); m.vis=Math.min(m.vis, 1); m.a=div(m.vis,2); m.a2=div(m.vis,2); m.tex_zoom=1; m.rad=(m.vis*0.3);"},{"baseVals":{"enabled":0,"sides":5,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":4.77803,"ang":0,"tex_ang":0,"tex_zoom":1.78051,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":0.99,"border_b":1,"border_a":0},"init_eqs_str":"m.q24 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.ang=Math.sin(div(m.time,65)); m.rad=div(m.q24,8);"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"thickoutline":0,"textured":0,"num_inst":4,"x":0.9,"y":0.5,"rad":0.24732,"ang":0,"tex_ang":0,"tex_zoom":0.40839,"r":1,"g":0.6,"b":0,"a":0.4,"r2":0,"g2":0,"b2":0.6,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.blue = 0;\nm.ampl = 0;\nm.steps = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.green = 0;\nm.red = 0;\nm.trig = 0;\nm.q27 = 0;\nm.q28 = 0;\n\n\t\t\tm.rkeys = ['blue','green','red'];","frame_eqs_str":"m.steps=(m.q28+1); m.steps=4; m.ampl=0.2; m.x=(0.5+(m.ampl*Math.cos(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.y=(0.5+(m.ampl*Math.sin(((div(m.q27,m.steps)+div(m.instance,4))*6.28)))); m.a=0.4; m.a2=0.0; m.trig=(m.q24*bnot(mod(m.q27,4))); m.red=((bnot(m.trig)*m.red)+(div(rand(100),100)*m.trig)); m.green=((bnot(m.trig)*m.green)+(div(rand(100),100)*m.trig)); m.blue=((bnot(m.trig)*m.blue)+(div(rand(100),100)*m.trig)); m.k1=div(m.instance,m.num_inst); m.r=(m.red*m.k1); m.g=(m.green*(1-m.k1)); m.b=(((m.blue*4)*m.k1)*(1-m.k1)); m.r=m.red; m.g=m.green; m.b=m.blue; m.r2=m.r; m.b2=m.b; m.g2=m.g;"},{"baseVals":{"enabled":0,"sides":36,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.01,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0,"g":0.12,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":1,"usedots":1,"thick":0,"additive":1,"scaling":0.5033,"smoothing":0.5,"r":0.5,"g":0.1,"b":1,"a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.stag = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.drot = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p4 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.1+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),12); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q27=(m.index+1); m.q28=m.index2; m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q5=(m.q1*0.01); m.drot=div(((mod(m.index,4)-2)*30),m.fps); m.p3=((m.p3*m.dec_slow)+(div(((1-m.dec_slow)*30),m.fps)*m.drot)); m.q30=m.p3; m.stag=(m.q27+(m.index2*1)); m.stag=Math.max(m.stag, 1); m.p4=((m.dec_med*m.p4)+((1-m.dec_med)*m.stag)); m.q31=m.p4; m.zoom=(1+(0.05*m.q1)); m.rot=(-0.007*m.index); m.q32=pow(0.996, div(30,m.fps)); m.monitor=m.index2;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.dy=-0.005;","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (uv - vec2(0.5, 0.5));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 0.0;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur1, uv);\n  tmpvar_3.xyz = ((tmpvar_4.xyz * scale1) + bias1);\n  float tmpvar_5;\n  tmpvar_5 = (dot (tmpvar_3, roam_sin) * 8.0);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = -(sin(tmpvar_5));\n  tmpvar_6[1u].x = sin(tmpvar_5);\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  uv_1 = (((tmpvar_2 + \n    ((0.2 * dot ((\n      (tmpvar_4.xyz * scale1)\n     + bias1), vec3(0.32, 0.49, 0.29))) * (tmpvar_2 * tmpvar_6))\n  ) - 0.5) + q5);\n  vec2 tmpvar_7;\n  tmpvar_7 = ((uv_1 * texsize.xy) * 0.02);\n  vec2 tmpvar_8;\n  tmpvar_8.x = (cos((tmpvar_7.y * q1)) * sin(-(tmpvar_7.y)));\n  tmpvar_8.y = (sin(tmpvar_7.x) * cos((tmpvar_7.y * q2)));\n  uv_1 = (uv_1 - ((tmpvar_8 * texsize.zw) * 12.0));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ((texture (sampler_main, uv_1).xyz * 0.99) - 0.01);\n  ret = tmpvar_9.xyz;\n}\n\n","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nvec2 xlat_mutableuv1;\nfloat xlat_mutablez;\nshader_body\n{\n  xlat_mutableuv1 = ((uv - 0.5) * aspect.xy);\n  xlat_mutablez = (8.0 / pow (xlat_mutableuv1.y, 0.05));\n  xlat_mutablers.x = (xlat_mutableuv1.x * xlat_mutablez);\n  xlat_mutablers.y = ((xlat_mutablez / 2.0) + time);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, xlat_mutablers);\n  xlat_mutableret1 = ((tmpvar_1.xyz * vec3(\n    greaterThanEqual (tmpvar_1.xyz, vec3(0.0, 0.0, 0.0))\n  )) - 0.5);\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(((xlat_mutableuv1 - 0.5) - (\n    (xlat_mutableret1 * 0.1)\n   * \n    clamp ((xlat_mutableuv1.y * 32.0), 0.0, 1.0)\n  ).xy));\n  vec2 tmpvar_3;\n  tmpvar_3.x = (1.0 - tmpvar_2.x);\n  tmpvar_3.y = tmpvar_2.y;\n  vec3 tmpvar_4;\n  tmpvar_4 = (texture (sampler_main, tmpvar_2) + texture (sampler_main, tmpvar_3)).xyz;\n  xlat_mutableret1 = tmpvar_4;\n  xlat_mutableuv1 = (xlat_mutableuv1 * aspect.xy);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((tmpvar_4 * (1.0 + \n    dot (tmpvar_4, vec3(0.32, 0.49, 0.29))\n  )) / 3.0);\n  ret = tmpvar_5.xyz;\n}\n\n"}