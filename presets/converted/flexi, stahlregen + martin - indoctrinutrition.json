{"baseVals":{"rating":5,"gammaadj":1,"decay":0.5,"echo_zoom":1.03,"wave_mode":3,"wave_dots":1,"wave_thick":1,"wrap":0,"wave_a":0.9,"wave_scale":2.905,"wave_smoothing":0.6,"wave_mystery":-0.3,"warpanimspeed":1.549,"warpscale":2.94,"zoomexp":0.02049,"fshader":1,"warp":1.45984,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"ob_size":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":24.986,"mv_y":20.031,"mv_dx":0.065,"mv_dy":0.109,"mv_l":0.036,"mv_r":0.816,"mv_g":0.099,"mv_b":0.816,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.cx1 = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.w = 0;\nm.cy1 = 0;\nm.q18 = 0;\nm.x1 = 0;\nm.q21 = 0;\nm.q15 = 0;\nm.v = 0;\nm.x3 = 0;\nm.d2 = 0;\nm.a = 0;\nm.dir = 0;\nm.r = 0;\nm.x2 = 0;\nm.q19 = 0;\nm.y2 = 0;\nm.q20 = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.zoom=0.995; m.warp=0; m.a=((m.a*0.98)-((m.bass-m.treb)*0.01)); m.v=((m.v*0.96)+(m.a*0.12)); m.w=(m.w+(m.v*0.01)); m.q15=(m.a-m.v); m.q18=m.w; m.q19=sigmoid((m.treb_att-m.bass_att), 2); m.d=(m.d+div((((m.bass_att-0.5)*0.01)*60),m.fps)); m.d2=(m.d2+div((((m.treb_att-0.5)*0.006)*60),m.fps)); m.q20=(m.d+m.d2); m.q21=m.d2;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.r=div(m.bass,4); m.cx1=(0.5+(Math.sin((m.time*0.618))*0.2)); m.cy1=(0.5+(Math.cos((m.time*1.618))*0.2)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((m.bass*((m.r*m.r)-(m.d*m.d)))*0.3); m.x1=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y1=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((m.time*2.618))*0.3)); m.cy1=(0.5+(Math.cos((m.time*3.14))*0.3)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.mid*((m.r*m.r)-(m.d*m.d)))*0.3); m.x2=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y2=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((-m.time*2.618))*0.4)); m.cy1=(0.5+(Math.cos((-m.time*1.14))*0.4)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.treb*((m.r*m.r)-(m.d*m.d)))*0.3); m.x3=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y3=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.v=0.4; m.dx=(((m.x1+m.x2)+m.x3)*m.v); m.dy=(((m.y1+m.y2)+m.y3)*m.v);","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = fract(uv);\n  vec2 tmpvar_3;\n  tmpvar_3 = (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy);\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 12.0);\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur3, \n    (uv_orig + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv_orig - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale3) + bias3));\n  vec3 tmpvar_6;\n  tmpvar_6 = (((texture (sampler_blur3, \n    (uv_orig + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3) - ((texture (sampler_blur3, \n    (uv_orig - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale3) + bias3));\n  ret_1.x = ((texture (sampler_fc_main, tmpvar_2).x - (\n    (((texture (sampler_blur3, tmpvar_2).xyz * scale3) + bias3) - texture (sampler_fc_main, tmpvar_2).xyz)\n  .x * 0.1)) - 0.035);\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_5.x;\n  tmpvar_7.y = tmpvar_6.x;\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.y;\n  tmpvar_8.y = tmpvar_6.y;\n  ret_1.y = (((texture (sampler_fc_main, \n    (((uv_orig + (\n      ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n     * 4.0)) - ((tmpvar_7 * texsize.zw) * 4.0)) + ((tmpvar_8 * texsize.zw) * 8.0))\n  ).y + \n    ((texture (sampler_noise_lq, tmpvar_3).xyz - 0.5) * 0.1)\n  ) - 0.012) + (texture (sampler_pc_main, uv_orig).z * 0.2)).x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.x;\n  tmpvar_9.y = -(tmpvar_5.x);\n  vec2 tmpvar_10;\n  tmpvar_10 = ((uv_orig + (\n    ((texture (sampler_noise_lq, tmpvar_3).xy - 0.5) * texsize.zw)\n   * 2.0)) + ((tmpvar_9 * texsize.zw) * 64.0));\n  ret_1.z = (((\n    (texture (sampler_fc_main, tmpvar_10).z + ((texture (sampler_fc_main, tmpvar_10).z - (\n      (texture (sampler_blur2, tmpvar_10).xyz * scale2)\n     + bias2).z) * 0.2))\n   + \n    (texture (sampler_noise_lq, tmpvar_3).xyz * 0.1)\n  ) - (\n    (texture (sampler_blur3, uv_orig).xyz * scale3)\n   + bias3).x) - (clamp (\n    (1.0 - ((texture (sampler_blur2, uv_orig).xyz * scale2) + bias2).x)\n  , 0.0, 1.0) * 0.04)).x;\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_1;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"vec2 xlat_mutablers;\nshader_body\n{\n  vec2 uv_1;\n  uv_1 = (0.5 + ((uv - 0.5) * aspect.xy));\n  xlat_mutablers.x = (((ang / 3.14) + (rad * q15)) - q18);\n  vec2 x_2;\n  x_2 = (uv_1 - 0.5);\n  xlat_mutablers.y = ((0.1 / (0.05 + \n    (sqrt(dot (x_2, x_2)) * 1.4)\n  )) + q21);\n  uv_1 = (1.0 - abs((\n    (fract((xlat_mutablers * 0.5)) * 2.0)\n   - 1.0)));\n  vec2 tmpvar_3;\n  tmpvar_3.y = 0.0;\n  tmpvar_3.x = texsize.z;\n  vec2 tmpvar_4;\n  tmpvar_4 = (tmpvar_3 * 4.0);\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6 = (tmpvar_5 * 4.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = dot (((\n    (texture (sampler_blur1, (uv_1 - tmpvar_4)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv_1 + tmpvar_4)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  tmpvar_7.y = dot (((\n    (texture (sampler_blur1, (uv_1 - tmpvar_6)).xyz * scale1)\n   + bias1) - (\n    (texture (sampler_blur1, (uv_1 + tmpvar_6)).xyz * scale1)\n   + bias1)), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_8;\n  tmpvar_8 = texture (sampler_main, uv_1);\n  uv_1 = (cos((\n    (12.56 * xlat_mutablers)\n   - \n    (vec2(0.0, 10.0) * q20)\n  )) - (8.0 * tmpvar_7));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = (mix (mix (\n    mix ((tmpvar_8.x * vec3(2.0, 1.2, 0.0)), vec3(0.25, 0.0, 0.5), vec3(clamp (tmpvar_8.y, 0.0, 1.0)))\n  , vec3(1.8, 1.8, 1.8), vec3(\n    clamp ((tmpvar_8.z - tmpvar_8.x), 0.0, 1.0)\n  )), (\n    clamp ((0.02 / sqrt(dot (uv_1, uv_1))), 0.0, 1.0)\n   * hue_shader), vec3(0.92, 0.92, 0.92)) * 6.0);\n  ret = tmpvar_9.xyz;\n}\n\n"}