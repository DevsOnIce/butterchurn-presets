{"baseVals":{"rating":0,"gammaadj":1,"decay":0.959,"echo_zoom":1,"echo_alpha":0.047,"wave_mode":6,"wave_brighten":0,"darken_center":1,"wave_a":0.005,"wave_scale":0.113,"wave_smoothing":0,"wave_mystery":-0.214,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.778,"warpscale":51.512,"zoomexp":1.73596,"fshader":0.054,"zoom":1.00059,"rot":0.00438,"warp":0.01,"wave_x":0.597,"wave_y":0.819,"ob_size":0.005,"ob_r":0.301,"ob_g":0.111,"ob_b":0.266,"ob_a":1,"ib_size":0,"ib_r":0.622,"ib_g":0.698,"ib_b":0.831,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.486,"mv_g":0.675,"mv_b":0.347,"mv_a":0,"b1ed":0.107},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.y3 = 0;\nm.y1 = 0;\nm.xx = 0;\nm.si3 = 0;\nm.q12 = 0;\nm.w2 = 0;\nm.t1 = 0;\nm.x1 = 0;\nm.vx3 = 0;\nm.q13 = 0;\nm.q6 = 0;\nm.dt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.nyy = 0;\nm.d1 = 0;\nm.si1 = 0;\nm.mm = 0;\nm.tt = 0;\nm.ndir = 0;\nm.lastbeat = 0;\nm.grav = 0;\nm.nxx = 0;\nm.x3 = 0;\nm.beatrate = 0;\nm.d2 = 0;\nm.peakbass_att = 0;\nm.q10 = 0;\nm.xx2 = 0;\nm.q4 = 0;\nm.spy4 = 0;\nm.vy4 = 0;\nm.dir = 0;\nm.bounce = 0;\nm.x4 = 0;\nm.w1 = 0;\nm.r = 0;\nm.x2 = 0;\nm.mx = 0;\nm.volume = 0;\nm.mn = 0;\nm.beat = 0;\nm.nbeat = 0;\nm.vy2 = 0;\nm.y2 = 0;\nm.ny = 0;\nm.bb = 0;\nm.q2 = 0;\nm.nv = 0;\nm.m1 = 0;\nm.q14 = 0;\nm.spring = 0;\nm.si2 = 0;\nm.vx2 = 0;\nm.q3 = 0;\nm.resist = 0;\nm.nx = 0;\nm.yy = 0;\nm.y4 = 0;\nm.q7 = 0;\nm.vy3 = 0;\nm.xx1 = 0;\nm.v2 = 0;\nm.b1 = 0;\nm.nr = 0;\nm.q8 = 0;\nm.nd = 0;\nm.x1=0; m.y1=0; m.x2=0.5; m.x3=0.5; m.x4=0.5;","frame_eqs_str":"m.decay=0.25; m.xx1=((m.xx1*0.9)+(m.bass*0.01)); m.xx2=((m.xx2*0.9)+(m.treb*0.01)); m.lastbeat=(((m.nbeat*m.time)+((1-m.nbeat)*m.lastbeat))+(equal(m.lastbeat, 0)*m.time)); m.x1=(0.5-((m.xx1-m.xx2)*2)); m.beat=((above(m.volume, 0.8)*below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att)))*above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))); m.spring=50; m.grav=2; m.q10=m.beat; m.dt=0.0005; m.vx2=((below(m.x2, 1)!=0)?(((above(m.x2, 0)!=0)?(((m.vx2*(1-(m.resist*m.dt)))+(m.dt*(((m.x1+m.x3)-(2*m.x2))*m.spring)))):((Math.abs(m.vx2)*m.bounce)))):((-Math.abs(m.vx2)*m.bounce))); m.vy2=((below(m.y2, 1)!=0)?(((above(m.y2, 0)!=0)?(((m.vy2*(1-(m.resist*m.dt)))+(m.dt*((((m.y1+m.y3)-(2*m.y2))*m.spring)-m.grav)))):((Math.abs(m.vy2)*m.bounce)))):((-Math.abs(m.vy2)*m.bounce))); m.vx3=((below(m.x3, 1)!=0)?(((above(m.x3, 0)!=0)?(((m.vx3*(1-(m.resist*m.dt)))+(m.dt*(((m.x2+m.x4)-(2*m.x3))*m.spring)))):((Math.abs(m.vx3)*m.bounce)))):((-Math.abs(m.vx3)*m.bounce))); m.vy3=((below(m.y3, 1)!=0)?(((above(m.y3, 0)!=0)?(((m.vy3*(1-(m.resist*m.dt)))+(m.dt*((((m.y2+m.y4)-(2*m.y3))*m.spring)-m.grav)))):((Math.abs(m.vy3)*m.bounce)))):((-Math.abs(m.vy3)*m.bounce))); m.spy4=((m.y3-m.y4)*m.spring); m.q6=m.tt; m.x2=(m.x2+m.vx2); m.y2=(m.y2+m.vy2); m.x3=(m.x3+m.vx3); m.y3=(m.y3+m.vy3); m.vy4=((below(m.y4, 1)!=0)?(((above(m.y4, 0)!=0)?(((m.vy4*(1-(m.resist*m.dt)))+(m.dt*(m.spy4-m.grav)))):((Math.abs(m.vy4)*m.bounce)))):((-Math.abs(m.vy4)*m.bounce))); m.y4=(m.y4+m.vy4); m.q3=m.x4; m.q7=m.y4; m.q8=m.y2; m.q4=m.x2; m.q9=m.x1; m.q1=m.x1; m.q2=m.x2; m.q12=m.y3; m.zoom=1; m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.ob_r=div((m.bb-m.mn),(m.mx-m.mn)); m.ob_b=div((m.mm-m.mn),(m.mx-m.mn)); m.ob_g=div((m.tt-m.mn),(m.mx-m.mn)); m.q13=Math.atan2(m.vx3, m.vy3); m.q14=sqrt(((m.vx3*m.vx3)+(m.vy3*m.vy3))); m.q5=sqrt(((m.vx2*m.vx2)+(m.vy2*m.vy2)));\n\t\tm.rkeys = ['nyy','ndir','nxx','ny','nx'];","pixel_eqs_str":"m.w1=m.q9; m.w2=m.q10; m.nx=(m.nx-0.5); m.ny=(m.ny-0.5); m.b1=0.075; m.m1=(m.q5*50); m.t1=0.1; m.x1=(m.nxx+(Math.cos((m.ndir+1.5708))*m.b1)); m.y1=(m.nyy-(Math.sin((m.ndir+1.5708))*m.b1)); m.x2=(m.nxx-(Math.cos((m.ndir+1.5708))*m.b1)); m.y2=(m.nyy+(Math.sin((m.ndir+1.5708))*m.b1)); m.d1=(sqrt((((m.x1-m.nx)*(m.x1-m.nx))+((m.y1-m.ny)*(m.y1-m.ny))))-(m.b1*2)); m.si1=(1-div(1,(1+pow(2, (-m.d1*100))))); m.d2=(sqrt((((m.x2-m.nx)*(m.x2-m.nx))+((m.y2-m.ny)*(m.y2-m.ny))))-(m.b1*2)); m.si2=(1-div(1,(1+pow(2, (-m.d2*100))))); m.si3=(-pow(m.q5, 3)*10); m.dx=(((div(((((((m.si1*Math.sin((m.y1-m.ny)))*m.m1)*m.d1)-(((m.si2*Math.sin((m.y2-m.ny)))*m.m1)*m.d2))+((m.si3*Math.cos(m.ndir))*m.t1))*2),m.aspectx)+div((((m.nv*Math.sin(m.ndir))*(m.nr-m.nd))*(1-sigmoid((m.nd-m.nr), 280))),m.aspectx))+div((((m.nv*(m.nx-m.nxx))*(m.nr-m.nd))*(1-sigmoid((m.nd-m.nr), 70))),m.aspectx))+div((((m.nv*((Math.sin((m.ny-m.yy))*(m.nd-m.r))-((m.nx-m.xx)*(m.nd-div(m.r,2)))))+(Math.cos(m.dir)*m.v2))*(1.00-sigmoid((m.nd-m.r), 180))),m.aspectx)); m.dy=(((div(((((((-m.si1*Math.sin((m.x1-m.nx)))*m.m1)*m.d1)+(((m.si2*Math.sin((m.x2-m.nx)))*m.m1)*m.d2))-((m.si3*Math.sin(m.ndir))*m.t1))*2),m.aspecty)+div((((m.nv*Math.cos(m.ndir))*(m.nr-m.nd))*(1-sigmoid((m.nd-m.nr), 280))),m.aspecty))+div((((m.nv*(m.ny-m.nyy))*(m.nr-m.nd))*(1-sigmoid((m.nd-m.nr), 70))),m.aspecty))+div((((-m.nv*((Math.sin((m.nx-m.xx))*(m.nd-m.r))+((m.ny-m.yy)*(m.nd-div(m.r,2)))))-(Math.sin(m.dir)*m.v2))*(1.00-sigmoid((m.nd-m.r), 180))),m.aspecty)); m.ndir=((-m.q2*1)+(Math.asin(1)*0)); m.nxx=m.w1; m.nyy=(1-m.w2);","warp":"shader_body\n{\n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((\n    (ret_2.y - ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3).y)\n   * 0.1) + 0.01));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 1.0;\n  tmpvar_17.xyz = ret_2;\n  ret = tmpvar_17.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_blur1, uv);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv);\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_blur2, uv);\n  ret_1 = ((vec3(1.0, 1.0, 0.0) * vec3((\n    ((((tmpvar_4.xyz * scale2) + bias2).x * 2.5) - (((tmpvar_2.xyz * scale1) + bias1).x * 0.7))\n   + \n    (tmpvar_3.x * 0.75)\n  ))) * (1.0 - (\n    ((tmpvar_2.xyz * scale1) + bias1)\n  .x * 1.85)));\n  ret_1 = (ret_1 + ((vec3(1.0, 0.0, 0.0) * tmpvar_3.x) + (vec3(0.25, 0.25, 0.25) * tmpvar_3.x)));\n  ret_1 = (ret_1 * max (tmpvar_3.y, (\n    ((tmpvar_4.xyz * scale2) + bias2)\n  .y * 0.5)));\n  ret_1 = (ret_1 * (1.0 - clamp (\n    (((tmpvar_2.xyz * scale1) + bias1).z * 10.0)\n  , 0.0, 1.0)));\n  ret_1 = (ret_1 + vec3(pow (tmpvar_3.z, 1.5)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_1;\n  ret = tmpvar_5.xyz;\n}\n\n"}