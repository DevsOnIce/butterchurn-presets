{"baseVals":{"rating":0,"gammaadj":1.9,"decay":1,"echo_zoom":1,"echo_alpha":0,"echo_orient":0,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":1,"wave_scale":1.348,"wave_smoothing":0.75,"wave_mystery":-0.5,"modwavealphastart":0.75,"modwavealphaend":0.95,"warpanimspeed":1,"warpscale":1,"zoomexp":1,"fshader":0,"zoom":0.9999,"rot":0.1,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":1,"sx":1,"sy":1,"wave_r":1,"wave_g":1,"wave_b":1,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":0,"ob_g":0,"ob_b":0,"ob_a":0.1,"ib_size":0.5,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":0,"mv_x":12,"mv_y":9,"mv_dx":0,"mv_dy":0,"mv_l":0.9,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":0,"sides":34,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.33004,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":0.02,"r2":1,"g2":1,"b2":1,"a2":0.01,"border_r":1,"border_g":1,"border_b":1,"border_a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.25*Math.cos(m.time))); m.y=(0.5+(0.25*Math.sin(m.time)));"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.mode2 = 0;\nm.meanbass_att = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.lastbeat = 0;\nm.beatrate = 0;\nm.mode3 = 0;\nm.mode = 0;\nm.peakbass_att = 0;\nm.beatcounter = 0;\nm.q4 = 0;\nm.att = 0;\nm.volume = 0;\nm.beat = 0;\nm.q2 = 0;\nm.q3 = 0;","frame_eqs_str":"m.warp=0; m.wave_r=(m.wave_r+(0.45*((0.5*Math.sin((m.time*0.701)))+(0.3*Math.cos((m.time*0.438)))))); m.wave_b=(m.wave_b-(0.4*((0.5*Math.sin((m.time*4.782)))+(0.5*Math.cos((m.time*0.522)))))); m.wave_g=(m.wave_g+(0.4*Math.sin((m.time*1.731)))); m.ob_r=((above(m.bass_att, m.bass)*(m.bass_att-m.bass))*4); m.volume=(0.3*((m.bass+m.mid)+m.att)); m.beatrate=(equal(m.beatrate, 0)+((1-equal(m.beatrate, 0))*(below(m.volume, 0.01)+((1-below(m.volume, 0.01))*m.beatrate)))); m.lastbeat=(m.lastbeat+(equal(m.lastbeat, 0)*m.time)); m.meanbass_att=(0.1*((m.meanbass_att*9)+m.bass_att)); m.peakbass_att=Math.max(m.bass_att, m.peakbass_att); m.beat=((above(m.volume, 0.8)*below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att)))*above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))); m.beatrate=Math.max(((m.beat!=0)?(((below((m.time-m.lastbeat), (2*m.beatrate))!=0)?((0.1*(((m.beatrate*9)+m.time)-m.lastbeat))):(m.beatrate))):(m.beatrate)), 0.1); m.peakbass_att=((m.beat*m.bass_att)+(((1-m.beat)*m.peakbass_att)*((above((m.time-m.lastbeat), (2*m.beatrate))*0.95)+((1-above((m.time-m.lastbeat), (2*m.beatrate)))*0.995)))); m.lastbeat=((m.beat*m.time)+((1-m.beat)*m.lastbeat)); m.peakbass_att=Math.max(m.peakbass_att, (1.1*m.meanbass_att)); m.beatcounter=(m.beatcounter+m.beat); m.mode=(((m.beat*equal(mod(m.beatcounter,2), 0))!=0)?((1-m.mode)):(m.mode)); m.mode2=((m.beat!=0)?(mod(((m.mode2+rand(7))+1),8)):(m.mode2)); m.mode3=((m.beat!=0)?(mod(((m.mode3+rand(7))+1),8)):(m.mode3)); m.q1=((2*m.mode)-1); m.q2=(m.mode2+2); m.q3=div(1,m.q2); m.q4=(m.mode3+2); m.q5=div(1,m.q4); m.wave_x=((rand(m.q2)+0.5)*m.q3); m.wave_y=((rand(m.q4)+0.5)*m.q5); m.decay=(m.decay-(0.1*equal(mod(m.frame,50), 0)));\n\t\tm.rkeys = ['rot'];","pixel_eqs_str":"m.cx=((bitand(0,((m.x*m.q2)-0.5))+0.5)*m.q3); m.cy=((bitand(0,((m.y*m.q4)-0.5))+0.5)*m.q5); m.rot=((m.rot*pow(-1, (bitand(0,((m.x*m.q2)-0.5))+bitand(0,((m.y*m.q4)-0.5)))))*m.q1);","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 3.0));\n  vec3 tmpvar_2;\n  tmpvar_2 = fract((ret_1 - 0.005));\n  ret_1 = tmpvar_2;\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = tmpvar_2;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"uniform sampler2D sampler_rand00;\nshader_body\n{\n  vec3 ret1_1;\n  vec2 uv1_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv).xyz;\n  vec2 tmpvar_4;\n  tmpvar_4.y = 0.0;\n  tmpvar_4.x = texsize.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = 0.0;\n  tmpvar_5.y = texsize.w;\n  vec2 tmpvar_6;\n  tmpvar_6.x = (texture (sampler_main, (uv - tmpvar_4)).xyz - texture (sampler_main, (uv + tmpvar_4)).xyz).x;\n  tmpvar_6.y = (texture (sampler_main, (uv - tmpvar_5)).xyz - texture (sampler_main, (uv + tmpvar_5)).xyz).x;\n  uv1_2 = ((0.3 * cos(\n    (((uv - 0.5) * 2.0) + 1.7)\n  )) - (2.0 * tmpvar_6));\n  ret1_1 = ((-(tmpvar_3) / 4.0) + ((6.0 * vec3(\n    clamp ((0.03 / sqrt(dot (uv1_2, uv1_2))), 0.0, 1.0)\n  )) * (-0.08 + tmpvar_3)));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((texture (sampler_rand00, (0.4 + \n    (0.6 * ret1_1.xy)\n  )) * dot (ret1_1, vec3(0.32, 0.49, 0.29))) * 3.0).xyz;\n  ret = tmpvar_7.xyz;\n}\n\n"}