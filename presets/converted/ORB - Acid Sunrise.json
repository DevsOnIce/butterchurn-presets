{"baseVals":{"rating":0,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"solarize":1,"wave_a":0.001,"warp":0.01,"wave_r":0,"wave_g":0.4,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"rad":2.66718,"tex_zoom":0.37742,"g":1,"b":1,"a":0.8,"g2":0,"a2":0.4},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.tex_ang=-0.01;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"a":0.8,"a2":0.6,"border_r":0,"border_g":0,"border_b":0},"init_eqs_str":"m.q5 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r2=((0.6*0.4)*Math.sin((m.q3*0.178))); m.g2=((0.6*0.4)*Math.sin((m.q3*0.138))); m.b2=((0.6*0.4)*Math.sin((m.q3*0.118))); m.r=((0.6*0.4)*Math.sin((m.q3*0.158))); m.g=((0.6*0.4)*Math.sin((m.q3*0.258))); m.b=((0.6*0.4)*Math.sin((m.q3*0.41))); m.x=(0.5+(0.01*Math.sin(m.q3))); m.y=(0.5+((0.01*Math.cos(m.q3))*m.q5));"},{"baseVals":{"enabled":1,"sides":100,"a":0.8,"a2":0.6},"init_eqs_str":"m.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r2=((0.6*0.4)*Math.sin((m.q3*0.258))); m.g2=((0.6*0.4)*Math.sin((m.q3*0.158))); m.b2=((0.6*0.4)*Math.sin((m.q3*0.108))); m.r=((0.6*0.4)*Math.sin((m.q3*0.158))); m.g=((0.6*0.4)*Math.sin((m.q3*0.258))); m.b=((0.6*0.4)*Math.sin((m.q3*0.11)));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.basstime = 0;\nm.q2 = 0;\nm.q1 = 0;\nm.othertime = 0;\nm.q3 = 0;\nm.basstime=(rand(1000)*0.1); m.othertime=(rand(1000)*0.1);","frame_eqs_str":"m.basstime=(m.basstime+(m.bass*0.0003)); m.q2=m.basstime; m.q1=(m.basstime*0.00001); m.othertime=(m.othertime+(m.bass*0.03)); m.q3=m.othertime;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1; m.rot=0;","warp":"shader_body\n{\n  float final_noise_1;\n  vec3 tmpvar_2;\n  tmpvar_2.xy = uv;\n  tmpvar_2.z = (q2 * 10.0);\n  final_noise_1 = ((texture (sampler_noisevol_lq, tmpvar_2) * 2.0) - 1.0).x;\n  final_noise_1 = (final_noise_1 + (0.5 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 2.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.25 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 4.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = (final_noise_1 + (0.125 * (\n    (texture (sampler_noisevol_lq, (tmpvar_2 * 8.0)) * 2.0)\n   - 1.0)).x);\n  final_noise_1 = ((final_noise_1 + 1.0) * 0.5);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = texture (sampler_main, (((\n    (uv - 0.5)\n   * 1.5) * final_noise_1) + 0.5)).xyz;\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 2.0);\n  ret_1 = (1.0 - (1.0 - (\n    (ret_1 * (1.0 - ret_1))\n   * 4.0)));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}