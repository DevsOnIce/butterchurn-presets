{"baseVals":{"rating":0,"gammaadj":1,"decay":0.5,"echo_zoom":1,"echo_alpha":0,"echo_orient":3,"wave_mode":0,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":1,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.009,"wave_scale":2.136,"wave_smoothing":0.9,"wave_mystery":0,"modwavealphastart":1.6,"modwavealphaend":1.6,"warpanimspeed":1,"warpscale":0.107,"zoomexp":1.0018,"fshader":0,"zoom":0.96098,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.01,"sx":1,"sy":1,"wave_r":0,"wave_g":0.04,"wave_b":0,"wave_x":0.5,"wave_y":0.5,"ob_size":0,"ob_r":1,"ob_g":0,"ob_b":0,"ob_a":1,"ib_size":0,"ib_r":1,"ib_g":1,"ib_b":1,"ib_a":1,"mv_x":64,"mv_y":48,"mv_dx":0,"mv_dy":0,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.86644,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0.5,"g":0,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":5,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.5,"y":0.5,"rad":0.986,"ang":0,"tex_ang":3.14159,"tex_zoom":0.99979,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=Math.sin(div(m.time,65));"},{"baseVals":{"enabled":0,"sides":100,"additive":0,"thickoutline":0,"textured":1,"num_inst":1,"x":0.9,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":1,"b":1,"a":1,"r2":1,"g2":1,"b2":1,"a2":1,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=((Math.sin(m.time)*0.4)+0.5);"},{"baseVals":{"enabled":0,"sides":36,"additive":1,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.81623,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0,"g":0.04,"b":0,"a":1,"r2":0,"g2":0,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=(1-m.q1); m.y=m.q2; m.x=(0.5+((m.x-0.5)*0.25)); m.y=(0.5+((m.y-0.5)*0.25));"}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":1,"additive":0,"scaling":2.0231,"smoothing":0,"r":0,"g":1,"b":0,"a":1},"init_eqs_str":"m.tt3 = 0;\nm.tt2 = 0;\nm.tt1 = 0;\nm.d = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['tt3','tt2','tt1','d'];","frame_eqs_str":"","point_eqs_str":"m.tt3=((m.tt3*0.6)+(m.value1*1)); m.tt2=((m.tt2*0.7)+(m.tt3*0.2)); m.tt1=((m.tt1*0.8)+(m.tt2*0.1)); m.d=((m.d*0.9)+(m.tt1*0.2)); m.y=(0.5+((m.d*m.sample)*(1-m.sample))); m.x=(-0.05+(m.sample*1.1));"},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.d = 0;\nm.xx = 0;\nm.w = 0;\nm.ww = 0;\nm.vt = 0;\nm.xh = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.vb = 0;\nm.q9 = 0;\nm.v = 0;\nm.ax = 0;\nm.mm = 0;\nm.tt = 0;\nm.yh = 0;\nm.wv = 0;\nm.vx = 0;\nm.pi = 0;\nm.vy = 0;\nm.ry = 0;\nm.q4 = 0;\nm.ddy = 0;\nm.rx = 0;\nm.ay = 0;\nm.t = 0;\nm.wh = 0;\nm.bb = 0;\nm.ddx = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.m = 0;\nm.vvm = 0;\nm.yy = 0;\nm.vvb = 0;\nm.q7 = 0;\nm.vm = 0;\nm.vvt = 0;\nm.q8 = 0;\nm.x1=0; m.y1=0;","frame_eqs_str":"m.vb=((m.vb*0.95)+(((1-m.vb)*pow(m.bass, 2))*0.02)); m.vvb=((m.vvb*0.95)+(((1-m.vvb)*m.vb)*0.01)); m.vm=((m.vm*0.95)+(((1-m.vm)*pow(m.mid, 2))*0.02)); m.vvm=((m.vvm*0.95)+(((1-m.vvm)*m.vm)*0.01)); m.vt=((m.vt*0.95)+(((1-m.vt)*pow(m.treb, 2))*0.02)); m.vvt=((m.vvt*0.95)+(((1-m.vvt)*m.vt)*0.01)); m.vvb=Math.min(1, Math.max(0, m.vvb)); m.vvm=Math.min(1, Math.max(0, m.vvm)); m.vvt=Math.min(1, Math.max(0, m.vvt)); m.q1=(m.vvb*2); m.q2=(m.vvm*2); m.q3=(m.vvt*2); m.v=2; m.bb=(m.bb-(m.vvb*m.v)); m.mm=(m.mm-(m.vvm*m.v)); m.tt=(m.tt-(m.vvt*m.v)); m.q4=m.bb; m.q5=m.mm; m.q6=m.tt; m.q7=1.81; m.q8=(0.448+((m.vm-m.vt)*0.3)); m.q9=(0.701+((m.vb-m.vm)*0.3));\n\t\tm.rkeys = ['ax','ay'];","pixel_eqs_str":"m.pi=Math.asin(1); m.x=(m.x-0.5); m.y=(m.y-0.5); m.d=((((m.q4-m.q6)*0.4)+(((m.rad-0.3)*(m.q1-m.q3))*2))+m.pi); m.xx=((Math.sin(m.d)*m.x)-(Math.cos(m.d)*m.y)); m.yy=((Math.cos(m.d)*m.x)+(Math.sin(m.d)*m.y)); m.x=m.xx; m.y=m.yy; m.t=(m.time*0); m.xh=m.x; m.yh=m.y; m.w=((m.q4-m.q6)*0.8); m.m=(-1+(m.q2*2)); m.wv=(m.pi-(Math.sin(m.w)*m.m)); m.wh=(m.pi-(Math.cos(m.w)*m.m)); m.d=(6*sqrt(m.q2)); m.ww=1.1; m.ddx=Math.sin((((2*m.pi)-m.wv)-(m.x*m.ww))); m.ddy=Math.sin((((2*m.pi)-m.wh)-(m.y*m.ww))); m.rx=((above((m.ddx*m.ddy), 0)!=0)?(div(Math.sin(m.wv),m.ddx)):(0)); m.ry=((above((m.ddy*m.ddy), 0)!=0)?(div(Math.sin(m.wh),m.ddy)):(0)); m.v=div((((-m.q2*0.04)*div(m.d,m.ww))*1728),(m.meshx*m.meshy)); m.ax=(m.ax+(Math.sin(m.w)*m.v)); m.ay=(m.ay+(Math.cos(m.w)*m.v)); m.vx=((equal((m.rx*m.ry), 0)!=0)?(0):(m.ax)); m.vy=((equal((m.rx*m.ry), 0)!=0)?(0):(m.ay)); m.dx=((((-m.xh*m.rx)*m.ry)*m.d)+(m.vx*0.001)); m.dy=((((-m.yh*m.rx)*m.ry)*m.d)+(m.vy*0.001));","warp":"shader_body\n{\n  vec2 uv_z_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (1.0 - abs((\n    (fract((uv * 0.5)) * 2.0)\n   - 1.0)));\n  ret_2.x = texture (sampler_fc_main, tmpvar_3).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (texsize.zw * 6.0);\n  vec2 tmpvar_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv_orig - 0.5);\n  tmpvar_5 = ((tmpvar_6 * 0.996) + 0.5);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(1.0, 0.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (tmpvar_5 + (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (tmpvar_5 - (vec2(0.0, 1.0) * tmpvar_4))\n  ).xyz * scale1) + bias1)).z;\n  uv_z_1 = (tmpvar_5 - ((tmpvar_7 * texsize.zw) * 2.0));\n  ret_2.z = max (((\n    (texture (sampler_fc_main, tmpvar_3).x - 0.5)\n   * 3.0) * clamp (\n    (1.0 - (sqrt(dot (tmpvar_6, tmpvar_6)) * 3.2))\n  , 0.0, 1.0)), texture (sampler_fc_main, uv_z_1).z);\n  ret_2.z = (ret_2.z + ((texture (sampler_fc_main, uv_z_1).z - \n    ((texture (sampler_blur1, clamp (uv_z_1, 0.0, 1.0)).xyz * scale1) + bias1)\n  .z) * 0.02));\n  ret_2.y = (max (texture (sampler_fc_main, mix (uv, uv_orig, vec2(1.0004, 1.0004))).y, texture (sampler_fc_main, uv_orig).z) - 0.008);\n  ret_2.z = (ret_2.z * (1.0 + (ret_2.y * 0.024)));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_2;\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"float xlat_mutabled;\nvec3 xlat_mutabledx;\nvec3 xlat_mutabledy;\nshader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  xlat_mutabled = (texsize.zw * 2.0).x;\n  xlat_mutabledx = ((texture (sampler_main, (uv + \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz - texture (sampler_main, (uv - \n    (vec2(1.0, 0.0) * xlat_mutabled)\n  )).xyz) * 8.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((xlat_mutabledx.x + 0.5) * (\n    (texture (sampler_blur3, uv).xyz * scale3)\n   + bias3).x) * vec3(1.0, 0.8, -0.4));\n  xlat_mutabledx = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  xlat_mutabledy = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * xlat_mutabled))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = xlat_mutabledx.z;\n  tmpvar_4.y = xlat_mutabledy.z;\n  vec2 tmpvar_5;\n  tmpvar_5.x = xlat_mutabledx.x;\n  tmpvar_5.y = xlat_mutabledy.x;\n  uv_1 = ((uv - (\n    (tmpvar_4 * texsize.zw)\n   * 128.0)) + tmpvar_5);\n  ret_2 = (((1.0 - \n    (abs(((\n      (texture (sampler_blur1, (uv_1 + (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1) - (\n      (texture (sampler_blur1, (uv_1 - (vec2(1.0, 0.0) * xlat_mutabled))).xyz * scale1)\n     + bias1))).z * 4.0)\n  ) * texture (sampler_main, uv_1).z) * vec3(0.5, 0.5, 1.0));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (ret_2, vec3(2.0, 2.0, 2.0), (tmpvar_3 * 0.5));\n  ret_2 = tmpvar_6;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = tmpvar_6;\n  ret = tmpvar_7.xyz;\n}\n\n"}