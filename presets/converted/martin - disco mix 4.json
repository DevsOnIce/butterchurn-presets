{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":2,"modwavealphabyvolume":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":20.944651,"wave_smoothing":0,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0.015,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"textured":1,"y":0.47,"rad":0.24057,"tex_zoom":0.14057,"g":0.3,"b":0.5,"g2":0,"b2":0.3,"a2":1,"border_b":0,"border_a":0},"init_eqs_str":"m.q24 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.x=0.5; m.y=0.5; m.a=m.q24; m.a2=m.q24;"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"thickoutline":1,"rad":0.05134,"tex_zoom":0.12288,"r":0.3,"g":0.2,"b":0.2,"a":0.7,"g2":0,"border_r":0,"border_g":0.5,"border_b":0.5,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.r=(0.5+(0.3*Math.sin(m.time))); m.g=(0.5+(0.3*Math.sin(div(m.time,1.5)))); m.b=(0.5+(0.3*Math.sin(div(m.time,3.7)))); m.r2=0; m.b2=0; m.g2=0; m.a=0.05; m.a2=0;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":100,"thick":1,"scaling":0.045052,"smoothing":0.1,"a":0.6},"init_eqs_str":"m.dx = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dy = 0;\nm.t2 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.t2=(0.45+div(rand(10),100));","point_eqs_str":"m.k1=bnot(mod(((m.sample*100)+m.time),2)); m.dy=(((0.015*above(Math.sin((m.sample*11)), 0))+(0.008*above(Math.sin((m.time+(m.sample*74))), 0)))+(0.008*above(Math.sin((m.time+(m.sample*128))), 0))); m.dx=((0.01*above(Math.sin((m.sample*27)), 0))+(0.01*above(Math.sin((m.time+(m.sample*134))), 0))); m.x=(((0.2*(m.sample-0.5))+0.5)+m.dx); m.y=(m.t2+m.dy); m.a=((m.q24*m.k1)*bnot(mod(m.q27,4))); m.r=0.6; m.g=0; m.b=0.6;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.dec_xlow = 0;\nm.index2 = 0;\nm.speed_ = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.q9 = 0;\nm.movx = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q10 = 0;\nm.tilt_ = 0;\nm.q4 = 0;\nm.peakx = 0;\nm.dir__ = 0;\nm.dir = 0;\nm.dir_ = 0;\nm.movy = 0;\nm.q26 = 0;\nm.maxp = 0;\nm.p2 = 0;\nm.avg = 0;\nm.trig = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.tilt = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.speed = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q7 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.xk=0;","frame_eqs_str":"m.dec_med=pow(0.8, div(30,m.fps)); m.dec_slow=pow(0.95, div(30,m.fps)); m.dec_xlow=pow(0.995, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),16); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass_att+m.mid_att)+m.treb_att); m.q27=(m.index+1); m.peakx=above(m.q22, (1.5*m.maxp)); m.maxp=Math.max(m.maxp, m.q22); m.maxp=(m.maxp*m.dec_xlow); m.k1=(m.is_beat*equal(mod(m.index,3), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.trig=(m.q24*bnot(mod(m.index,4))); m.dir=((m.dir+div(((m.trig*m.q26)*(div(rand(100),100)-0.5)),2))+m.peakx); m.dir_=((m.dir_*m.dec_slow)+(m.dir*(1-m.dec_slow))); m.dir__=((m.dir__*m.dec_slow)+(m.dir_*(1-m.dec_slow))); m.q5=Math.cos(m.dir__); m.q6=Math.sin(m.dir__); m.speed=((m.speed*bnot(m.trig))+div(((m.trig*m.q26)*5),m.fps)); m.speed_=((m.speed_*m.dec_slow)+(m.speed*(1-m.dec_slow))); m.movx=(m.movx+(m.speed_*m.q6)); m.movy=(m.movy+(m.speed_*m.q5)); m.q7=m.movx; m.q8=m.movy; m.tilt=(m.dir-m.dir__); m.tilt_=((m.dec_slow*m.tilt_)+((1-m.dec_slow)*m.tilt)); m.monitor=m.maxp; m.q9=Math.cos((m.tilt_*m.speed_)); m.q10=Math.sin((m.tilt_*m.speed_)); m.q12=m.time;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=1.3;","warp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv6_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv - 0.5) * aspect.xy);\n  float tmpvar_4;\n  tmpvar_4 = ((2.0 * sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )) + (rand_frame * 64.0)).x;\n  uv_1 = (uv + (clamp (\n    ((sin(tmpvar_4) / cos(tmpvar_4)) * normalize(tmpvar_3))\n  , vec2(-2.0, -2.0), vec2(2.0, 2.0)) / 20.0));\n  uv6_2 = (0.4 * sin((tmpvar_3 * 22.0)));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = (((q24 * \n    (((texture (sampler_main, uv_1).xyz - (\n      ((texture (sampler_blur1, fract(uv_1)).xyz * scale1) + bias1)\n     * 0.04)) + (0.15 * (vec3(\n      (0.1 / sqrt(dot (uv6_2, uv6_2)))\n    ) * roam_cos.xyz))) - 0.02)\n  ) * 0.98) + ((1.0 - q24) * texture (sampler_main, uv_orig).xyz));\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"vec3 xlat_mutableret1;\nvec2 xlat_mutablers;\nshader_body\n{\n  vec2 uv1_1;\n  mat2 tmpvar_2;\n  tmpvar_2[uint(0)].x = q9;\n  tmpvar_2[uint(0)].y = -(q10);\n  tmpvar_2[1u].x = q10;\n  tmpvar_2[1u].y = q9;\n  uv1_1 = (((uv_orig - 0.5) * aspect.xy) * tmpvar_2);\n  uv1_1 = (uv1_1 * aspect.yx);\n  float tmpvar_3;\n  tmpvar_3 = (3.0 / abs(uv1_1.y));\n  xlat_mutablers.x = (uv1_1.x * tmpvar_3);\n  xlat_mutablers.y = (tmpvar_3 / 2.0);\n  mat2 tmpvar_4;\n  tmpvar_4[uint(0)].x = q5;\n  tmpvar_4[uint(0)].y = -(q6);\n  tmpvar_4[1u].x = q6;\n  tmpvar_4[1u].y = q5;\n  xlat_mutablers = (tmpvar_4 * xlat_mutablers);\n  vec2 tmpvar_5;\n  tmpvar_5.x = q7;\n  tmpvar_5.y = q8;\n  xlat_mutablers = (xlat_mutablers + tmpvar_5);\n  xlat_mutableret1 = ((texture (sampler_blur1, fract(\n    (xlat_mutablers / 12.0)\n  )).xyz * scale1) + bias1);\n  vec2 tmpvar_6;\n  tmpvar_6.y = 0.0;\n  tmpvar_6.x = q5;\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = (((xlat_mutableret1 * 32.0) / tmpvar_3) + ((\n    ((q22 * sqrt(tmpvar_3)) / 4.0)\n   * \n    sin(((uv1_1 - q12) * q27))\n  .x) * texture (sampler_main, (\n    (((4.0 * xlat_mutableret1) / tmpvar_3).xy + ((uv1_1 / 2.0) / (0.5 + abs(uv1_1.y))))\n   + tmpvar_6)).xyz));\n  ret = tmpvar_7.xyz;\n}\n\n"}