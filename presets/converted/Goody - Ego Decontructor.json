{"baseVals":{"rating":0,"gammaadj":1.42,"decay":1,"echo_zoom":1.007,"echo_orient":3,"wave_mode":3,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.998,"wave_scale":2.155,"wave_smoothing":0.9,"wave_mystery":-1,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpscale":1.331,"zoom":1.0095,"warp":0.01,"ob_r":0.01,"ob_a":0.5,"ib_size":0.015,"ib_a":0.5,"mv_x":64,"mv_y":1.248,"mv_l":5,"mv_b":0,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.24483},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(m.x+(0.2*Math.sin((m.time*0.411)))); m.y=(m.y+(0.2*Math.cos((m.time*0.423))));"},{"baseVals":{"enabled":1,"sides":10,"additive":1,"rad":0.24483},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(m.x-(0.2*Math.sin((m.time*0.411)))); m.y=(m.y-(0.2*Math.cos((m.time*0.423))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.bass_residual = 0;\nm.old_treb_flop = 0;\nm.redsine = 0;\nm.bass_flop = 0;\nm.bluesine = 0;\nm.q6 = 0;\nm.greenif = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.treb_flop = 0;\nm.q9 = 0;\nm.bass_thresh = 0;\nm.old_bass_flop = 0;\nm.treb_thresh = 0;\nm.pulse = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.bass_changed = 0;\nm.mid_thresh = 0;\nm.q4 = 0;\nm.mid_changed = 0;\nm.entropy = 0;\nm.redif = 0;\nm.blueif = 0;\nm.old_mid_flop = 0;\nm.mid_residual = 0;\nm.b = 0;\nm.r = 0;\nm.xv = 0;\nm.g = 0;\nm.treb_residual = 0;\nm.vol = 0;\nm.chaos = 0;\nm.greensine = 0;\nm.mid_flop = 0;\nm.q2 = 0;\nm.treb_changed = 0;\nm.q3 = 0;\nm.q7 = 0;\nm.yv = 0;\nm.q8 = 0;","frame_eqs_str":"m.old_bass_flop=m.bass_flop; m.old_treb_flop=m.treb_flop; m.old_mid_flop=m.mid_flop; m.chaos=(0.9+(0.1*Math.sin(m.pulse))); m.entropy=((equal(m.pulse, -20)!=0)?(((((1+m.bass_flop)+m.treb_flop)+m.mid_flop)+rand(2))):(m.entropy)); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*m.chaos)+1.3))); m.bass_flop=Math.abs((m.bass_flop-equal(m.bass_thresh, 2))); m.treb_thresh=((above(m.treb_att, m.treb_thresh)*2)+((1-above(m.treb_att, m.treb_thresh))*(((m.treb_thresh-1.3)*m.chaos)+1.3))); m.treb_flop=Math.abs((m.treb_flop-equal(m.treb_thresh, 2))); m.mid_thresh=((above(m.mid_att, m.mid_thresh)*2)+((1-above(m.mid_att, m.mid_thresh))*(((m.mid_thresh-1.3)*m.chaos)+1.3))); m.mid_flop=Math.abs((m.mid_flop-equal(m.mid_thresh, 2))); m.bass_changed=bnot(equal(m.old_bass_flop, m.bass_flop)); m.mid_changed=bnot(equal(m.old_mid_flop, m.mid_flop)); m.treb_changed=bnot(equal(m.old_treb_flop, m.treb_flop)); m.bass_residual=((m.bass_changed*Math.sin(((m.pulse*0.1)*m.entropy)))+(bnot(m.bass_changed)*m.bass_residual)); m.treb_residual=((m.treb_changed*Math.sin(((m.pulse*0.1)*m.entropy)))+(bnot(m.treb_changed)*m.treb_residual)); m.mid_residual=((m.mid_changed*Math.sin(((m.pulse*0.1)*m.entropy)))+(bnot(m.mid_changed)*m.mid_residual)); m.pulse=((above(Math.abs(m.pulse), 20)!=0)?(-20):((m.pulse+(((m.bass_thresh+m.mid_thresh)+m.treb_thresh)*0.032)))); m.q1=m.mid_residual; m.q2=m.bass_residual; m.q3=m.treb_residual; m.q4=Math.sin(m.pulse); m.q5=Math.cos((div(m.pulse,2)+m.q1)); m.q6=Math.sin(((m.q3*m.q1)+(m.q7*m.q2))); m.q7=(((((above(m.q1, 0)+above(m.q2, 0))+above(m.q3, 0))+(above(m.q3, 0)*m.treb_flop))+(above(m.q2, 0)*m.bass_flop))+(above(m.q1, 0)*m.mid_flop)); m.q8=m.entropy; m.vol=(((m.bass+m.mid)+m.treb_att)*0.3333); m.redsine=(0.5+((0.15*m.bass)*Math.sin((m.time*3)))); m.greensine=(0.5+((0.15*m.mid)*Math.sin((m.time*2)))); m.bluesine=(0.5+((0.15*m.treb)*Math.sin(m.time))); m.redif=((above(m.bass, 1.2)!=0)?(m.redsine):(((above(m.redif, 0.95)!=0)?(0.0):((m.redif*0.95))))); m.greenif=((above(m.mid, 1.2)!=0)?(m.greensine):(((above(m.greenif, 0.95)!=0)?(0.0):((m.greenif*0.95))))); m.blueif=((above(m.treb, 1.2)!=0)?(m.bluesine):(((above(m.blueif, 0.95)!=0)?(0.0):((m.blueif*0.95))))); m.r=m.redif; m.g=m.greenif; m.b=m.blueif; m.q9=m.r; m.q10=m.g; m.q11=m.b; m.wave_r=(m.wave_r*Math.sin((m.redif*Math.cos((m.b+m.g))))); m.wave_g=(m.wave_g*Math.sin((m.greenif*Math.cos((m.r+m.b))))); m.wave_b=(m.wave_b*Math.sin((m.blueif*Math.cos((m.r+m.g))))); m.ib_r=m.r; m.ib_g=m.g; m.ib_b=m.b; m.ob_r=(m.wave_r*m.redif); m.ob_g=(m.wave_g*m.greenif); m.ob_b=(m.wave_b*m.blueif);\n\t\tm.rkeys = ['sx','sy','dx','dy'];","pixel_eqs_str":"m.xv=((Math.sin((m.time*0.333))*m.x)-(Math.cos((m.time*0.667))*m.x)); m.yv=((Math.cos((m.time*0.233))*m.y)+(Math.sin((m.time*0.567))*m.y)); m.x=m.xv; m.y=m.yv; m.sx=(m.sx+(0.075*Math.sin(((m.x*3)+(m.q7*m.x))))); m.sy=(m.sy+(0.075*Math.sin(((m.y*3.1)+(m.q7*m.y))))); m.dx=(m.dx+(0.005*Math.cos((((m.y*20)+(0.1*Math.cos((m.time*0.11))))+(m.q2*m.q6))))); m.dy=(m.dy+(0.005*Math.sin((((m.x*20)+(0.1*Math.sin((m.time*0.09))))+(m.q3*m.q6)))));","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uvv_1;\n  vec2 uvm_2;\n  uvm_2.x = ((0.5 * texture (sampler_noise_hq, uv.xx)) + (0.5 * texture (sampler_main, uv.xx))).x;\n  uvm_2.y = ((0.5 * texture (sampler_main, uv.yy)) + (0.5 * texture (sampler_noise_hq, uv.yy))).x;\n  uvv_1 = (uv * uvm_2);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, uv).xyz * scale1) + bias1) - ((texture (sampler_blur3, texture (sampler_noise_hq, \n    ((texture (sampler_blur3, uvv_1).xyz * scale3) + bias3)\n  .xy).xy).xyz * scale3) + bias3));\n  vec2 tmpvar_4;\n  tmpvar_4 = fract((tmpvar_3.xy + uvm_2));\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ((2.0 * tmpvar_3) * texture (sampler_main, (tmpvar_4 * (uvv_1 - tmpvar_4))).xyz);\n  ret = tmpvar_5.xyz;\n}\n\n"}