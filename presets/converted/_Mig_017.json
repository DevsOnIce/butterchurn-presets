{"baseVals":{"rating":0,"decay":0.973,"echo_zoom":1.047463,"wave_mode":1,"additivewave":1,"wave_dots":1,"wrap":0,"wave_a":3.299999,"wave_scale":1.694,"wave_smoothing":0.9,"warpscale":2.853,"zoomexp":2.630064,"zoom":1.031,"warp":0,"wave_r":0.5,"wave_g":0.5,"wave_b":0.8,"ob_size":0,"ob_a":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;\nm.q5_residual = 0;\nm.bass_thresh = 0;\nm.oldq8 = 0;\nm.q6_residual = 0;\nm.q8 = 0;","frame_eqs_str":"m.wave_r=(m.wave_r+(0.400*((0.60*Math.sin((0.933*m.time)))+(0.40*Math.sin((1.045*m.time)))))); m.wave_g=(m.wave_g+(0.100*((0.60*Math.sin((0.900*m.time)))+(0.40*Math.sin((0.956*m.time)))))); m.wave_b=(m.wave_b+(0.100*((0.60*Math.sin((0.910*m.time)))+(0.40*Math.sin((0.920*m.time)))))); m.mv_r=m.wave_r; m.mv_b=m.wave_b; m.mv_g=m.wave_g; m.q8=(m.oldq8+(0.0003*div(pow(((((((1+(1.2*m.bass))+(0.4*m.bass_att))+(0.1*m.treb))+(0.1*m.treb_att))+(0.1*m.mid))+(0.1*m.mid_att)), 6),m.fps))); m.oldq8=m.q8; m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.96)+1.3))); m.q5_residual=(((equal(m.bass_thresh, 2)*0.0064)*Math.sin((m.q8*5)))+((1-equal(m.bass_thresh, 2))*m.q5_residual)); m.q6_residual=(((equal(m.bass_thresh, 2)*0.0048)*Math.sin((m.q8*6)))+((1-equal(m.bass_thresh, 2))*m.q6_residual)); m.dx=m.q5_residual; m.dy=m.q6_residual; m.q1=(0.03*div(pow(((((((1+(1.2*m.bass))+(0.4*m.bass_att))+(0.1*m.treb))+(0.1*m.treb_att))+(0.1*m.mid))+(0.1*m.mid_att)), 6),m.fps)); m.monitor=m.q1; m.mv_a=(m.bass-1.2);\n\t\tm.rkeys = [];","pixel_eqs_str":"m.zoom=((0.9+(0.1*m.q1))+(m.rad*0.1)); m.zoomexp=(2*m.zoom);","warp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_main, uv);\n  ret_1 = (tmpvar_2.xyz + ((tmpvar_2.xyz - \n    ((texture (sampler_blur1, uv).xyz * scale1) + bias1)\n  ) * 0.3));\n  ret_1 = (ret_1 * 0.9);\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)).xyz - 0.5)\n   / 256.0) * 112.0));\n  vec3 tmpvar_3;\n  tmpvar_3 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  ret_1 = tmpvar_3;\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = tmpvar_3;\n  ret = tmpvar_4.xyz;\n}\n\n","comp":""}