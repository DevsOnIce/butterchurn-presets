{"baseVals":{"rating":3,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":7,"additivewave":1,"wave_brighten":0,"wrap":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"textured":1,"rad":1.46815,"tex_zoom":0.63904,"g":1,"b":1,"a":0.5,"r2":1,"b2":1,"a2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=(m.time*0.1); m.sides=Math.floor(Math.abs((Math.sin((m.time*0.5))*7)));"},{"baseVals":{"enabled":1,"sides":3,"additive":1,"thickoutline":1,"rad":0.02743,"a":0.05,"r2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=(m.time*0.1); m.r=(0.7+(Math.sin(m.time)*0.3)); m.g=(0.7+(Math.cos(m.time)*0.3)); m.b=(0.7+(Math.sin((m.time+0.12))*0.3)); m.rad=(m.rad+((m.treb_att*m.bass_att)*0.5)); m.x=(0.5+(Math.sin(m.time)*0.5));"},{"baseVals":{"enabled":1,"sides":5,"additive":1,"rad":0.02508,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=(m.time*0.25); m.g=(0.7+(Math.sin(m.time)*0.3)); m.b=(0.7+(Math.cos(m.time)*0.3)); m.r=(0.7+(Math.sin((m.time+0.12))*0.3)); m.r2=(0.7+(Math.sin(m.time)*0.3)); m.g2=(0.7+(Math.cos(m.time)*0.3)); m.b2=(0.7+(Math.sin((m.time+0.12))*0.3)); m.rad=(m.rad+((m.treb_att*m.bass_att)*0.5)); m.y=(0.5+(Math.sin(m.time)*0.25));"},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"m.d = 0;\nm.wx = 0;\nm.branch = 0;\nm.sc = 0;\nm.wa = 0;\nm.wy = 0;\nm.wainc = 0;\n\n\t\t\tm.rkeys = ['d','wx','sc','wa','wy'];","frame_eqs_str":"","point_eqs_str":"m.branch=Math.floor(rand(2)); m.wx=((equal(m.sc, 0)!=0)?(0.5):(m.wx)); m.wy=((equal(m.sc, 0)!=0)?(0):(m.wy)); m.wx=((equal(m.sc, 1)!=0)?(0.5):(m.wx)); m.wy=((equal(m.sc, 1)!=0)?(0.1):(m.wy)); m.d=((below(m.sc, 2)!=0)?(0.3):((0.7*m.d))); m.wainc=((equal(m.branch, 1)!=0)?((0.2+Math.sin(m.time))):(-0.2)); m.wa=((below(m.sc, 2)!=0)?((3.1415927*0.5)):((m.wa+m.wainc))); m.wx=((above(m.sc, 2)!=0)?((m.wx+(Math.cos(m.wa)*m.d))):(m.wx)); m.wy=((above(m.sc, 2)!=0)?((m.wy+(Math.sin(m.wa)*m.d))):(m.wy)); m.sc=((equal(m.sc, 11)!=0)?(0):((m.sc+1))); m.a=((below(m.sc, 2)!=0)?(0):(0.1)); m.x=m.wx; m.y=m.wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"m.d = 0;\nm.wx = 0;\nm.branch = 0;\nm.sc = 0;\nm.wa = 0;\nm.wy = 0;\nm.wainc = 0;\n\n\t\t\tm.rkeys = ['d','wx','sc','wa','wy'];","frame_eqs_str":"","point_eqs_str":"m.branch=Math.floor(rand(2)); m.wx=((equal(m.sc, 0)!=0)?(0.5):(m.wx)); m.wy=((equal(m.sc, 0)!=0)?(1):(m.wy)); m.wx=((equal(m.sc, 1)!=0)?(0.5):(m.wx)); m.wy=((equal(m.sc, 1)!=0)?(0.9):(m.wy)); m.d=((below(m.sc, 2)!=0)?(0.3):((0.7*m.d))); m.wainc=((equal(m.branch, 1)!=0)?((0.2+Math.sin(m.time))):(-0.2)); m.wa=((below(m.sc, 2)!=0)?((3.1415927*1.5)):((m.wa+m.wainc))); m.wx=((above(m.sc, 2)!=0)?((m.wx+(Math.cos(m.wa)*m.d))):(m.wx)); m.wy=((above(m.sc, 2)!=0)?((m.wy+(Math.sin(m.wa)*m.d))):(m.wy)); m.sc=((equal(m.sc, 11)!=0)?(0):((m.sc+1))); m.a=((below(m.sc, 2)!=0)?(0):(0.1)); m.x=m.wx; m.y=m.wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"m.d = 0;\nm.wx = 0;\nm.branch = 0;\nm.sc = 0;\nm.wa = 0;\nm.wy = 0;\nm.wainc = 0;\n\n\t\t\tm.rkeys = ['d','wx','sc','wa','wy'];","frame_eqs_str":"","point_eqs_str":"m.branch=Math.floor(rand(2)); m.wx=((equal(m.sc, 0)!=0)?(0):(m.wx)); m.wy=((equal(m.sc, 0)!=0)?(0.5):(m.wy)); m.wx=((equal(m.sc, 1)!=0)?(0.1):(m.wx)); m.wy=((equal(m.sc, 1)!=0)?(0.5):(m.wy)); m.d=((below(m.sc, 2)!=0)?(0.3):((0.7*m.d))); m.wainc=((equal(m.branch, 1)!=0)?((0.25+Math.cos(m.time))):(-0.25)); m.wa=((below(m.sc, 2)!=0)?((3.1415927*2)):((m.wa+m.wainc))); m.wx=((above(m.sc, 2)!=0)?((m.wx+(Math.cos(m.wa)*m.d))):(m.wx)); m.wy=((above(m.sc, 2)!=0)?((m.wy+(Math.sin(m.wa)*m.d))):(m.wy)); m.sc=((equal(m.sc, 11)!=0)?(0):((m.sc+1))); m.a=((below(m.sc, 2)!=0)?(0):(0.1)); m.x=m.wx; m.y=m.wy;"},{"baseVals":{"enabled":1,"usedots":1,"additive":1},"init_eqs_str":"m.d = 0;\nm.wx = 0;\nm.branch = 0;\nm.sc = 0;\nm.wa = 0;\nm.wy = 0;\nm.wainc = 0;\n\n\t\t\tm.rkeys = ['d','wx','sc','wa','wy'];","frame_eqs_str":"","point_eqs_str":"m.branch=Math.floor(rand(2)); m.wx=((equal(m.sc, 0)!=0)?(1):(m.wx)); m.wy=((equal(m.sc, 0)!=0)?(0.5):(m.wy)); m.wx=((equal(m.sc, 1)!=0)?(0.9):(m.wx)); m.wy=((equal(m.sc, 1)!=0)?(0.5):(m.wy)); m.d=((below(m.sc, 2)!=0)?(0.3):((0.7*m.d))); m.wainc=((equal(m.branch, 1)!=0)?((0.25+Math.cos(m.time))):(-0.25)); m.wa=((below(m.sc, 2)!=0)?((3.1415927*1)):((m.wa+m.wainc))); m.wx=((above(m.sc, 2)!=0)?((m.wx+(Math.cos(m.wa)*m.d))):(m.wx)); m.wy=((above(m.sc, 2)!=0)?((m.wy+(Math.sin(m.wa)*m.d))):(m.wy)); m.sc=((equal(m.sc, 11)!=0)?(0):((m.sc+1))); m.a=((below(m.sc, 2)!=0)?(0):(0.1)); m.x=m.wx; m.y=m.wy;"}],"init_eqs_str":"m.q1 = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.decay=0; m.dcsp=0;","frame_eqs_str":"m.decay=0.97; m.zoom=1.01; m.q1=m.time; m.q2=m.time; m.q3=m.time;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = texture (sampler_main, uv).xyz;\n  ret_1 = (ret_1 + ((ret_1 - \n    ((texture (sampler_blur3, uv).xyz * scale3) + bias3)\n  ) * 0.35));\n  ret_1 = (ret_1 - 0.004);\n  ret_1 = (ret_1 + ((texture (sampler_noise_lq, \n    (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + rand_frame.xy)\n  ).xyz - 0.5) * 0.18));\n  ret_1 = mix (ret_1, vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))), vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  float tmpvar_3;\n  tmpvar_3 = -(q8);\n  float tmpvar_4;\n  tmpvar_4 = (uv.x - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (uv.y - 0.5);\n  tmpvar_2.x = (((\n    (tmpvar_4 * cos((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * sin((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  tmpvar_2.y = (((\n    (-(tmpvar_4) * sin((tmpvar_3 * 0.29)))\n   + \n    (tmpvar_5 * cos((tmpvar_3 * 0.29)))\n  ) * 0.8) + 0.5);\n  ret_1 = (mix (texture (sampler_main, uv).xyz, texture (sampler_main, (\n    (0.5 - uv)\n   + 0.5)).xyz, vec3(0.5, 0.5, 0.5)) * 0.8);\n  ret_1 = (ret_1 + (texture (sampler_main, (tmpvar_2 * q9)).xyz * 0.2));\n  ret_1 = (1.0 - ((ret_1 * \n    (1.0 - ret_1)\n  ) * 4.0));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = ret_1;\n  ret = tmpvar_6.xyz;\n}\n\n"}