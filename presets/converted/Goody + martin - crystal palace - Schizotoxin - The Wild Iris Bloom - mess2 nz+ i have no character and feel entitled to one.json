{"baseVals":{"rating":5,"gammaadj":1.98,"decay":0.5,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":4,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":2.107,"wave_smoothing":0,"wave_mystery":-0.22,"modwavealphastart":0.81,"modwavealphaend":1.4,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.6,"wave_g":0.5,"wave_b":0,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"textured":1,"num_inst":5,"x":0.73,"rad":0.29466,"tex_zoom":2.79176,"r":0.7,"g":0.7,"b":1,"g2":0,"border_b":0,"border_a":0},"init_eqs_str":"m.ampl = 0;\nm.q25 = 0;\nm.q22 = 0;\nm.q15 = 0;\nm.y0 = 0;\nm.x0 = 0;\nm.k1 = 0;\nm.q16 = 0;\nm.trig = 0;\nm.q17 = 0;\n\n\t\t\tm.rkeys = ['y0','x0'];","frame_eqs_str":"m.trig=m.q25; m.a=(m.trig*Math.min((m.bass+m.treb), 1)); m.a2=(m.trig*0); m.x0=((m.x0*bnot(m.trig))+div((m.trig*Math.floor(rand(100))),100)); m.y0=((m.y0*bnot(m.trig))+div((m.trig*Math.floor(rand(100))),100)); m.k1=(div(m.instance,m.num_inst)*6.28); m.ampl=((0.1*m.q22)+0.1); m.x0=(0.5+((m.q15*m.ampl)*Math.cos((m.k1+m.q17)))); m.y0=(0.5+((m.q16*m.ampl)*Math.sin((m.k1+m.q17)))); m.tex_ang=div(Math.floor(rand(20)),3); m.rad=(0.1+div(Math.floor(rand(8)),12)); m.x=m.x0; m.y=m.y0; m.r=(0.7+(0.3*Math.sin(div(m.time,12)))); m.b=(0.7+(0.3*Math.sin(div(m.time,15)))); m.g=(0.7+(0.3*Math.sin(div(m.time,8)))); m.r2=m.r; m.b2=m.b; m.g2=m.g;"},{"baseVals":{"enabled":1,"sides":32,"num_inst":37,"rad":0.0364,"ang":0.81681,"tex_ang":0.37699,"tex_zoom":1.02841,"g":1,"b":1,"a":0.05,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.ampl = 0;\nm.g0 = 0;\nm.q15 = 0;\nm.trel = 0;\nm.yes = 0;\nm.k1 = 0;\nm.bright = 0;\nm.q16 = 0;\nm.r0 = 0;\nm.q17 = 0;\nm.q2 = 0;\nm.tmp = 0;\nm.b0 = 0;\nm.q8 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.k1=(div(m.instance,m.num_inst)*6.28); m.tmp=(div(m.q17,32)+(m.time*0.1)); m.trel=(m.tmp-Math.floor(m.tmp)); m.yes=above(Math.sin(div(m.time,9.5)), 0); m.bright=((((6*m.q2)*m.q2)*m.yes)+(0.1*Math.min(m.q8, 1))); m.border_a=m.bright; m.tmp=((2*Math.sin(div(m.time,12)))-1); m.a=(((((0.5*m.yes)*pow(2, (-18*Math.abs((m.k1-(6.28*m.trel))))))*above(m.tmp, 0))*m.tmp)*m.tmp); m.ampl=0.1; m.rad=(0.02+(0.0*Math.sin(((m.k1*4)+m.time)))); m.x=(0.5+((m.q15*m.ampl)*Math.cos((m.k1+m.q17)))); m.y=(0.5+((m.q16*m.ampl)*Math.sin((m.k1+m.q17)))); m.r0=Math.sin(div(m.time,7)); m.g0=Math.sin(div(m.time,5)); m.b0=Math.sin(div(m.time,9)); m.border_r=(0.8+(0.2*m.r0)); m.border_g=(0.8+(0.2*m.g0)); m.border_b=(0.8+(0.2*m.b0)); m.a2=0;"},{"baseVals":{"enabled":1,"sides":32,"additive":1,"thickoutline":1,"num_inst":33,"r":0,"g":0.5,"g2":0.5,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.trans = 0;\nm.q23 = 0;\nm.trans2 = 0;\nm.trans3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((div(Math.floor(rand(Math.floor(m.q1))),5)+m.instance)-m.instance); m.trans2=((div(Math.floor(rand(Math.floor(m.q1))),5)+m.instance)-m.instance); m.trans3=((div(Math.floor(rand(Math.floor(m.q1))),5)+m.instance)-m.instance); m.a=m.trans; m.x=(((((Math.sin(m.q23)+1.57)*0.3)+(((Math.floor(rand(15))*0.01)*m.bass_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.y=(((((Math.cos(m.q23)+1.57)*0.3)+(((Math.floor(rand(15))*0.01)*m.bass_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.rad=(((0.09+div(Math.floor(rand(Math.floor(m.q1))),15))+m.instance)-m.instance); m.r=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.g=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.b=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.r2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.g2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.b2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_r=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_g=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_b=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance);"},{"baseVals":{"enabled":1,"sides":32,"thickoutline":1,"textured":1,"num_inst":7,"r":0,"b":0.5,"g2":0,"b2":0.5,"border_a":0},"init_eqs_str":"m.q1 = 0;\nm.trans = 0;\nm.q23 = 0;\nm.trans2 = 0;\nm.trans3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.trans=((div(Math.floor(rand(Math.floor(m.q1))),15)+m.instance)-m.instance); m.trans2=((div(Math.floor(rand(Math.floor(m.q1))),15)+m.instance)-m.instance); m.trans3=((div(Math.floor(rand(Math.floor(m.q1))),15)+m.instance)-m.instance); m.a=m.trans; m.x=(((((Math.sin(m.q23)+1.57)*0.3)+(((Math.floor(rand(15))*0.01)*m.mid_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.y=(((((Math.cos(m.q23)+1.57)*0.3)+(((Math.floor(rand(15))*0.01)*m.mid_att)*((equal(Math.floor(rand(2)), 1)!=0)?(1):(-1))))+m.instance)-m.instance); m.rad=(((0.09+div(Math.floor(rand(Math.floor(m.q1))),15))+m.instance)-m.instance); m.r=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.g=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.b=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.r2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.g2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.b2=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_r=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_g=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance); m.border_b=(((Math.floor(rand(m.q1))*0.1)+m.instance)-m.instance);"}],"waves":[{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"m.sw = 0;\nm.mo = 0;\nm.q1 = 0;\nm.osa = 0;\nm.q23 = 0;\nm.mod = 0;\nm.q32 = 0;\n\n\t\t\tm.rkeys = ['sw'];","frame_eqs_str":"","point_eqs_str":"m.sw=((1-m.sw)*above(m.sample, 0)); m.osa=(m.sample*above(m.sample, 0)); m.mod=((pow((m.value1*2), 2)*sign(m.value1))*0.5); m.mod=m.value1; m.mod=(m.mod*m.sw); m.y=((m.sw!=0)?(m.osa):(((m.sample*0.5)+0.25))); m.y=((m.sample*0.5)+0.25); m.y=(div((m.y-0.5),m.q32)+0.5); m.x=(1-(m.mod*0.5)); m.osa=m.sample; m.mo=((3.7+(m.mod*6))+m.q1); m.r=(0.5+(Math.sin(((m.q23*0.9)+m.mo))*0.5)); m.g=(0.5+(Math.sin((((m.q23*0.89)+m.mo)+1.5472))*0.5)); m.b=(0.5+(Math.sin((((m.q23*0.88)+m.mo)+2.8944))*0.5));"},{"baseVals":{"enabled":1,"sep":256,"spectrum":1,"smoothing":0.8,"a":0.04},"init_eqs_str":"m.sw = 0;\nm.mo = 0;\nm.q1 = 0;\nm.osa = 0;\nm.q23 = 0;\nm.mod = 0;\nm.q32 = 0;\n\n\t\t\tm.rkeys = ['sw'];","frame_eqs_str":"","point_eqs_str":"m.sw=((1-m.sw)*below(m.sample, 1)); m.osa=(m.sample*above(m.sample, 0)); m.mod=((pow((m.value2*2), 2)*sign(m.value2))*0.5); m.mod=m.value2; m.mod=(m.mod*m.sw); m.y=((m.sw!=0)?(m.osa):(((m.sample*0.5)+0.25))); m.y=((m.sample*0.5)+0.25); m.y=(div((m.y-0.5),m.q32)+0.5); m.x=(0+(m.mod*0.5)); m.osa=m.sample; m.mo=((3.7+(m.mod*6))+m.q1); m.r=(0.5+(Math.sin(((m.q23*0.95)+m.mo))*0.5)); m.g=(0.5+(Math.sin((((m.q23*0.96)+m.mo)+1.5472))*0.5)); m.b=(0.5+(Math.sin((((m.q23*0.97)+m.mo)+2.8944))*0.5));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.mq1 = 0;\nm.index2 = 0;\nm.sw = 0;\nm.q25 = 0;\nm.index = 0;\nm.q12 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.mq31 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.index3 = 0;\nm.mq21 = 0;\nm.mq24 = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.rott = 0;\nm.mq23 = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q11 = 0;\nm.atime = 0;\nm.q4 = 0;\nm.k2 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.rota = 0;\nm.movez = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.mq22 = 0;\nm.beat = 0;\nm.vol = 0;\nm.p1 = 0;\nm.peak = 0;\nm.mq26 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.v2 = 0;\nm.q20 = 0;\nm.q8 = 0;\nm.vol=0; m.p1=0; m.vx=0.2; m.vy=-0.1; m.kx=0; m.ky=0;","frame_eqs_str":"m.chng=Math.sin((m.time*0.5)); m.cthr=0.9999; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq29)); m.mq31=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq31)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q31=m.mq31; m.monitor=m.mq1; m.vol=((m.bass+m.treb)+m.mid); m.atime=(m.atime+m.vol); m.q1=(0.4+(Math.sin((m.atime*0.006))*0.4)); m.q2=(0.4+(Math.cos((m.atime*0.00613828348))*0.4)); m.q3=(0.4+(Math.sin((m.atime*0.00598593455))*0.4)); m.monitor=m.q3; m.dec_med=pow(0.96, div(30,m.fps)); m.dec_slow=pow(0.98, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),2); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),2); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.vol=(m.bass_att+m.treb_att); m.v2=((m.v2*m.dec_slow)+(m.vol*(1-m.dec_slow))); m.q26=Math.max(Math.atan((m.vol-(m.v2*0.8))), 0.3); m.q27=(m.index+1); m.sw=((m.sw*m.dec_med)+((1-m.dec_med)*mod(m.index2,2))); m.q28=m.sw; m.k1=(m.is_beat*bnot((m.index*20))); m.k2=(m.is_beat*bnot(m.index)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_slow*m.p2)+((1-m.dec_slow)*m.p1)); m.rott=div((m.p2*3.1416),2); m.monitor=m.k1; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q5=Math.cos(div(m.time,6)); m.q6=-Math.sin(div(m.time,6)); m.q7=-m.q6; m.q8=m.q5; m.zoom=1; m.rot=-0; m.movez=(m.movez+div(((0.006*(m.q1+1.1))*30),m.fps)); m.q29=m.movez; m.rota=(m.rota+div(((0.003*(2-m.q1))*30),m.fps)); m.q30=m.rota; m.q31=(2+(16*Math.abs(Math.cos(div(m.time,18))))); m.q32=div(Math.cos(div(m.time,23)),4); m.q32=m.aspecty; m.vol=((m.bass+m.treb)+m.mid); m.atime=(m.atime+m.vol); m.q8=(m.atime*0.01); m.q1=(m.vol*1.5); m.q23=(m.atime*0.1); m.q11=Math.cos((m.atime*0.000348)); m.q12=Math.tan((m.atime*0.00018834));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec3 xlat_mutablemus;\nshader_body\n{\n  vec3 crisp_1;\n  vec2 uv6_2;\n  vec3 ret_3;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv - 0.5);\n  float tmpvar_5;\n  tmpvar_5 = (dot (texture (sampler_noise_hq, (uv / 4.0)), vec4(0.32, 0.49, 0.29, 0.0)) * q31);\n  mat2 tmpvar_6;\n  tmpvar_6[uint(0)].x = cos(tmpvar_5);\n  tmpvar_6[uint(0)].y = sin(tmpvar_5);\n  tmpvar_6[1u].x = -(sin(tmpvar_5));\n  tmpvar_6[1u].y = cos(tmpvar_5);\n  uv6_2 = (tmpvar_4 * tmpvar_6);\n  uv6_2 = (uv6_2 + sin((q32 * tmpvar_4)));\n  xlat_mutablemus = (vec3((0.2 / (\n    sqrt(uv6_2.x)\n   + 0.2))) * vec3(1.1, 1.0, 0.95));\n  xlat_mutablemus = (xlat_mutablemus * (0.9 + (0.1 * texture (sampler_noise_hq, uv))).xyz);\n  vec3 tmpvar_7;\n  tmpvar_7 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_8;\n  tmpvar_8.x = dot ((texture (sampler_main, (uv + vec2(0.005, 0.0))) - texture (sampler_main, (uv - vec2(0.005, 0.0)))), vec4(0.32, 0.49, 0.29, 0.0));\n  tmpvar_8.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.005))) - texture (sampler_main, (uv - vec2(0.0, 0.005)))), vec4(0.32, 0.49, 0.29, 0.0));\n  crisp_1 = (texture (sampler_main, (uv + (tmpvar_8 * 0.02))).xyz + (texture (sampler_main, uv).xyz / 2.0));\n  crisp_1 = (crisp_1 * 0.67);\n  crisp_1 = (crisp_1 + ((0.08 * xlat_mutablemus) - (\n    sqrt(dot (tmpvar_8, tmpvar_8))\n   * tmpvar_7)));\n  ret_3 = (((crisp_1 - \n    (dot (tmpvar_7, vec3(0.32, 0.49, 0.29)) * 0.04)\n  ) * 0.99) - 0.04);\n  vec4 tmpvar_9;\n  tmpvar_9 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * tmpvar_8.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((ret_3.x > (q21 * q3)) && (ret_3.x <= (q24 * q1)))) {\n    ret_3.y = (ret_3.y - (tmpvar_9.x * 0.5));\n  };\n  if (((ret_3.y > (q22 * q1)) && (ret_3.y <= (q25 * q2)))) {\n    ret_3.z = (ret_3.z - (tmpvar_9.y * 0.5));\n  };\n  if (((ret_3.z > (q23 * q2)) && (ret_3.z <= (q26 * q3)))) {\n    ret_3.x = (ret_3.x - (tmpvar_9.z * 0.5));\n  };\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = ret_3;\n  ret = tmpvar_10.xyz;\n}\n\n","comp":"vec3 xlat_mutableret1;\nshader_body\n{\n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  vec2 uv2_4;\n  vec3 ret_5;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.25 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.5 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * 0.5) - (uv_1.y * -0.5));\n  uv2_4.y = ((uv_1.x * -0.5) + (uv_1.y * 0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((0.75 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  uv2_4.x = ((uv_1.x * -0.5) - (uv_1.y * 0.5));\n  uv2_4.y = ((uv_1.x * 0.5) + (uv_1.y * -0.5));\n  uv2_4 = (uv2_4 * aspect.yx);\n  dist_3 = (1.0 - fract((1.0 + q31)));\n  inten_2 = ((2.0 * sqrt(dist_3)) * (1.0 - (dist_3 * dist_3)));\n  xlat_mutableret1 = max (xlat_mutableret1, (texture (sampler_main, (\n    ((2.0 * uv2_4) * dist_3)\n   + q32)).xyz * inten_2));\n  ret_5 = (xlat_mutableret1 * 1.6);\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_4.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_5.x > (q26 * q3)) && (ret_5.x <= (q23 * q1)))) {\n    ret_5.z = (ret_5.z - (tmpvar_6.x * 0.5));\n  };\n  if (((ret_5.y > (q25 * q1)) && (ret_5.y <= (q22 * q2)))) {\n    ret_5.x = (ret_5.x - (tmpvar_6.y * 0.5));\n  };\n  if (((ret_5.z > (q24 * q2)) && (ret_5.z <= (q21 * q3)))) {\n    ret_5.y = (ret_5.y - (tmpvar_6.z * 0.5));\n  };\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_5;\n  ret = tmpvar_7.xyz;\n}\n\n"}