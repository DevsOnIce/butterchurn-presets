{"baseVals":{"rating":4,"gammaadj":1,"decay":0.94,"echo_zoom":1,"echo_alpha":0.5,"echo_orient":3,"wave_mode":7,"additivewave":1,"modwavealphabyvolume":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":1.286,"wave_smoothing":0.63,"modwavealphastart":0.71,"modwavealphaend":1.3,"warpanimspeed":1.459,"warpscale":2.007,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":20.16,"mv_l":0.4,"mv_g":0.4,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"},{"baseVals":{"enabled":1,"usedots":1,"thick":1,"additive":1,"scaling":1.12682},"init_eqs_str":"m.md = 0;\nm.oldmd = 0;\nm.my = 0;\nm.mx = 0;\nm.mx=0.5; m.my=0.4; m.md=3;\n\t\t\tm.rkeys = ['md','mx','my'];","frame_eqs_str":"","point_eqs_str":"m.oldmd=m.md; m.md=mod((m.md+rand(4)),4); m.md=((equal(m.md, m.oldmd)!=0)?(mod((m.md+1),4)):(m.md)); m.mx=(m.mx+((equal(m.md, 0)*0.002)*m.bass)); m.mx=(m.mx-((equal(m.md, 1)*0.002)*m.bass)); m.my=(m.my+((equal(m.md, 2)*0.002)*m.treb)); m.my=(m.my-((equal(m.md, 3)*0.002)*m.treb)); m.mx=((above(m.mx, 0.9)!=0)?(0.5):(m.mx)); m.mx=((below(m.mx, 0.1)!=0)?(0.5):(m.mx)); m.my=((above(m.my, 0.9)!=0)?(0.5):(m.my)); m.my=((below(m.my, 0.1)!=0)?(0.5):(m.my)); m.x=m.mx; m.y=m.my; m.a=Math.cos(Math.tan((m.treb+(m.bass*0.1))));"}],"init_eqs_str":"m.index2 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.stag = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.drot = 0;\nm.p3 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.p4 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.4+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),12); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.q27=(m.index+1); m.q28=m.index2; m.k1=(m.is_beat*equal(mod(m.index,2), 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.drot=div(((mod(m.index,4)-2)*30),m.fps); m.p3=((m.p3*m.dec_slow)+(div(((1-m.dec_slow)*30),m.fps)*m.drot)); m.q30=m.p3; m.stag=(m.q27+(m.index2*1)); m.stag=Math.max(m.stag, 1); m.p4=((m.dec_med*m.p4)+((1-m.dec_med)*m.stag)); m.q31=m.p4; m.zoom=(1+(0.05*m.q1)); m.rot=(-0.007*m.index); m.q32=pow(0.996, div(30,m.fps)); m.monitor=m.index2;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 my_uv_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (vec2(1280.0, 1024.0) * texsize.zw);\n  float tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + vec2(0.005, 0.0));\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv - vec2(0.005, 0.0));\n  tmpvar_4 = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  float tmpvar_7;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + vec2(0.0, 0.005));\n  vec2 tmpvar_9;\n  tmpvar_9 = (uv - vec2(0.0, 0.005));\n  tmpvar_7 = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  vec2 tmpvar_10;\n  tmpvar_10.x = tmpvar_4;\n  tmpvar_10.y = tmpvar_7;\n  vec2 tmpvar_11;\n  tmpvar_11.x = (((\n    (texture (sampler_blur2, tmpvar_5).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_6).xyz * scale2)\n   + bias2)).x * tmpvar_3.x);\n  tmpvar_11.y = (((\n    (texture (sampler_blur2, tmpvar_8).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, tmpvar_9).xyz * scale2)\n   + bias2)).x * tmpvar_3.y);\n  ret_2.x = texture (sampler_fw_main, ((uv - (tmpvar_10 * 0.01)) + (tmpvar_11 * 0.003))).x;\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_blur3, uv);\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .x) * 0.1));\n  ret_2.x = (ret_2.x + 0.004);\n  vec2 tmpvar_13;\n  tmpvar_13.x = tmpvar_7;\n  tmpvar_13.y = -(tmpvar_4);\n  my_uv_1 = (uv + ((tmpvar_13 * 0.05) * (1.2 - \n    ((tmpvar_12.xyz * scale3) + bias3)\n  .y)));\n  ret_2.z = texture (sampler_fw_main, my_uv_1).z;\n  vec2 x_14;\n  x_14 = (my_uv_1 - uv);\n  ret_2.z = (ret_2.z + ((\n    ((ret_2.z - ((texture (sampler_blur1, uv).xyz * scale1) + bias1).z) * sqrt(dot (x_14, x_14)))\n   * 180.0) / sqrt(\n    dot (tmpvar_3, tmpvar_3)\n  )));\n  ret_2.z = (ret_2.z * 0.8);\n  ret_2.z = (ret_2.z + 0.004);\n  vec2 tmpvar_15;\n  tmpvar_15.x = -(tmpvar_7);\n  tmpvar_15.y = tmpvar_4;\n  my_uv_1 = (tmpvar_15 * 0.045);\n  vec2 tmpvar_16;\n  tmpvar_16.x = (((\n    (texture (sampler_blur2, (uv + vec2(0.01, 0.0))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.01, 0.0))).xyz * scale2)\n   + bias2)).y * tmpvar_3.x);\n  tmpvar_16.y = (((\n    (texture (sampler_blur2, (uv + vec2(0.0, 0.01))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - vec2(0.0, 0.01))).xyz * scale2)\n   + bias2)).y * tmpvar_3.y);\n  my_uv_1 = (my_uv_1 + (uv - (tmpvar_16 * 0.03)));\n  ret_2.y = texture (sampler_fw_main, my_uv_1).y;\n  ret_2.y = (ret_2.y + ((ret_2.y - \n    ((texture (sampler_blur3, my_uv_1).xyz * scale3) + bias3)\n  .y) * 0.2));\n  vec4 tmpvar_17;\n  tmpvar_17.w = 0.0;\n  tmpvar_17.xyz = ret_2;\n  vec3 tmpvar_18;\n  tmpvar_18 = mix (tmpvar_17, texture (sampler_main, uv_orig), vec4(0.2, 0.2, 0.2, 0.2)).xyz;\n  ret_2 = tmpvar_18;\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = tmpvar_18;\n  ret = tmpvar_19.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = (texsize.zw * 2.0);\n  vec3 tmpvar_2;\n  tmpvar_2 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_1))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_4;\n  tmpvar_4.x = tmpvar_3.z;\n  tmpvar_4.y = -(tmpvar_2.z);\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv + ((tmpvar_4 * texsize.zw) * 64.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = tmpvar_3.z;\n  tmpvar_6.y = -(tmpvar_2.z);\n  vec2 tmpvar_7;\n  tmpvar_7 = (uv - ((tmpvar_6 * texsize.zw) * 32.0));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    (mix (mix (vec3(0.2, 0.02, 0.6), vec3(0.6, 0.6, 0.0), vec3((\n      ((texture (sampler_blur3, tmpvar_5).xyz * scale3) + bias3)\n    .y * 8.0))), vec3(1.0, 1.0, 2.0), vec3(((\n      (texture (sampler_blur1, tmpvar_5).xyz * scale1)\n     + bias1).y * 6.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_5).y * 2.0))))\n  , vec3(0.0, 1.0, 0.0), vec3(\n    (((texture (sampler_blur2, uv).xyz * scale2) + bias2).z * 1.2)\n  )), vec3(1.4, 0.0, 0.0), vec3((\n    ((texture (sampler_blur1, tmpvar_7).xyz * scale1) + bias1)\n  .x * 2.0))) * (vec3(1.0, 1.0, 1.0) - vec3((texture (sampler_main, tmpvar_7).x * 2.0))));\n  ret = tmpvar_8.xyz;\n}\n\n"}