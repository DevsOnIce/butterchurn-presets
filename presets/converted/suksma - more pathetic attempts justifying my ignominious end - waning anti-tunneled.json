{"baseVals":{"rating":4,"gammaadj":1,"decay":0,"echo_zoom":1,"echo_orient":3,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wrap":0,"wave_a":0,"wave_scale":0.2,"wave_smoothing":0,"wave_mystery":1,"modwavealphastart":1,"modwavealphaend":1,"warpanimspeed":0.01,"warpscale":0.01,"dx":0.005,"warp":0.01,"sx":0.9999,"sy":1.0018,"wave_g":0,"wave_b":0.65,"ob_size":0,"ob_g":0.8,"ob_b":0.7,"ib_size":0.005,"ib_r":0,"ib_g":0,"ib_b":0.3,"mv_x":1,"mv_y":1,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.myamp = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(0.49+((m.value1*(-30-div(1,(m.sample*0.9))))*0.05)); m.myamp=((below(m.freqlvl, 0.5)!=0)?(m.freqlvl):(0.49)); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265359; m.pi23=((2*m.pi)*0.33333333333); m.fade=(2*((1-m.myamp)-0.49)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=m.myamp; m.y=m.myfreq;"},{"baseVals":{"enabled":1,"spectrum":1,"thick":1,"additive":1,"smoothing":0},"init_eqs_str":"m.freqlvl = 0;\nm.myaltfreq = 0;\nm.myamp = 0;\nm.fade = 0;\nm.pi23 = 0;\nm.myfreq = 0;\nm.pi = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"","point_eqs_str":"m.freqlvl=(0.51-((m.value2*(-30-div(1,(m.sample*0.9))))*0.05)); m.myamp=((above(m.freqlvl, 0.5)!=0)?(m.freqlvl):(0.51)); m.myfreq=((log10((log10(m.sample)+3))*1.05)+0.37); m.myaltfreq=(((m.time*0.2)+(m.myfreq*04))-0.8); m.pi=3.14159265358; m.pi23=((2*m.pi)*0.33333333333); m.fade=(2.0*(m.myamp-0.49)); m.r=(((Math.sin(m.myaltfreq)+1)*0.5)*m.fade); m.g=(((Math.sin((m.myaltfreq-(1*m.pi23)))+1)*0.5)*m.fade); m.b=(((Math.sin((m.myaltfreq-(2*m.pi23)))+1)*0.5)*m.fade); m.x=m.myamp; m.y=m.myfreq;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q25 = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.vt = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.vb = 0;\nm.q9 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.q19 = 0;\nm.q17 = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.q3 = 0;\nm.vvm = 0;\nm.q32 = 0;\nm.vvb = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.vm = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.vvt = 0;\nm.q8 = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.decay=0; m.dcsp=0;","frame_eqs_str":"m.vb=((m.vb*0.95)+(((1-m.vb)*pow(m.bass_att, 2))*0.02)); m.vvb=((m.vvb*0.95)+(((1-m.vvb)*m.vb)*0.01)); m.vm=((m.vm*0.95)+(((1-m.vm)*pow(m.mid_att, 2))*0.02)); m.vvm=((m.vvm*0.95)+(((1-m.vvm)*m.vm)*0.01)); m.vt=((m.vt*0.95)+(((1-m.vt)*pow(m.treb_att, 2))*0.02)); m.vvt=((m.vvt*0.95)+(((1-m.vvt)*m.vt)*0.01)); m.vvb=Math.min(1, Math.max(0, m.vvb)); m.vvm=Math.min(1, Math.max(0, m.vvm)); m.vvt=Math.min(1, Math.max(0, m.vvt)); m.q1=(m.vvb*2); m.q2=(m.vvm*2); m.q3=(m.vvt*2); m.q4=(((m.q1+m.q2)+m.q3)*5); m.q5=(((m.q1+m.q2)+m.q3)*5); m.q6=(((m.q1+m.q2)+m.q3)*5); m.q7=(((m.q1+m.q2)+m.q3)*5); m.q8=(((m.q1+m.q2)+m.q3)*5); m.q9=(((m.q1+m.q2)+m.q3)*5); m.q10=(((m.q1+m.q2)+m.q3)*5); m.q11=(((m.q1+m.q2)+m.q3)*5); m.q12=(((m.q1+m.q2)+m.q3)*5); m.q13=(((m.q1+m.q2)+m.q3)*5); m.q14=(((m.q1+m.q2)+m.q3)*5); m.q15=(((m.q1+m.q2)+m.q3)*5); m.q16=(((m.q1+m.q2)+m.q3)*5); m.q17=(((m.q1+m.q2)+m.q3)*5); m.q18=(((m.q1+m.q2)+m.q3)*5); m.q19=(((m.q1+m.q2)+m.q3)*5); m.q20=(((m.q1+m.q2)+m.q3)*5); m.q21=(((m.q1+m.q2)+m.q3)*5); m.q22=(((m.q1+m.q2)+m.q3)*5); m.q23=(((m.q1+m.q2)+m.q3)*5); m.q24=(((m.q1+m.q2)+m.q3)*5); m.q25=(((m.q1+m.q2)+m.q3)*5); m.q26=(((m.q1+m.q2)+m.q3)*5); m.q27=(((m.q1+m.q2)+m.q3)*5); m.q28=(((m.q1+m.q2)+m.q3)*5); m.q29=(((m.q1+m.q2)+m.q3)*5); m.q30=(((m.q1+m.q2)+m.q3)*5); m.q31=(((m.q1+m.q2)+m.q3)*5); m.q32=(((m.q1+m.q2)+m.q3)*5); m.decay=1.0; m.zoom=1.009; m.dx=0; m.dy=0; m.sx=1.000001; m.sy=0.999999; m.mv_r=(0.360+(((Math.cos(div(m.time,5))*0.3)+(0.5*0.5))*0.1)); m.mv_g=(0.390+(((Math.sin(div(m.time,7))*0.3)+(0.5*0.5))*0.1)); m.mv_b=(0.500+((Math.sin((div(m.time,7)+0.9))+(0.5*0.5))*0.1)); m.cx=-1; m.cy=2; m.rot=(-m.treb*0.002); m.cx=((Math.sin((m.time*0.1))*1.5)+0.5); m.cy=((Math.cos((m.time*0.2))*1.5)+0.5);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec3 xlat_mutablemus;\nvec2 xlat_mutableuv1;\nvec2 xlat_mutableuv6;\nshader_body\n{\n  xlat_mutableuv1 = (uv - 0.5);\n  vec4 tmpvar_1;\n  tmpvar_1 = texture (sampler_noise_hq, ((xlat_mutableuv1 / 3.0) + (0.006 * time)));\n  vec2 tmpvar_2;\n  tmpvar_2 = tmpvar_1.xy;\n  mat2 tmpvar_3;\n  tmpvar_3[uint(0)].x = tmpvar_2.y;\n  tmpvar_3[uint(0)].y = tmpvar_2.x;\n  tmpvar_3[1u].x = -(tmpvar_1.x);\n  tmpvar_3[1u].y = tmpvar_2.y;\n  xlat_mutableuv6 = (xlat_mutableuv1 * tmpvar_3);\n  xlat_mutablemus = (vec3(abs((\n    (0.5 * cos((xlat_mutableuv6.y * 14.0)))\n   - \n    cos((xlat_mutableuv6.x * 71.0))\n  ))) * vec3(0.04, 0.0384, 0.036));\n  xlat_mutableuv6 = (0.2 * sin((\n    (12.0 * uv)\n   + rand_frame.xy)));\n  xlat_mutablemus = (xlat_mutablemus - ((0.001 / \n    sqrt(dot (xlat_mutableuv6, xlat_mutableuv6))\n  ) * vec3(0.2, 1.0, 1.0)));\n  vec3 tmpvar_4;\n  tmpvar_4 = ((texture (sampler_blur1, fract(uv)).xyz * scale1) + bias1);\n  vec2 tmpvar_5;\n  tmpvar_5.x = dot ((texture (sampler_main, (uv + vec2(0.004, 0.0))).xyz - texture (sampler_main, (uv - vec2(0.004, 0.0))).xyz), vec3(0.32, 0.49, 0.29));\n  tmpvar_5.y = dot ((texture (sampler_main, (uv + vec2(0.0, 0.004))).xyz - texture (sampler_main, (uv - vec2(0.0, 0.004))).xyz), vec3(0.32, 0.49, 0.29));\n  vec4 tmpvar_6;\n  tmpvar_6.w = 1.0;\n  tmpvar_6.xyz = (((\n    ((texture (sampler_main, (uv + (tmpvar_5 * 0.02))).xyz + (0.015 - (\n      (sqrt(dot (tmpvar_5, tmpvar_5)) * tmpvar_4)\n     / 1.5))) - (dot (tmpvar_4, vec3(0.32, 0.49, 0.29)) * 0.012))\n   + xlat_mutablemus) * 0.99) - 0.04);\n  ret = tmpvar_6.xyz;\n}\n\n","comp":"vec3 xlat_mutablecont;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\nshader_body\n{\n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract(q6));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_4).xyz;\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (vec3(0.0, 0.0, 0.0), ((\n    -(texture (sampler_main, tmpvar_4).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_4 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((0.5 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_5).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_5).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_5 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((1.0 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_6).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_6).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_6 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  vec2 tmpvar_7;\n  tmpvar_7.y = 5.0;\n  tmpvar_7.x = (time / 12.0);\n  xlat_mutablers2 = ((0.1 * cos(\n    ((uv_1 * 3.0) + tmpvar_7)\n  )) + (0.1 * xlat_mutableret1).xy);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((-0.1 * xlat_mutableret1) + (\n    (clamp ((0.005 / sqrt(\n      dot (xlat_mutablers2, xlat_mutablers2)\n    )), 0.0, 1.0) * vec3(18.0, 16.2, 10.8))\n   * \n    (0.2 + (0.3 * xlat_mutableret1))\n  )) + ((\n    dot (xlat_mutablecont, vec3(0.32, 0.49, 0.29))\n   * \n    (1.0 + slow_roam_cos)\n  ) / 2.0).xyz);\n  ret = tmpvar_8.xyz;\n}\n\n"}