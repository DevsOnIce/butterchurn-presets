{"baseVals":{"rating":5,"gammaadj":2.7,"decay":0.715,"wrap":0,"solarize":1,"wave_a":0.001,"rot":0.004,"dx":-0.012,"dy":-0.004,"warp":0.80322,"sx":1.8167,"sy":1.79871,"wave_r":0,"wave_g":0,"wave_b":0,"wave_x":0,"wave_y":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":20,"num_inst":410,"rad":0.01,"r":0,"b":1,"g2":0,"a2":0.1,"border_a":0.006},"init_eqs_str":"m.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.xs = 0;\nm.x1 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.nc = 0;\nm.z3 = 0;\nm.zs = 0;\nm.x3 = 0;\nm.ys = 0;\nm.q4 = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.size = 0;\nm.q2 = 0;\nm.z1 = 0;\nm.q3 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.q1=div(m.time,5); m.q2=div(m.time,6); m.rad=(0.005+div(m.bass,100)); m.q5=div(m.bass_att,70); m.b2=((m.treb*0.7)-div(m.bass,2)); m.r=div(m.instance,m.num_inst); m.g=Math.abs((div(m.treb_att,5)-m.bass)); m.size=(0.3+div(m.bass_att,300)); m.nc=sqrt(m.num_inst); m.xs=(Math.sin(div((6.28*mod(m.instance,m.nc)),m.nc))*Math.sin(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc))); m.ys=(Math.cos(div((6.28*mod(m.instance,m.nc)),m.nc))*Math.sin(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc))); m.zs=Math.cos(div((3.14*Math.floor(div(m.instance,m.nc))),m.nc)); m.y1=((m.ys*Math.cos(m.q1))-(m.zs*Math.sin(m.q1))); m.z1=((m.ys*Math.sin(m.q1))+(m.zs*Math.cos(m.q1))); m.x1=((m.z1*Math.sin(m.q2))+(m.xs*Math.cos(m.q2))); m.z2=((m.z1*Math.cos(m.q2))-(m.xs*Math.sin(m.q2))); m.x2=((m.x1*Math.cos(m.q3))-(m.y1*Math.sin(m.q3))); m.y2=((m.y1*Math.cos(m.q3))+(m.x1*Math.sin(m.q3))); m.x3=(m.x2+m.q4); m.y3=m.y2; m.z3=(m.z2+m.q5); m.x=(0.5+(m.size*div(m.x3,(1+(m.z3*m.size))))); m.y=(0.5+(m.size*div(m.y3,(1+(m.z3*m.size))))); m.a=below(m.z3, 0);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"","frame_eqs_str":"m.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((\n    (texture (sampler_blur1, uv).xyz * scale1)\n   + bias1) * 0.4));\n  ret_1 = (ret_1 * 0.41);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  ret_1 = (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1));\n  ret_1 = (ret_1 * 2.7);\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = ret_1;\n  ret = tmpvar_2.xyz;\n}\n\n"}