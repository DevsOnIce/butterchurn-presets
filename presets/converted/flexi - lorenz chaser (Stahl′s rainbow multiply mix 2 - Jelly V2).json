{"baseVals":{"rating":3,"gammaadj":1,"decay":0.5,"additivewave":1,"modwavealphabyvolume":1,"brighten":1,"darken":1,"wave_a":0.009,"wave_scale":2.713,"wave_smoothing":0,"modwavealphastart":1.2,"modwavealphaend":1.2,"warpscale":1.331,"zoom":0.99951,"warp":0.00909,"wave_r":0.44,"wave_g":0.4,"ob_size":0.5,"ob_r":0.01,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":1,"sides":3,"additive":1,"num_inst":175,"rad":0.20065,"ang":0.75398,"tex_ang":3.14159,"tex_zoom":0.99979,"r":0,"g2":0,"border_r":0.13,"border_g":0.8,"border_b":0.6,"border_a":0.9},"init_eqs_str":"m.my_z = 0;\nm.d = 0;\nm.y3 = 0;\nm.z2 = 0;\nm.y1 = 0;\nm.w = 0;\nm.q12 = 0;\nm.w2 = 0;\nm.x1 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.dy1 = 0;\nm.zoom = 0;\nm.p = 0;\nm.q5 = 0;\nm.dz1 = 0;\nm.z3 = 0;\nm.w3 = 0;\nm.my_x = 0;\nm.x3 = 0;\nm.my_y = 0;\nm.q11 = 0;\nm.dd = 0;\nm.q4 = 0;\nm.yy1 = 0;\nm.q16 = 0;\nm.w1 = 0;\nm.x2 = 0;\nm.q17 = 0;\nm.l = 0;\nm.y2 = 0;\nm.dx1 = 0;\nm.zz1 = 0;\nm.q14 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.xx1 = 0;\n\n\t\t\tm.rkeys = ['yy1','zz1','xx1'];","frame_eqs_str":"m.xx1=((equal(m.instance, 0)!=0)?(m.q11):(m.xx1)); m.yy1=((equal(m.instance, 0)!=0)?(m.q12):(m.yy1)); m.zz1=((equal(m.instance, 0)!=0)?(m.q13):(m.zz1)); m.dx1=(m.q14*(m.yy1-m.xx1)); m.dy1=((m.xx1*(m.q15-m.zz1))-m.yy1); m.dz1=((m.xx1*m.yy1)-(m.q16*m.zz1)); m.dd=sqrt((((m.dx1*m.dx1)+(m.dy1*m.dy1))+(m.dz1*m.dz1))); m.xx1=(m.xx1+div((m.q17*m.dx1),m.dd)); m.yy1=(m.yy1+div((m.q17*m.dy1),m.dd)); m.zz1=(m.zz1+div((m.q17*m.dz1),m.dd)); m.my_x=(m.xx1*0.1); m.my_y=(m.yy1*0.1); m.my_z=((m.zz1*0.1)-3); m.d=4.75; m.zoom=(0.55+(0.25*Math.sin((0.5*m.q32)))); m.w1=m.q3; m.w2=m.q4; m.w3=m.q5; m.x1=((Math.cos(m.w1)*m.my_x)+(Math.sin(m.w1)*m.my_y)); m.y1=((-Math.sin(m.w1)*m.my_x)+(Math.cos(m.w1)*m.my_y)); m.z1=m.my_z; m.x2=((Math.cos(m.w2)*m.x1)+(Math.sin(m.w2)*m.z1)); m.z2=((-Math.sin(m.w2)*m.x1)+(Math.cos(m.w2)*m.z1)); m.y2=m.y1; m.y3=((Math.cos(m.w3)*m.y2)+(Math.sin(m.w3)*m.z2)); m.z3=((-Math.sin(m.w3)*m.y2)+(Math.cos(m.w3)*m.z2)); m.x3=m.x2; m.l=sqrt(((m.x3*m.x3)+(m.y3*m.y3))); m.w=Math.atan2(m.x3, m.y3); m.p=Math.tan((Math.asin(1)+Math.atan2((m.d+m.z3), m.l))); m.d=sqrt((((m.x3*m.x3)+(m.y3*m.y3))+((m.z3+m.d)*(m.z3+m.d)))); m.my_x=((m.zoom*Math.sin(m.w))*m.p); m.my_y=((m.zoom*Math.cos(m.w))*m.p); m.x=(0.5+m.my_x); m.y=(0.5+m.my_y); m.rad=div(m.rad,m.d); m.ang=(m.ang-((div(m.instance,m.num_inst)*Math.asin(1))*8)); m.border_r=((0.25+(0.07825*Math.sin(div((1.72*m.instance),6.28))))+(0.125*Math.sin((0.41*m.q32)))); m.border_b=((0.25+(0.07825*Math.cos(div((1.23*m.instance),6.28))))+(0.125*Math.sin((0.27*m.q32)))); m.border_g=((0.25+(0.07825*Math.sin(div((1.35*m.instance),6.28))))+(0.125*Math.cos((0.34*m.q32))));"},{"baseVals":{"enabled":1,"sides":100,"additive":1,"textured":1,"num_inst":4,"y":0.45,"rad":1.09568,"tex_zoom":0.99978,"r":0.5,"g":0.5,"b":0.5,"r2":0.5,"g2":0.5,"b2":0.5,"a2":0.1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.x=(0.5+(0.4*Math.sin(((1.57*m.instance)+(m.time*0.33))))); m.y=(0.5+(0.4*Math.cos(((1.57*m.instance)+(m.time*0.33)))));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.n = 0;\nm.y1 = 0;\nm.n2 = 0;\nm.q12 = 0;\nm.x1 = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.j3 = 0;\nm.dy1 = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.n1 = 0;\nm.dz1 = 0;\nm.v = 0;\nm.q11 = 0;\nm.dd = 0;\nm.q4 = 0;\nm.a = 0;\nm.j2 = 0;\nm.q16 = 0;\nm.b = 0;\nm.q17 = 0;\nm.vol = 0;\nm.dx1 = 0;\nm.j1 = 0;\nm.q2 = 0;\nm.q14 = 0;\nm.z1 = 0;\nm.q3 = 0;\nm.q32 = 0;\nm.c = 0;\nm.voltime = 0;\nm.x1=2; m.y1=2; m.z1=2;","frame_eqs_str":"m.q1=m.aspectx; m.q2=m.aspecty; m.wave_a=0; m.v=0.5; m.j1=((m.j1*0.95)+(sqr((m.bass*4))*m.v)); m.j2=((m.j2*0.95)+(sqr((m.mid*4))*m.v)); m.j3=((m.j3*0.95)+(sqr((m.treb*4))*m.v)); m.n=(m.n+(m.j1*0.0052)); m.n1=(m.n1+(m.j2*0.0052)); m.n2=(m.n2+(m.j3*0.0052)); m.q3=(m.n*0.01); m.q4=(m.n1*0.01); m.q5=(m.n2*0.01); m.a=10; m.b=28; m.c=div(9,5); m.dx1=(m.a*(m.y1-m.x1)); m.dy1=((m.x1*(m.b-m.z1))-m.y1); m.dz1=((m.x1*m.y1)-(m.c*m.z1)); m.d=1; m.dd=sqrt((((m.dx1*m.dx1)+(m.dy1*m.dy1))+(m.dz1*m.dz1))); m.x1=(m.x1+div((m.d*m.dx1),m.dd)); m.y1=(m.y1+div((m.d*m.dy1),m.dd)); m.z1=(m.z1+div((m.d*m.dz1),m.dd)); m.q11=m.x1; m.q12=m.y1; m.q13=m.z1; m.q14=m.a; m.q15=m.b; m.q16=m.c; m.q17=m.d; m.vol=(((m.bass_att+m.treb_att)+m.mid_att)*0.25); m.vol=(m.vol*m.vol); m.voltime=(m.voltime+(0.1*m.vol)); m.q32=(0.4*m.voltime);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 8.0);\n  vec2 tmpvar_3;\n  tmpvar_3.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_3.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1)).y;\n  vec2 tmpvar_4;\n  tmpvar_4 = (uv + (tmpvar_3 * 0.55));\n  vec3 tmpvar_5;\n  tmpvar_5 = mix (ret_1, (1.0 - ret_1), ((0.7 * \n    ((texture (sampler_blur1, tmpvar_4).xyz * scale1) + bias1)\n  ) + (0.2 * texture (sampler_main, uv).xyz)));\n  vec3 tmpvar_6;\n  tmpvar_6 = mix (tmpvar_5, ((\n    (tmpvar_5 - (0.1 * ((texture (sampler_blur3, tmpvar_4).xyz * scale3) + bias3)))\n   + \n    (0.1 * ((texture (sampler_blur1, (\n      (tmpvar_4 * 1.25)\n     - 0.125)).xyz * scale1) + bias1))\n  ) + (0.42 * texture (sampler_main, tmpvar_4).xyz)), vec3(0.25, 0.25, 0.25));\n  vec3 x_7;\n  x_7 = (tmpvar_6 - 0.5);\n  ret_1 = (tmpvar_6 * clamp ((\n    sqrt(dot (x_7, x_7))\n   * 5.0), 0.0, 1.0));\n  ret_1 = (vec3(dot (ret_1, vec3(0.32, 0.49, 0.29))) + 1.25);\n  ret_1 = (ret_1 * (ret_1 * 0.6));\n  ret_1 = (ret_1 * mix ((0.7 * ret_1), (\n    (1.3 * ret_1)\n   * \n    ((((texture (sampler_blur3, uv).xyz * scale3) + bias3) - ((texture (sampler_blur1, uv).xyz * scale1) + bias1)) - (0.25 * ((texture (sampler_blur2, tmpvar_4).xyz * scale2) + bias2)))\n  ), pow (hue_shader.zxy, ret_1)));\n  ret_1 = (ret_1 + 0.03);\n  ret_1 = (ret_1 * ret_1);\n  ret_1 = (ret_1 * hue_shader.zxy);\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = ret_1;\n  ret = tmpvar_8.xyz;\n}\n\n"}