{"baseVals":{"rating":4,"gammaadj":1.9,"echo_zoom":1.169,"wave_mode":1,"additivewave":1,"wave_thick":1,"wave_brighten":0,"wave_a":0,"wave_scale":50,"modwavealphastart":0.01,"modwavealphaend":0.01,"warpanimspeed":0.037,"warpscale":0.015,"zoomexp":1.22019,"warp":0.033,"wave_r":0,"wave_g":0,"wave_b":0,"ob_size":0,"ob_a":1,"ib_size":0.09,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":64,"mv_y":48,"mv_l":0.85,"mv_r":0.5,"mv_g":0.5,"mv_b":0.5,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":15,"thickoutline":1,"rad":0.28,"ang":0.27,"r":0.1,"g":0.1,"b":0.1,"a":0.1,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.a=(0.1+(0.1*m.mid));"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"thickoutline":1,"x":0.2,"y":0,"rad":3,"ang":0.27,"r":0,"a":0.039,"r2":0.2,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.rad=(m.bass*2); m.r=Math.min(Math.sin((1-m.time)), 1); m.g=(1-Math.min(Math.sin(((1-m.r)*3.14)), 1)); m.b=Math.min(Math.abs(Math.sin(((2-m.g)-m.r))), 1);"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"x":0.1,"y":0.9,"rad":3,"ang":0.27,"r":0.1,"a":0.04,"r2":0.1,"g2":0,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.rad=(m.treb*2); m.r=Math.min(Math.abs(Math.sin((m.time-0.6))), 1); m.g=(1-Math.min(Math.abs(Math.sin(((1-m.r)*3.14))), 1)); m.b=Math.min(Math.abs(Math.sin((1-m.g))), 1);"},{"baseVals":{"enabled":1,"sides":20,"additive":1,"y":0.9,"ang":1.58,"r":0.8,"g":0.8,"b":0.8,"a":0.8,"g2":0,"border_r":0,"border_g":0,"border_b":0,"border_a":0},"init_eqs_str":"m.yq = 0;\nm.xp = 0;\nm.xs = 0;\nm.yp = 0;\nm.xcorr = 0;\nm.xq = 0;\nm.ys = 0;\nm.zq = 0;\nm.zp = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.xp=0.53129; m.yp=0.25; m.xcorr=((m.yp*0.18)+0.3); m.ang=(m.time*150); m.xq=(m.xp*Math.sin(m.ang)); m.yq=m.yp; m.zq=(m.xp*Math.cos(m.ang)); m.xp=((m.xq*Math.sin(m.ang))+(m.zq*Math.cos(m.ang))); m.yp=m.yq; m.zp=((m.xq*Math.cos(m.ang))-(m.zq*Math.sin(m.ang))); m.xq=m.xp; m.yq=((m.yp*Math.sin(m.ang))+(m.zp*Math.cos(m.ang))); m.zq=((m.yp*Math.cos(m.ang))-(m.zp*Math.sin(m.ang))); m.zq=(m.zq+3.14); m.xs=div(m.xq,m.zq); m.ys=div(m.yq,m.zq); m.x=Math.min(Math.abs(((m.xs*5)-m.xcorr)), 1); m.y=Math.min(Math.abs(((m.ys*1.3)+0.5)), 1); m.r=Math.min(Math.abs(Math.sin(m.time)), 1); m.g=(1-Math.min(Math.abs(Math.sin(((1-m.r)*3.14))), 1)); m.b=Math.min(Math.abs(Math.sin((1-m.g))), 1); m.rad=((((m.bass+m.mid)+m.treb)+2)*0.05);"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;\nm.vol = 0;\nm.mtime = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.decay=0; m.dcsp=0;","frame_eqs_str":"m.decay=1; m.zoom=(0.95+(0.075*Math.max(m.treb_att, m.bass_att))); m.warp=0; m.vol=(((m.bass_att+m.mid_att)+m.treb_att)*0.25); m.vol=(m.vol*m.vol); m.mtime=(m.mtime+(m.vol*0.1)); m.q1=((m.mtime*0.4)-(0.05*m.time));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2 = (texsize.zw * 4.0);\n  vec3 tmpvar_3;\n  tmpvar_3 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_2))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_5;\n  tmpvar_5.x = tmpvar_3.x;\n  tmpvar_5.y = tmpvar_4.x;\n  vec2 tmpvar_6;\n  tmpvar_6 = (uv + ((tmpvar_5 * texsize.zw) * 4.0));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_3.y;\n  tmpvar_7.y = tmpvar_4.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (uv + ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_3.z;\n  tmpvar_9.y = tmpvar_4.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (uv + ((tmpvar_9 * texsize.zw) * 4.0));\n  ret_1.x = (texture (sampler_main, tmpvar_6).x - ((texture (sampler_main, tmpvar_6).xyz - \n    ((texture (sampler_blur3, tmpvar_6).xyz * scale3) + bias3)\n  ).x * 0.02));\n  ret_1.y = (texture (sampler_main, tmpvar_8).y - ((texture (sampler_main, tmpvar_8).xyz - \n    ((texture (sampler_blur3, tmpvar_8).xyz * scale3) + bias3)\n  ).y * 0.02));\n  ret_1.z = (texture (sampler_main, tmpvar_10).z - ((texture (sampler_main, tmpvar_10).xyz - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ).z * 0.02));\n  float tmpvar_11;\n  tmpvar_11 = (0.1 * (rand_frame.x - rand_frame.y));\n  ret_1 = (ret_1 + ((\n    (texture (sampler_noise_lq, (((uv_orig * texsize.xy) * (texsize_noise_lq.zw * 0.4)) + (0.2 * rand_frame.xy))).xyz - 0.5)\n   * 0.3) + tmpvar_11));\n  ret_1 = (ret_1 - ((ret_1.yzx * 0.1) - (0.2 * tmpvar_11)));\n  vec4 tmpvar_12;\n  tmpvar_12.w = 1.0;\n  tmpvar_12.xyz = ret_1;\n  ret = tmpvar_12.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = texture (sampler_main, uv).xyz;\n  ret = tmpvar_1.xyz;\n}\n\n"}