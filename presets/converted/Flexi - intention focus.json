{"baseVals":{"rating":0,"gammaadj":1.9,"echo_zoom":1.169,"wave_a":0.001,"wave_scale":0.243,"wave_smoothing":0,"warpanimspeed":30.965,"warpscale":2.572,"zoomexp":2.00672,"zoom":1.00901,"warp":0.00054,"wave_r":0,"wave_g":0,"wave_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"sides":100,"g":1,"b":1,"r2":1,"b2":1,"border_a":0},"init_eqs_str":"m.xx = 0;\nm.q1 = 0;\nm.q3 = 0;\nm.yy = 0;\nm.radi = 0;\n\n\t\t\tm.rkeys = ['xx','yy','radi'];","frame_eqs_str":"m.a=above(m.q3, 2); m.a2=(above(m.q3, 2)*0.8); m.xx=((above(m.q3, 6)!=0)?(m.xx):((rand(100)*0.01))); m.yy=((above(m.q3, 6)!=0)?(m.yy):((rand(100)*0.01))); m.radi=((above(m.q3, 5)!=0)?(m.radi):((rand(100)*0.01))); m.rad=m.radi; m.x=m.xx; m.y=m.yy; m.r=((0.5+(0.5*Math.sin((m.q1*1.22))))+0.1); m.g=(0.4+(0.4*Math.sin((m.q1*1.307)))); m.b=(0.4+(0.4*Math.sin((m.q1*1.959)))); m.r2=((0.5+(0.5*Math.sin((m.q1*1.622))))+0.1); m.g2=(0.4+(0.4*Math.sin((m.q1*1.507)))); m.b2=(0.4+(0.4*Math.sin((m.q1*1.6559))));"}],"waves":[{"baseVals":{"enabled":1,"thick":1,"additive":1,"scaling":2.0231,"smoothing":0,"r":0,"b":0},"init_eqs_str":"m.tt3 = 0;\nm.tt2 = 0;\nm.tt1 = 0;\nm.d = 0;\nm.t2=0; m.t3=0; m.t4=0; m.cl=0;\n\t\t\tm.rkeys = ['tt3','tt2','tt1','d'];","frame_eqs_str":"","point_eqs_str":"m.tt3=((m.tt3*0.6)+(m.value1*1)); m.tt2=((m.tt2*0.7)+(m.tt3*0.2)); m.tt1=((m.tt1*0.8)+(m.tt2*0.1)); m.d=((m.d*0.9)+(m.tt1*0.2)); m.y=(0.5+(((m.d*m.sample)*(1-m.sample))*6)); m.x=(-0.05+(m.sample*1.1));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q1 = 0;","frame_eqs_str":"m.zoom=1.01; m.q1=(m.time*0.01);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec2 uv_blue_1;\n  vec3 ret_2;\n  vec3 tmpvar_3;\n  tmpvar_3 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)) - 0.5).xyz;\n  vec3 tmpvar_4;\n  tmpvar_4.xy = uv_orig;\n  tmpvar_4.z = q1;\n  vec3 tmpvar_5;\n  tmpvar_5 = (texture (sampler_noisevol_hq, (tmpvar_4 + vec3(0.03, 0.0, 0.0))) - texture (sampler_noisevol_hq, (tmpvar_4 - vec3(0.03, 0.0, 0.0)))).xyz;\n  vec3 tmpvar_6;\n  tmpvar_6 = (texture (sampler_noisevol_hq, (tmpvar_4 + vec3(0.0, 0.03, 0.0))) - texture (sampler_noisevol_hq, (tmpvar_4 - vec3(0.0, 0.03, 0.0)))).xyz;\n  vec4 tmpvar_7;\n  tmpvar_7 = texture (sampler_noisevol_hq, tmpvar_4);\n  vec2 tmpvar_8;\n  tmpvar_8.x = tmpvar_5.x;\n  tmpvar_8.y = tmpvar_6.x;\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_6.x;\n  tmpvar_9.y = -(tmpvar_5.x);\n  vec2 tmpvar_10;\n  tmpvar_10 = ((0.5 + (\n    (uv - 0.5)\n   * 1.01)) + ((\n    ((-8.0 * tmpvar_8) * (1.0 - tmpvar_7.x))\n   - \n    (8.0 * tmpvar_9)\n  ) * texsize.zw));\n  ret_2.x = texture (sampler_main, tmpvar_10).x;\n  ret_2.x = (ret_2.x + ((ret_2.x - \n    ((texture (sampler_blur3, tmpvar_10).xyz * scale3) + bias3)\n  ) * 0.1).x);\n  ret_2.x = (ret_2.x * 0.95);\n  ret_2.x = (ret_2.x + ((tmpvar_3 * 0.4) * (1.0 - \n    (tmpvar_7.x * 2.0)\n  )).x);\n  ret_2.y = ((texture (sampler_main, uv_orig).y * 0.96) - 0.004);\n  uv_blue_1 = (mix (uv_orig, (0.5 + \n    ((tmpvar_10 - 0.5) * 1.02)\n  ), vec2(-1.0, -1.0)) + ((tmpvar_3.xy * texsize.zw) * 4.0));\n  ret_2.z = (texture (sampler_main, uv_blue_1).z + (ret_2.x * 0.2));\n  ret_2.z = (ret_2.z + ((\n    (((texture (sampler_blur1, uv_blue_1).xyz * scale1) + bias1).z - ret_2.z)\n   * 0.1) - 0.03));\n  vec4 tmpvar_11;\n  tmpvar_11.w = 1.0;\n  tmpvar_11.xyz = ret_2;\n  ret = tmpvar_11.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 dy_2;\n  vec3 dx_3;\n  vec2 d_4;\n  vec3 ret_5;\n  vec2 tmpvar_6;\n  tmpvar_6 = (texsize.zw * 3.0);\n  vec2 tmpvar_7;\n  tmpvar_7.x = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_6))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_6))\n  ).xyz * scale1) + bias1)).y;\n  tmpvar_7.y = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_6))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_6))\n  ).xyz * scale1) + bias1)).y;\n  uv_1 = (uv + ((tmpvar_7 * rad) * 0.3));\n  d_4 = (texsize.zw * 16.0);\n  dx_3 = (((texture (sampler_blur2, \n    (uv_1 + (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv_1 - (vec2(1.0, 0.0) * d_4))\n  ).xyz * scale2) + bias2));\n  dy_2 = (((texture (sampler_blur2, \n    (uv_1 + (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale2) + bias2) - ((texture (sampler_blur2, \n    (uv_1 - (vec2(0.0, 1.0) * d_4))\n  ).xyz * scale2) + bias2));\n  vec2 tmpvar_8;\n  tmpvar_8.x = dx_3.z;\n  tmpvar_8.y = dy_2.z;\n  vec3 tmpvar_9;\n  tmpvar_9 = mix (mix ((\n    mix (ret_5, ((1.0 - texture (sampler_main, uv_1).x) * vec3(1.5, 2.5, 3.0)), vec3((clamp ((\n      ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1)\n    .x * 2.0), 0.0, 1.0) * 0.5)))\n   * rad), vec3(1.0, 0.75, 0.0), vec3((\n    (((dy_2 + dx_3).z * 0.43) + 0.5)\n   * \n    ((texture (sampler_blur2, (uv_1 + (\n      (tmpvar_8 * texsize.zw)\n     * 32.0))).xyz * scale2) + bias2)\n  .z))), vec3(1.5, 2.0, 3.0), vec3((texture (sampler_main, uv).y * (0.4 - \n    (rad * 0.7)\n  ))));\n  ret_5 = tmpvar_9;\n  vec4 tmpvar_10;\n  tmpvar_10.w = 1.0;\n  tmpvar_10.xyz = tmpvar_9;\n  ret = tmpvar_10.xyz;\n}\n\n"}