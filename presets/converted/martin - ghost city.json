{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"wave_mode":6,"wave_thick":1,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":0.159809,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0,"wave_b":0,"wave_y":0.9,"ob_r":1,"ob_g":1,"ob_b":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":1.85,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1x":0.6999,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.movez = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q32 = 0;\nm.q7 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.2+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_slow*m.p2)+((1-m.dec_slow)*m.p1)); m.rott=div((m.p2*3.1416),4); m.q27=(m.index+1); m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.zoom=1.0; m.rot=(-0.00*m.index); m.q32=pow(0.996, div(30,m.fps)); m.q5=div((Math.sin(div(m.time,11))+1),5); m.movez=(m.movez+(div(0.06,m.fps)*(1.1+m.q1))); m.q6=m.movez; m.q7=(0.005*Math.sin(div(m.time,15)));\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"vec3 xlat_mutablenoise;\nvec2 xlat_mutablers;\nvec2 xlat_mutablers0;\nvec2 xlat_mutableuv1;\nshader_body\n{\n  vec3 copy_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = 0.5;\n  tmpvar_2.y = q5;\n  xlat_mutableuv1 = (uv - tmpvar_2);\n  float tmpvar_3;\n  tmpvar_3 = (1.0/(xlat_mutableuv1.y));\n  xlat_mutablers0.x = (xlat_mutableuv1.x * tmpvar_3);\n  xlat_mutablers0.y = tmpvar_3;\n  xlat_mutablers.x = xlat_mutablers0.x;\n  xlat_mutablers.y = (tmpvar_3 + (time * 0.3));\n  xlat_mutablenoise = (vec3(dot (texture (sampler_pw_noise_lq, (xlat_mutablers / 63.0)), vec4(0.32, 0.49, 0.29, 0.0))) * (dot (texture (sampler_pw_noise_lq, \n    (xlat_mutablers / 12.0)\n  ), vec4(0.32, 0.49, 0.29, 0.0)) + 0.5));\n  xlat_mutablenoise = (xlat_mutablenoise * (clamp (\n    ((10.0 * xlat_mutablenoise) - 8.0)\n  , 0.0, 1.0) * clamp (\n    (2.0 / tmpvar_3)\n  , 0.0, 1.0)));\n  vec2 tmpvar_4;\n  tmpvar_4.x = uv.x;\n  tmpvar_4.y = (uv.y - (0.024 / tmpvar_3));\n  vec2 tmpvar_5;\n  tmpvar_5.x = uv.x;\n  tmpvar_5.y = (uv.y - (0.012 / tmpvar_3));\n  copy_1 = (texture (sampler_main, tmpvar_4).xyz + texture (sampler_main, tmpvar_5).xyz);\n  vec2 tmpvar_6;\n  tmpvar_6.x = uv.x;\n  tmpvar_6.y = (uv.y - (0.006 / tmpvar_3));\n  copy_1 = (copy_1 + texture (sampler_main, tmpvar_6).xyz);\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ((xlat_mutablenoise + (\n    (((copy_1 / 3.0) * (1.0 + slow_roam_cos).xyz) / 2.0)\n   * 0.99)) - 0.005);\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"vec3 xlat_mutablecont;\nvec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nvec2 xlat_mutablers2;\nshader_body\n{\n  vec2 uv_1;\n  float inten_2;\n  float dist_3;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * aspect.xy);\n  dist_3 = (1.0 - fract(q6));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_4;\n  tmpvar_4 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_4).xyz;\n  xlat_mutableret1 = max (vec3(0.0, 0.0, 0.0), (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (vec3(0.0, 0.0, 0.0), ((\n    -(texture (sampler_main, tmpvar_4).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_4 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((0.5 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_5;\n  tmpvar_5 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_5).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_5).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_5 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  dist_3 = (1.0 - fract((1.0 + q6)));\n  inten_2 = ((dist_3 * (1.0 - dist_3)) * 6.0);\n  vec2 tmpvar_6;\n  tmpvar_6 = fract(((uv_1 * dist_3) + 0.55));\n  xlat_mutableneu = texture (sampler_main, tmpvar_6).xyz;\n  xlat_mutableret1 = max (xlat_mutableret1, (xlat_mutableneu * inten_2));\n  xlat_mutablecont = max (xlat_mutablecont, ((\n    -(texture (sampler_main, tmpvar_6).xyz)\n   + \n    ((texture (sampler_blur1, (tmpvar_6 + q7)).xyz * scale1) + bias1)\n  ) * inten_2));\n  vec2 tmpvar_7;\n  tmpvar_7.y = 5.0;\n  tmpvar_7.x = (time / 12.0);\n  xlat_mutablers2 = ((0.1 * cos(\n    ((uv_1 * 3.0) + tmpvar_7)\n  )) + (0.1 * xlat_mutableret1).xy);\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (((-0.1 * xlat_mutableret1) + (\n    (clamp ((0.005 / sqrt(\n      dot (xlat_mutablers2, xlat_mutablers2)\n    )), 0.0, 1.0) * vec3(18.0, 16.2, 10.8))\n   * \n    (0.2 + (0.3 * xlat_mutableret1))\n  )) + ((\n    dot (xlat_mutablecont, vec3(0.32, 0.49, 0.29))\n   * \n    (1.0 + slow_roam_cos)\n  ) / 2.0).xyz);\n  ret = tmpvar_8.xyz;\n}\n\n"}