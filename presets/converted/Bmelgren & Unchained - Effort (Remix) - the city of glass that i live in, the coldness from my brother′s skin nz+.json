{"baseVals":{"rating":3,"decay":0.999,"echo_zoom":1.028,"echo_alpha":0.5,"echo_orient":1,"wave_mode":6,"additivewave":1,"wave_brighten":0,"wrap":0,"darken_center":1,"darken":1,"wave_a":100,"wave_scale":1.118,"wave_smoothing":0,"wave_mystery":-1,"zoomexp":0.10892,"fshader":1,"zoom":0.7507,"warp":2.7048,"sx":0.979,"sy":0.9999,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"mv_x":5,"mv_y":5,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.mq29 = 0;\nm.cthr = 0;\nm.mq1 = 0;\nm.runtreb = 0;\nm.q25 = 0;\nm.q12 = 0;\nm.q18 = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.vt = 0;\nm.q13 = 0;\nm.q15 = 0;\nm.q29 = 0;\nm.q6 = 0;\nm.q1 = 0;\nm.mq31 = 0;\nm.q5 = 0;\nm.mq21 = 0;\nm.vb = 0;\nm.mq24 = 0;\nm.q9 = 0;\nm.pi23 = 0;\nm.chng = 0;\nm.mq28 = 0;\nm.mq23 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.atime = 0;\nm.q4 = 0;\nm.q16 = 0;\nm.q26 = 0;\nm.mq27 = 0;\nm.mq25 = 0;\nm.runbass = 0;\nm.q19 = 0;\nm.mq22 = 0;\nm.q17 = 0;\nm.vol = 0;\nm.mq26 = 0;\nm.runmids = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q14 = 0;\nm.q3 = 0;\nm.vvm = 0;\nm.q32 = 0;\nm.vvb = 0;\nm.q7 = 0;\nm.q28 = 0;\nm.vm = 0;\nm.q30 = 0;\nm.q20 = 0;\nm.vvt = 0;\nm.q8 = 0;","frame_eqs_str":"m.vb=((m.vb*0.95)+(((1-m.vb)*pow(Math.abs((m.bass-m.bass_att)), 2))*0.02)); m.vvb=((m.vvb*0.95)+(((1-m.vvb)*m.vb)*0.01)); m.vm=((m.vm*0.95)+(((1-m.vm)*pow(Math.abs((m.mid-m.mid_att)), 2))*0.02)); m.vvm=((m.vvm*0.95)+(((1-m.vvm)*m.vm)*0.01)); m.vt=((m.vt*0.95)+(((1-m.vt)*pow(Math.abs((m.treb-m.treb_att)), 2))*0.02)); m.vvt=((m.vvt*0.95)+(((1-m.vvt)*m.vt)*0.01)); m.vvb=Math.min(1, Math.max(0, m.vvb)); m.vvm=Math.min(1, Math.max(0, m.vvm)); m.vvt=Math.min(1, Math.max(0, m.vvt)); m.runbass=(m.runbass+m.vvb); m.runmids=(m.runmids+m.vvm); m.runtreb=(m.runtreb+m.vvt); m.pi23=((4*Math.asin(-1))*0.33333333333333); m.atime=(((m.runtreb+m.runmids)+m.runbass)*1.85); m.q8=((Math.sin((m.atime-(0*m.pi23)))+1)*0.4); m.q9=((Math.sin((m.atime-(1*m.pi23)))+1)*0.4); m.q10=((Math.sin((m.atime-(2*m.pi23)))+1)*0.4); m.q1=(((m.vvt+m.vvm)+m.vvb)*100); m.q2=(((m.vvt+m.vvm)+m.vvb)*100); m.q3=(((m.vvt+m.vvm)+m.vvb)*100); m.q4=(((m.vvt+m.vvm)+m.vvb)*100); m.q5=(((m.vvt+m.vvm)+m.vvb)*100); m.q6=(((m.vvt+m.vvm)+m.vvb)*100); m.q4=(((m.vvt+m.vvm)+m.vvb)*100); m.q5=(((m.vvt+m.vvm)+m.vvb)*100); m.q6=(((m.vvt+m.vvm)+m.vvb)*100); m.q7=(((m.vvt+m.vvm)+m.vvb)*100); m.q11=(((m.vvt+m.vvm)+m.vvb)*100); m.q12=(((m.vvt+m.vvm)+m.vvb)*100); m.q13=(((m.vvt+m.vvm)+m.vvb)*100); m.q14=(((m.vvt+m.vvm)+m.vvb)*100); m.q15=(((m.vvt+m.vvm)+m.vvb)*100); m.q16=(((m.vvt+m.vvm)+m.vvb)*100); m.q17=(((m.vvt+m.vvm)+m.vvb)*100); m.q18=(((m.vvt+m.vvm)+m.vvb)*100); m.q19=(((m.vvt+m.vvm)+m.vvb)*100); m.q20=(((m.vvt+m.vvm)+m.vvb)*100); m.q21=(((m.vvt+m.vvm)+m.vvb)*100); m.q22=(((m.vvt+m.vvm)+m.vvb)*100); m.q23=(((m.vvt+m.vvm)+m.vvb)*100); m.q24=(((m.vvt+m.vvm)+m.vvb)*100); m.q25=(((m.vvt+m.vvm)+m.vvb)*100); m.q26=(((m.vvt+m.vvm)+m.vvb)*100); m.q27=(((m.vvt+m.vvm)+m.vvb)*100); m.q28=(((m.vvt+m.vvm)+m.vvb)*100); m.q29=(((m.vvt+m.vvm)+m.vvb)*100); m.q30=(((m.vvt+m.vvm)+m.vvb)*100); m.q31=(((m.vvt+m.vvm)+m.vvb)*100); m.q32=(((m.vvt+m.vvm)+m.vvb)*100); m.warp=0; m.wave_r=(m.wave_r-(0.6*Math.sin(m.time))); m.wave_b=(0.2+Math.abs(div(Math.cos(m.time),4))); m.wave_r=(m.wave_r+div(Math.atan((2*m.time)),6)); m.wave_mystery=-Math.sin(m.time); m.rot=((0+Math.abs(div(Math.sin(m.time),(m.bass*20))))-(div(m.bass,50)*((above(m.treb_att, 1)!=0)?(2):(-4)))); m.chng=Math.sin((m.time*0.5)); m.cthr=0.9999; m.mq21=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq21)); m.mq22=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq22)); m.mq23=((above(m.chng, m.cthr)!=0)?(rand(3)):(m.mq23)); m.mq24=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq24)); m.mq25=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq25)); m.mq26=((above(m.chng, m.cthr)!=0)?(rand(2)):(m.mq26)); m.mq27=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq27)); m.mq28=((above(m.chng, m.cthr)!=0)?(rand(1)):(m.mq28)); m.mq29=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq29)); m.mq31=((above(m.chng, m.cthr)!=0)?((rand(1)*0.3)):(m.mq31)); m.monitor=m.chng; m.q21=m.mq21; m.q22=m.mq22; m.q23=m.mq23; m.q24=m.mq24; m.q25=m.mq25; m.q26=m.mq26; m.q27=m.mq27; m.q28=m.mq28; m.q29=m.mq29; m.q31=m.mq31; m.monitor=m.mq1; m.vol=((m.bass+m.treb)+m.mid); m.atime=(m.atime+m.vol); m.q11=(0.4+(Math.sin((m.atime*0.006))*0.4)); m.q12=(0.4+(Math.cos((m.atime*0.00613828348))*0.4)); m.q13=(0.4+(Math.sin((m.atime*0.00598593455))*0.4)); m.monitor=m.q13;\n\t\tm.rkeys = ['zoom'];","pixel_eqs_str":"m.zoom=((m.zoom+Math.atan(div(((Math.atan(m.rad)*3)*m.rad),2)))+((above(m.bass_att, 1)!=0)?(-0.1):((0.3*Math.acos(((m.x*2)-1))))));","warp":"shader_body\n{\n  vec2 uv2_1;\n  vec3 ret_2;\n  uv2_1 = (uv + ((texture (sampler_main, \n    (uv + texsize.zw)\n  ).xy - 0.37) * 0.03));\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, uv2_1);\n  ret_2 = tmpvar_3.xyz;\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_1.xyy) * (\n    (q27 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q29)));\n  if (((tmpvar_3.x > (q21 * q13)) && (tmpvar_3.x <= (q24 * q11)))) {\n    ret_2.y = (tmpvar_3.y - (tmpvar_4.x * 0.5));\n  };\n  if (((ret_2.y > (q22 * q11)) && (ret_2.y <= (q25 * q12)))) {\n    ret_2.z = (tmpvar_3.z - (tmpvar_4.y * 0.5));\n  };\n  if (((ret_2.z > (q23 * q12)) && (ret_2.z <= (q26 * q13)))) {\n    ret_2.x = (tmpvar_3.x - (tmpvar_4.z * 0.5));\n  };\n  ret_2 = (ret_2 - 0.004);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n}\n\n","comp":"vec3 xlat_mutableneu;\nvec3 xlat_mutableret1;\nshader_body\n{\n  xlat_mutableneu = neu;\n  vec2 uv_1;\n  uv_1 = uv;\n  float inten_3;\n  float dist_4;\n  float s_5;\n  float ang2_6;\n  vec2 uv2_7;\n  vec3 ret_8;\n  dist_4 = 1.0;\n  inten_3 = 1.0;\n  xlat_mutableret1 = vec3(0.0, 0.0, 0.0);\n  for (int n_2 = 1; n_2 <= 4; n_2++) {\n    vec2 uv3_9;\n    ang2_6 = float((n_2 / 4));\n    s_5 = (1.0 - ang2_6);\n    uv2_7.x = ((uv_1.x * ang2_6) - (uv_1.y * s_5));\n    uv2_7.y = ((uv_1.x * s_5) + (uv_1.y * ang2_6));\n    uv2_7 = (uv2_7 * aspect.yx);\n    uv2_7 = (uv2_7 * 2.0);\n    vec2 tmpvar_10;\n    tmpvar_10 = floor((fract(\n      (uv2_7 * 0.5)\n    ) * 2.0));\n    uv2_7 = ((fract(uv2_7) * (1.0 - tmpvar_10)) + (tmpvar_10 * fract(\n      (1.0 - uv2_7)\n    )));\n    uv_1 = (uv_1 * (q8 * 1.5));\n    dist_4 = (1.0 - fract((\n      (0.25 * float(n_2))\n     + q29)));\n    inten_3 = ((pow (dist_4, 0.5) * (1.0 - \n      (dist_4 * dist_4)\n    )) * 2.0);\n    uv3_9 = (fract((\n      (((3.0 * uv2_7) * dist_4) + 0.5)\n     + q31)) * 2.0);\n    vec2 tmpvar_11;\n    tmpvar_11 = floor((fract(\n      (uv3_9 * 0.5)\n    ) * 2.0));\n    uv3_9 = ((fract(uv3_9) * (1.0 - tmpvar_11)) + (tmpvar_11 * fract(\n      (1.0 - uv3_9)\n    )));\n    uv3_9 = (uv3_9 * (q9 * 1.5));\n    xlat_mutableneu = (texture (sampler_main, uv3_9).xyz + (2.0 * (\n      (texture (sampler_blur1, uv3_9).xyz * scale1)\n     + bias1)));\n    xlat_mutableret1 = max ((xlat_mutableret1 * 0.9), (xlat_mutableneu * inten_3));\n  };\n  ret_8 = ((0.5 * xlat_mutableret1) + (vec3(0.0, 0.0, 0.15) * (0.5 + uv_1.y)));\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_noisevol_hq, (((vec3(0.05, 0.05, 0.0) * uv2_7.xyy) * (\n    (q28 * texsize.xyy)\n   * texsize_noisevol_hq.zww)) + ((time * vec3(0.0, 0.0, 1.0)) * q31)));\n  if (((ret_8.x > (q26 * q13)) && (ret_8.x <= (q23 * q11)))) {\n    ret_8.z = (ret_8.z - (tmpvar_12.x * 0.5));\n  };\n  if (((ret_8.y > (q25 * q11)) && (ret_8.y <= (q22 * q12)))) {\n    ret_8.x = (ret_8.x - (tmpvar_12.y * 0.5));\n  };\n  if (((ret_8.z > (q24 * q12)) && (ret_8.z <= (q21 * q13)))) {\n    ret_8.y = (ret_8.y - (tmpvar_12.z * 0.5));\n  };\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_8;\n  ret = tmpvar_13.xyz;\n}\n\n"}