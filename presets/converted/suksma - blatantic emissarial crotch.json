{"baseVals":{"rating":3,"decay":0.96,"echo_zoom":1.007,"echo_orient":1,"wave_mode":2,"wave_dots":1,"wave_brighten":0,"wrap":0,"darken":1,"wave_a":0.001,"wave_scale":0.012,"wave_smoothing":0.9,"warpanimspeed":0.01,"warpscale":0.01,"warp":0.01,"wave_r":0.5,"wave_g":0.4,"wave_b":0.3,"ob_size":0,"ob_r":0.11,"ob_b":0.1,"ib_size":0,"ib_r":0,"ib_g":0,"ib_b":0,"mv_x":31.2,"mv_y":2.28,"mv_l":2.5,"mv_b":0.8,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":5,"textured":1,"rad":1.08925,"tex_zoom":0.93272,"g":1,"b":1,"a":0.8,"r2":1,"b2":0.85,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.ang=(Math.sin((m.time*0.3))*0.01);"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"usedots":1},"init_eqs_str":"m.n = 0;\nm.ym = 0;\nm.t1 = 0;\nm.scalar = 0;\nm.t3 = 0;\nm.timea = 0;\nm.xm = 0;\nm.t2 = 0;\nm.timeb = 0;\n\n\t\t\tm.rkeys = ['t1','t2'];","frame_eqs_str":"m.t1=0.5; m.t2=0.5; m.scalar=(Math.sin((m.time*0.3))*5); m.t3=m.scalar;","point_eqs_str":"m.x=m.t1; m.y=m.t2; m.n=(m.sample*6.283); m.timea=((m.time*0.3)+m.t3); m.timeb=((m.time*0.1)+m.t3); m.xm=(((Math.sin((m.n*3))*Math.sin(((m.n*5.7)+m.timeb)))*Math.sin(((m.n*11.5)+m.timea)))*Math.sin((m.n*31))); m.ym=(((Math.sin((m.n*3.5))*Math.sin((m.n*1.1)))*Math.sin(((m.n*23)+m.timea)))*Math.sin(((m.n*13.3)+m.timeb))); m.x=(m.x+(m.xm*0.1)); m.y=(m.y+(m.ym*0.1)); m.t1=m.x; m.t2=m.y; m.r=((Math.tan(m.n)*0.5)+0.5); m.r=(Math.min(m.r, 1)*above(m.r, 0)); m.g=((Math.tan((m.n+2.1))*0.5)+0.5); m.g=(Math.min(m.g, 1)*above(m.g, 0)); m.b=((Math.tan((m.n+4.2))*0.5)+0.5); m.b=(Math.min(m.b, 1)*above(m.b, 0));"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.ring = 0;\nm.mv_x=64; m.mv_y=48; m.nut=0; m.stp=0; m.stq=0; m.rtp=0; m.rtq=0; m.wvr=0; m.decay=0; m.dcsp=0;","frame_eqs_str":"m.decay=0.98; m.zoom=1.001; m.warp=0.03;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.ring=((Math.sin(((m.rad*3.14)+0.3))*2)-1); m.ring=Math.max(m.ring, 0); m.ring=(m.ring*m.ring); m.zoom=(1+((m.rad*4)*0.01)); m.sx=(1+(m.ring*0.3)); m.sy=(1-(m.ring*0.3));","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1 = ((uv * texsize.xy) * 0.08);\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_main, (uv - (\n    ((sin(tmpvar_1) / cos(tmpvar_1)) * texsize.zw)\n   * 3.0))).xyz + (vec3(dot (texture (sampler_noise_lq, \n    ((((texsize.xy * texsize_noise_lq.zw).x * uv) * 0.02) + (0.1 * rand_frame).xy)\n  ), vec4(0.32, 0.49, 0.29, 0.0))) / 30.0));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((mix (tmpvar_2, \n    (1.0 - tmpvar_2.zyx)\n  , vec3(0.01, 0.01, 0.01)) - 0.03) - (0.2 * pow (\n    (1.0 - rad)\n  , 18.0)));\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = rad;\n  tmpvar_2.y = uv.y;\n  ret_1 = (texture (sampler_main, tmpvar_2).xyz + ((texture (sampler_blur1, tmpvar_2).xyz * scale1) + bias1));\n  vec3 tmpvar_3;\n  tmpvar_3.x = (bass * 0.4);\n  tmpvar_3.y = (treb * 0.4);\n  tmpvar_3.z = (mid * 0.4);\n  ret_1 = (ret_1 * (tmpvar_3 * 0.95));\n  vec4 tmpvar_4;\n  tmpvar_4.w = 1.0;\n  tmpvar_4.xyz = ret_1;\n  ret = tmpvar_4.xyz;\n}\n\n"}