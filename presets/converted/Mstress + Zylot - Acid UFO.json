{"baseVals":{"rating":0,"gammaadj":1.980001,"decay":0.99,"wave_mode":5,"wave_dots":1,"wave_thick":1,"modwavealphabyvolume":1,"wave_brighten":0,"darken":1,"wave_a":1.179297,"wave_scale":0.491915,"wave_smoothing":0.216,"wave_mystery":-0.42,"warpscale":2.853,"zoom":1.001829,"warp":0.01,"sx":0.999005,"sy":0.999005,"wave_r":0.77,"wave_g":0.6,"wave_b":0.6,"wave_x":0.42,"ob_size":0.02,"ob_a":0.250001,"ib_size":0.155,"ib_a":0.27,"mv_x":30.079998,"mv_y":0,"mv_dx":0.32,"mv_dy":0.42,"mv_l":3.199998,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.ymovn = 0;\nm.cdelay1 = 0;\nm.cdelay2 = 0;\nm.meanbass_att = 0;\nm.q1 = 0;\nm.xmov = 0;\nm.counter2 = 0;\nm.my = 0;\nm.lastbeat = 0;\nm.beatrate = 0;\nm.peakbass_att = 0;\nm.ymov = 0;\nm.colorcounter = 0;\nm.mrad = 0;\nm.runmeanbass = 0;\nm.mx = 0;\nm.volume = 0;\nm.beat = 0;\nm.oldy = 0;\nm.out_x = 0;\nm.treble = 0;\nm.mbass = 0;\nm.q2 = 0;\nm.counter1 = 0;\nm.q3 = 0;\nm.out_y = 0;\nm.oldx = 0;\nm.xmovn = 0;\nm.oldx=0.5; m.oldy=0.5;","frame_eqs_str":"m.warp=0; m.wave_r=Math.min(1, Math.max(0, (0.3*m.bass))); m.wave_g=Math.min(1, Math.max(0, (0.3*m.mid))); m.wave_b=Math.min(1, Math.max(0, (0.3*m.treb))); m.counter1=((equal(m.counter2, 1)!=0)?(((equal(m.counter1, 1)!=0)?(0):((m.counter1+0.2)))):(1)); m.counter2=((equal(m.counter1, 1)!=0)?(((equal(m.counter2, 1)!=0)?(0):((m.counter2+0.2)))):(1)); m.cdelay1=((equal(m.cdelay2, 1)!=0)?(1):(((equal(mod(m.colorcounter,2), 1)!=0)?(((equal(m.counter1, 1)!=0)?(2):(0))):(((equal(m.counter2, 1)!=0)?(2):(0)))))); m.cdelay2=((equal(m.cdelay1, 2)!=0)?(1):(0)); m.colorcounter=((above(m.colorcounter, 7)!=0)?(0):(((equal(m.cdelay1, 1)!=0)?((m.colorcounter+1)):(m.colorcounter)))); m.ob_r=((equal(m.colorcounter, 1)!=0)?(1):(((equal(m.colorcounter, 2)!=0)?(1):(((equal(m.colorcounter, 3)!=0)?(1):(((equal(m.colorcounter, 4)!=0)?(Math.sin((m.counter2+2.1))):(((equal(m.colorcounter, 5)!=0)?(0):(((equal(m.colorcounter, 6)!=0)?(0):(Math.sin(m.counter1))))))))))))); m.ob_g=((equal(m.colorcounter, 1)!=0)?(0):(((equal(m.colorcounter, 2)!=0)?(Math.sin((m.counter2*0.5))):(((equal(m.colorcounter, 3)!=0)?(Math.sin(((m.counter1+1.75)*0.4))):(((equal(m.colorcounter, 4)!=0)?(1):(((equal(m.colorcounter, 5)!=0)?(1):(((equal(m.colorcounter, 6)!=0)?(Math.sin((m.counter2+2))):(0)))))))))))); m.ob_b=((equal(m.colorcounter, 1)!=0)?(Math.sin((m.counter1+2.1))):(((equal(m.colorcounter, 2)!=0)?(0):(((equal(m.colorcounter, 3)!=0)?(0):(((equal(m.colorcounter, 4)!=0)?(0):(((equal(m.colorcounter, 5)!=0)?(Math.sin(m.counter1)):(((equal(m.colorcounter, 6)!=0)?(1):(1)))))))))))); m.mbass=Math.max(m.bass_att, 3); m.xmovn=((((0.1*rand(10))*m.mbass)*0.015)*(1-(2*above(rand(10), 5)))); m.ymovn=(pow((pow((m.mbass*0.015), 2)-pow(m.xmovn, 2)), div(1,2))*(1-(2*above(rand(10), 5)))); m.xmov=((m.beat!=0)?(m.xmovn):((m.xmov*0.9))); m.ymov=((m.beat!=0)?(m.ymovn):((m.ymov*0.9))); m.q1=m.oldx; m.q2=m.oldy; m.out_x=bor(above((m.q1+m.xmov), 0.9), below((m.q1+m.xmov), 0.1)); m.out_y=bor(above((m.q2+m.ymov), 0.9), below((m.q2+m.ymov), 0.1)); m.xmov=(m.xmov+((-2*m.xmov)*m.out_x)); m.ymov=(m.ymov+((-2*m.ymov)*m.out_y)); m.wave_x=(m.q1+m.xmov); m.wave_y=(m.q2+m.ymov); m.q1=m.wave_x; m.q2=m.wave_y; m.oldx=m.q1; m.oldy=m.q2; m.decay=(m.decay-(0.91*m.treble)); m.volume=((0.3*m.bass)+m.mid); m.beatrate=(equal(m.beatrate, 0)+((1-equal(m.beatrate, 0))*(below(m.volume, 0.01)+((1-below(m.volume, 0.01))*m.beatrate)))); m.lastbeat=(m.lastbeat+(equal(m.lastbeat, 0)*m.time)); m.meanbass_att=(0.1*((m.meanbass_att*9)+m.bass_att)); m.runmeanbass=div(((m.runmeanbass*2)+m.bass_att),3); m.peakbass_att=Math.max(m.bass_att, m.peakbass_att); m.beat=(((above(m.volume, 0.8)*above(m.bass_att, (m.runmeanbass*1.1)))*below((m.peakbass_att-m.bass_att), (0.05*m.peakbass_att)))*above((m.time-m.lastbeat), (0.1+(0.5*(m.beatrate-0.1))))); m.beatrate=Math.max(((m.beat!=0)?(((below((m.time-m.lastbeat), (2*m.beatrate))!=0)?((0.1*(((m.beatrate*9)+m.time)-m.lastbeat))):(m.beatrate))):(m.beatrate)), 0.1); m.peakbass_att=((m.beat*m.bass_att)+(((1-m.beat)*m.peakbass_att)*((above((m.time-m.lastbeat), (2*m.beatrate))*0.95)+((1-above((m.time-m.lastbeat), (2*m.beatrate)))*0.995)))); m.lastbeat=((m.beat*m.time)+((1-m.beat)*m.lastbeat)); m.peakbass_att=Math.max(m.peakbass_att, (1.1*m.meanbass_att)); m.q3=(m.volume+m.treb); m.monitor=m.meanbass_att;\n\t\tm.rkeys = ['zoom','dx','rot','dy'];","pixel_eqs_str":"m.mx=(m.x-m.q1); m.my=(m.y-(1-m.q2)); m.mrad=(pow((pow(m.mx, 2)+pow(m.my, 2)), 0.5)*pow(2, 0.5)); m.cx=m.q1; m.cy=(1-m.q2); m.rot=((m.rot+((((below((m.mrad-0.18), 0)*0.5)*Math.sin((m.mrad*40)))*(m.mrad-0.1))*40))-(((((above((m.mrad-0.18), 0)*0.3)*Math.sin((m.mrad*2)))*(m.mrad-0.1))*Math.sin((((m.cx-0.5)*(m.cy-0.5))*6.28)))*m.q3)); m.zoom=(m.zoom-(((above((m.mrad-0.18), 0)*0.05)*m.mrad)*m.q3)); m.dx=(m.dx+((below((m.mrad-0.18), 0)*0.015)*div(m.mx,m.mrad))); m.dy=(m.dy+((below((m.mrad-0.18), 0)*0.015)*div(m.my,m.mrad)));","warp":"","comp":""}