{"baseVals":{"rating":0,"gammaadj":1,"decay":1,"wave_mode":1,"additivewave":1,"wave_dots":1,"wave_thick":1,"wave_brighten":0,"wave_a":0.001,"wave_scale":8.433,"wave_smoothing":0.9,"wave_mystery":-0.3,"modwavealphastart":1.15,"modwavealphaend":1.55,"warpanimspeed":1.348,"warpscale":0.894,"zoom":0.94275,"rot":1.18,"warp":0.03038,"wave_r":0.6,"wave_g":0.6,"wave_b":0.6,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":1,"samples":22,"sep":20,"usedots":1,"thick":1,"scaling":0.16678,"g":0.9,"b":0.5},"init_eqs_str":"m.t1 = 0;\nm.t2 = 0;\nm.t3 = 0;\nm.s1 = 0;\n\n\t\t\tm.rkeys = ['r','g','b'];","frame_eqs_str":"m.r=(m.r+(0.500*((0.60*Math.sin((0.980*m.time)))+(0.40*Math.sin((1.047*m.time)))))); m.g=(m.g+(0.500*((0.60*Math.sin((0.635*m.time)))+(0.40*Math.sin((1.181*m.time)))))); m.b=(m.b+(0.500*((0.60*Math.sin((0.714*m.time)))+(0.40*Math.sin((0.511*m.time)))))); m.s1=Math.max(div(m.bass,m.bass_att), Math.max(div(m.treb,m.treb_att), div(m.mid,m.mid_att))); m.samples=Math.max(0, ((m.s1-1.1)*500));","point_eqs_str":"m.r=(m.r+((((rand(100)*0.01)*2)-1)*0.10)); m.g=(m.g+((((rand(100)*0.01)*2)-1)*0.10)); m.b=(m.b+((((rand(100)*0.01)*2)-1)*0.10)); m.r=Math.max(0, m.r); m.g=Math.max(0, m.g); m.b=Math.max(0, m.b); m.r=Math.min(1, m.r); m.g=Math.min(1, m.g); m.b=Math.min(1, m.b); m.x=(rand(1000)*0.001); m.y=(rand(1000)*0.001); m.t1=m.r; m.t2=m.g; m.t3=m.b;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.decay_rate = 0;\nm.q6 = 0;\nm.rot_sum = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.prev_beat = 0;\nm.is_beat = 0;\nm.min_att = 0;\nm.beat = 0;\nm.decay_to = 0;\nm.rot_sim = 0;\nm.q2 = 0;\nm.q3 = 0;\nm.beat_level = 0;\nm.rot_sum=0; m.q2=((0.07+((0.04*rand(1000))*0.001))+((0.03*rand(1000))*0.001)); m.q3=(1.035+((0.06*((rand(1000)+rand(1000))+rand(1000)))*0.000333));","frame_eqs_str":"m.cx=0.5; m.cy=0.5; m.rot=m.q2; m.zoom=((m.zoom-1)+m.q3); m.rot_sum=(m.rot_sum+m.rot); m.q1=-m.rot_sum; m.q5=Math.cos(m.rot_sum); m.q6=Math.sin(m.rot_sim); m.monitor=m.q2; m.min_att=2.5; m.decay_to=0.8; m.decay_rate=pow(0.9990, m.fps); m.beat=div(m.bass,Math.max(m.min_att, m.bass_att)); m.beat=Math.max(m.beat, div(m.mid,Math.max(m.min_att, m.mid_att))); m.beat=Math.max(m.beat, div(m.treb,Math.max(m.min_att, m.treb_att))); m.beat=Math.max(m.beat, (((m.prev_beat-m.decay_to)*m.decay_rate)+m.decay_to)); m.beat_level=(((m.beat-m.prev_beat)-0.02)*14); m.is_beat=above(m.beat_level, 0.5); m.prev_beat=m.beat;\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec3 tmpvar_1;\n  tmpvar_1.z = 0.0;\n  tmpvar_1.xy = texsize.zw;\n  vec3 tmpvar_2;\n  tmpvar_2 = (tmpvar_1 * 1.5);\n  vec4 tmpvar_3;\n  tmpvar_3 = texture (sampler_main, (uv + tmpvar_2.xz));\n  vec4 tmpvar_4;\n  tmpvar_4 = texture (sampler_main, (uv - tmpvar_2.xz));\n  vec4 tmpvar_5;\n  tmpvar_5 = texture (sampler_main, (uv + tmpvar_2.zy));\n  vec4 tmpvar_6;\n  tmpvar_6 = texture (sampler_main, (uv - tmpvar_2.zy));\n  float tmpvar_7;\n  tmpvar_7 = max (max (dot (tmpvar_3.xyz, vec3(0.32, 0.49, 0.29)), dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29))), max (dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29)), dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29))));\n  vec4 tmpvar_8;\n  tmpvar_8.w = 1.0;\n  tmpvar_8.xyz = (mix (mix (\n    mix (tmpvar_3.xyz, tmpvar_4.xyz, vec3(clamp (((\n      (dot (tmpvar_4.xyz, vec3(0.32, 0.49, 0.29)) - tmpvar_7)\n     + 0.03) * 310.0), 0.0, 1.0)))\n  , tmpvar_5.xyz, vec3(\n    clamp ((((\n      dot (tmpvar_5.xyz, vec3(0.32, 0.49, 0.29))\n     - tmpvar_7) + 0.03) * 310.0), 0.0, 1.0)\n  )), tmpvar_6.xyz, vec3(clamp (\n    (((dot (tmpvar_6.xyz, vec3(0.32, 0.49, 0.29)) - tmpvar_7) + 0.03) * 310.0)\n  , 0.0, 1.0))) - 0.004);\n  ret = tmpvar_8.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec2 uv2_2;\n  uv_1 = (uv - 0.5);\n  uv_1 = (uv_1 * (min (aspect.x, aspect.y) * 0.8));\n  uv_1 = (uv_1 * aspect.xy);\n  float tmpvar_3;\n  tmpvar_3 = sin(q1);\n  float tmpvar_4;\n  tmpvar_4 = cos(q1);\n  uv2_2.x = ((uv_1.x * tmpvar_4) - (uv_1.y * tmpvar_3));\n  uv2_2.y = ((uv_1.x * tmpvar_3) + (uv_1.y * tmpvar_4));\n  uv2_2 = (uv2_2 * aspect.zw);\n  uv2_2 = (uv2_2 + 0.5);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = abs(((texture (sampler_main, uv2_2).xyz * 2.65) + (\n    ((texture (sampler_blur1, uv2_2).xyz * scale1) + bias1)\n   * -2.0)));\n  ret = tmpvar_5.xyz;\n}\n\n"}