{"baseVals":{"rating":5,"gammaadj":1.9,"echo_zoom":1.169,"additivewave":1,"wave_thick":1,"wave_a":0.001,"wave_scale":0.325,"wave_smoothing":0.9,"modwavealphastart":0.88,"modwavealphaend":1.98,"zoom":1.135,"warp":0.01605,"ob_size":0.005,"mv_x":64,"mv_y":48,"mv_l":1,"mv_b":0.9,"mv_a":0},"shapes":[{"baseVals":{"enabled":1,"sides":16,"thickoutline":1,"textured":1,"y":1.8,"rad":0.32544,"ang":0.1884,"tex_ang":0.62832,"tex_zoom":0.77829,"g":1,"b":1,"a":0.9,"r2":1,"b2":1,"a2":0.5,"border_r":0.59,"border_g":0.81,"border_b":0.69,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"num_inst":2,"rad":1.25237,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q29 = 0;\nm.q31 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.g=m.r; m.b=m.r; m.x=m.q28; m.y=m.q29; m.rad=m.q32; m.ang=((equal(m.instance, 0)!=0)?(m.q30):(m.q31));"},{"baseVals":{"enabled":1,"sides":3,"thickoutline":1,"num_inst":2,"rad":1.25237,"tex_ang":0.25133,"tex_zoom":1.136,"r":0.36,"g2":0,"b2":0.2,"border_r":0,"border_g":0,"border_b":0.99,"border_a":0},"init_eqs_str":"m.q25 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.q27 = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.r=(((Math.floor(rand(10))*0.1)*0.5)+0.5); m.g=m.r; m.b=m.r; m.x=m.q23; m.y=m.q24; m.rad=m.q27; m.ang=((equal(m.instance, 0)!=0)?(m.q25):(m.q26));"},{"baseVals":{"enabled":1,"sides":100,"rad":0.0369,"tex_zoom":0.18423,"g":1,"b":1,"r2":1,"b2":0.9,"a2":0.1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.rad=(0.04+(0.005*m.bass_att));"}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":1,"samples":42,"usedots":1,"thick":1,"additive":1,"scaling":81.95444,"smoothing":1,"g":0.4,"b":0},"init_eqs_str":"m.wave_x = 0;\n\n\t\t\tm.rkeys = [];","frame_eqs_str":"m.wave_x=1;","point_eqs_str":"m.x=(Math.floor(rand(1000))*0.001); m.y=(Math.floor(rand(1000))*0.001); m.r=0.9; m.g=1; m.b=1;"},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.q25 = 0;\nm.q29 = 0;\nm.q31 = 0;\nm.q23 = 0;\nm.q24 = 0;\nm.q26 = 0;\nm.q27 = 0;\nm.q32 = 0;\nm.q28 = 0;\nm.q30 = 0;","frame_eqs_str":"m.zoom=((0.935*m.zoom)+(0.04*((0.60*Math.sin((0.339*m.bass_att)))+(0.10*Math.sin((0.276*m.bass_att)))))); m.rot=(m.rot+(0.040*((0.60*Math.sin((0.381*m.time)))+(0.40*Math.sin((0.579*m.time)))))); m.cx=(m.cx+(0.003*((0.60*Math.sin((0.471*m.treb_att)))+(0.40*Math.sin((0.297*m.treb_att)))))); m.cy=(m.cy+(0.003*((0.60*Math.sin((0.379*m.mid_att)))+(0.40*Math.sin((0.351*m.mid_att)))))); m.dx=(m.dx+(0.003*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.rot=(m.rot+(0.02*((Math.sin((m.time*2.134))+Math.sin((m.time*1.7134)))+Math.sin((m.time*2.834))))); m.dx=(m.dx+(0.01*((Math.sin((m.time*1.134))+Math.sin((m.time*0.7134)))+Math.sin((m.time*2.334))))); m.dy=(m.dy+(0.01*((Math.sin((m.time*1.8834))+Math.sin((m.time*1.0144)))+Math.sin((m.time*1.334))))); m.q23=div(Math.floor(rand(1000)),1000); m.q24=div(Math.floor(rand(1000)),1000); m.q25=(div(Math.floor(rand(1000)),1000)*6.28); m.q26=(m.q25-3.14); m.q27=(div(Math.floor(rand(1000)),12000)+0.1); m.q28=div(Math.floor(rand(1000)),1000); m.q29=div(Math.floor(rand(1000)),1000); m.q30=(div(Math.floor(rand(1000)),1000)*6.28); m.q31=(m.q30-3.14); m.q32=(div(Math.floor(rand(1000)),14000)+0.1);\n\t\tm.rkeys = [];","pixel_eqs_str":"","pixel_eqs":"","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, uv).xyz * 0.98);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.05 + (0.9 * uv));\n  ret_2 = ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1);\n  vec2 x_3;\n  x_3 = (3.0 * ret_2.yx);\n  uv_1 = (uv_1 + ((\n    (-0.05 * (sign(x_3) * (1.570796 - (\n      sqrt((1.0 - abs(x_3)))\n     * \n      (1.570796 + (abs(x_3) * (-0.2146018 + (\n        abs(x_3)\n       * \n        (0.08656672 + (abs(x_3) * -0.03102955))\n      ))))\n    ))))\n   + \n    (0.05 * cos((2.0 * ret_2.zz)))\n  ) - 0.025));\n  ret_2 = (texture (sampler_main, uv_1).xyz + ((texture (sampler_blur1, uv_1).xyz * scale1) + bias1));\n  vec3 tmpvar_4;\n  tmpvar_4 = clamp (ret_2, 0.0, 1.0);\n  ret_2 = (tmpvar_4 * tmpvar_4);\n  vec4 tmpvar_5;\n  tmpvar_5.w = 1.0;\n  tmpvar_5.xyz = ret_2;\n  ret = tmpvar_5.xyz;\n}\n\n"}