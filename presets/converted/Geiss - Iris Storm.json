{"baseVals":{"rating":5,"gammaadj":1,"decay":1,"modwavealphabyvolume":1,"wave_a":0.207,"wave_scale":0.747,"wave_smoothing":0,"wave_mystery":0.24,"modwavealphaend":1.17,"warpanimspeed":0.451,"warpscale":3.04,"zoomexp":26.40739,"zoom":1.04971,"dx":0.005,"dy":0.005,"warp":0.09862,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.35,"mv_g":0.35,"mv_b":0.35,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.time2 = 0;","frame_eqs_str":"m.time2=(m.time*17); m.wave_r=(m.wave_r+(0.350*((0.60*Math.sin((0.980*m.time2)))+(0.40*Math.sin((1.047*m.time2)))))); m.wave_g=(m.wave_g+(0.350*((0.60*Math.sin((0.835*m.time2)))+(0.40*Math.sin((1.081*m.time2)))))); m.wave_b=(m.wave_b+(0.350*((0.60*Math.sin((0.814*m.time2)))+(0.40*Math.sin((1.011*m.time2)))))); m.cx=(m.cx+(0.110*((0.60*Math.sin((0.374*m.time)))+(0.40*Math.sin((0.294*m.time)))))); m.cy=(m.cy+(0.110*((0.60*Math.sin((0.393*m.time)))+(0.40*Math.sin((0.223*m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,20), 0))); m.zoom=(m.zoom+(1.2*((0.01*Math.cos(((m.time*0.317)+1)))+(0.01*Math.cos(((m.time*0.1132)+4)))))); m.rot=(m.rot+(0.5*((0.01*Math.cos(((m.time*0.214)+3)))+(0.01*Math.cos(((m.time*0.2732)+2)))))); m.wave_mystery=(-0.1+(0.3*Math.cos((((m.time*0.5)*6)*17.3214)))); m.dx=((m.dx+(0.01*Math.cos(((m.time*1.613)+1))))+(0.01*Math.cos(((m.time*2.303)+5)))); m.dy=((m.dy+(0.01*Math.sin(((m.time*1.119)+3))))+(0.01*Math.cos(((m.time*1.784)+4))));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=(Math.cos(((m.rad*9)+(m.time*3)))*0.07);","warp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_noise_hq, (rand_frame.xy + ((uv * 3.3) * (texsize.xy * texsize_noise_hq.zw)))).xy * texsize.zw)\n   * 2.0))).xyz - 0.004);\n  ret = tmpvar_1.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 ret_1;\n  vec4 tmpvar_2;\n  tmpvar_2 = texture (sampler_blur1, uv);\n  ret_1 = (abs((texture (sampler_main, uv).xyz - \n    ((tmpvar_2.xyz * scale1) + bias1)\n  )) * 12.0);\n  ret_1 = (ret_1 + ((tmpvar_2.xyz * scale1) + bias1));\n  ret_1 = (ret_1 * 2.0);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ret_1;\n  ret = tmpvar_3.xyz;\n}\n\n"}