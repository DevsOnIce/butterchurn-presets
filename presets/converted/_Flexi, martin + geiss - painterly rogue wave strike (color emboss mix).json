{"baseVals":{"rating":0,"gammaadj":1.56,"decay":1,"echo_zoom":0.362,"echo_orient":1,"wave_thick":1,"wave_brighten":0,"darken":1,"wave_a":0.001,"wave_scale":1.599,"wave_smoothing":0,"wave_mystery":-0.5,"modwavealphastart":2,"modwavealphaend":2,"warpscale":0.107,"zoomexp":0.1584,"fshader":1,"warp":0.01,"wave_r":0.51,"wave_g":0.5,"ob_size":0,"ob_a":1,"ib_r":0,"ib_g":0,"ib_b":0,"ib_a":1,"mv_x":64,"mv_y":48,"mv_l":0.5,"mv_r":0,"mv_g":0,"mv_b":0,"mv_a":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.cx1 = 0;\nm.y3 = 0;\nm.y1 = 0;\nm.cy1 = 0;\nm.x1 = 0;\nm.q6 = 0;\nm.x3 = 0;\nm.dir = 0;\nm.r = 0;\nm.x2 = 0;\nm.y2 = 0;\nm.q7 = 0;","frame_eqs_str":"m.ib_r=((Math.sin(((m.time*1.25)*4))*0.3)+0.7); m.ib_g=((Math.sin((m.time*4))*0.3)+0.3); m.ib_b=((Math.sin((div(m.time,3)*4))*0.5)+0.5); m.wave_r=(1-m.ib_r); m.wave_g=(1-m.ib_g); m.wave_b=(1-m.ib_b); m.wave_x=(0.5+(Math.sin((m.time*3))*0.3)); m.wave_y=(0.5+(Math.cos((m.time*2.187))*0.3)); m.q6=Math.cos((m.time*0.77)); m.q7=Math.cos((m.time*0.57));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.r=div(m.bass,4); m.cx1=(0.5+(Math.sin((m.time*0.618))*0.2)); m.cy1=(0.5+(Math.cos((m.time*1.618))*0.2)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((m.bass*((m.r*m.r)-(m.d*m.d)))*0.3); m.x1=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y1=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((m.time*2.618))*0.3)); m.cy1=(0.5+(Math.cos((m.time*3.14))*0.3)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.mid*((m.r*m.r)-(m.d*m.d)))*0.3); m.x2=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y2=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.cx1=(0.5+(Math.sin((-m.time*2.618))*0.4)); m.cy1=(0.5+(Math.cos((-m.time*1.14))*0.4)); m.d=sqrt((((m.x-m.cx1)*(m.x-m.cx1))+((m.y-m.cy1)*(m.y-m.cy1)))); m.dir=((-m.treb*((m.r*m.r)-(m.d*m.d)))*0.3); m.x3=((above(m.d, m.r)!=0)?(0):((Math.sin((m.y-m.cy1))*m.dir))); m.y3=((above(m.d, m.r)!=0)?(0):((-Math.sin((m.x-m.cx1))*m.dir))); m.dx=((m.x1+m.x2)+m.x3); m.dy=((m.y1+m.y2)+m.y3);","warp":"shader_body\n{\n  vec2 tmpvar_1;\n  tmpvar_1.x = bass;\n  tmpvar_1.y = treb;\n  vec4 tmpvar_2;\n  tmpvar_2.w = 1.0;\n  tmpvar_2.xyz = (texture (sampler_main, (uv + (\n    (texture (sampler_main, (mix (uv, uv_orig, vec2(-1.0, -1.0)) + texsize.zw)).xy - 0.37)\n   * \n    (0.005 + (0.045 * clamp ((tmpvar_1 - 1.0), 0.0, 1.0)))\n  ))).xyz - 0.001);\n  ret = tmpvar_2.xyz;\n}\n\n","comp":"shader_body\n{\n  vec3 N_1;\n  vec3 ret_2;\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  N_1.x = (((\n    (texture (sampler_blur2, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale2)\n   + bias2)).x * 0.7);\n  N_1.y = (((\n    (texture (sampler_blur2, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\n   + bias2) - (\n    (texture (sampler_blur2, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale2)\n   + bias2)).x * 0.7);\n  N_1.x = (N_1.x + ((\n    ((texture (sampler_blur1, (uv + (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - (vec2(1.0, 0.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ).x * 0.3));\n  N_1.y = (N_1.y + ((\n    ((texture (sampler_blur1, (uv + (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n   - \n    ((texture (sampler_blur1, (uv - (vec2(0.0, 1.0) * tmpvar_3))).xyz * scale1) + bias1)\n  ).x * 0.3));\n  N_1.z = -0.05;\n  vec3 tmpvar_4;\n  tmpvar_4 = normalize(N_1);\n  N_1 = tmpvar_4;\n  vec3 tmpvar_5;\n  tmpvar_5.z = -0.8;\n  tmpvar_5.x = q6;\n  tmpvar_5.y = q7;\n  vec3 tmpvar_6;\n  tmpvar_6.z = 0.0;\n  tmpvar_6.xy = ((uv_orig * 2.0) - 1.0);\n  vec3 tmpvar_7;\n  tmpvar_7 = normalize((tmpvar_5 - tmpvar_6));\n  vec3 tmpvar_8;\n  tmpvar_8 = normalize((tmpvar_6 - vec3(0.0, 0.0, 1.0)));\n  ret_2 = (vec3(clamp (dot (tmpvar_4, tmpvar_7), 0.0, 1.0)) * normalize((\n    ((texture (sampler_blur3, uv_orig).xyz * scale3) + bias3)\n   + 0.05)));\n  ret_2 = (ret_2 + (pow (\n    clamp (dot (normalize((tmpvar_8 + \n      ((2.0 * tmpvar_4) * dot (tmpvar_8, tmpvar_4))\n    )), tmpvar_7), 0.0, 1.0)\n  , 16.0) * 0.5));\n  vec4 tmpvar_9;\n  tmpvar_9.w = 1.0;\n  tmpvar_9.xyz = ret_2;\n  ret = tmpvar_9.xyz;\n}\n\n"}