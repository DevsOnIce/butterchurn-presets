{"baseVals":{"rating":3,"gammaadj":1.9,"echo_zoom":1.169,"echo_orient":1,"wave_mode":5,"additivewave":1,"wave_a":0,"wave_scale":0.9,"wave_smoothing":0.63,"wave_mystery":1,"modwavealphastart":2,"modwavealphaend":2,"warpscale":2.853,"rot":0.006,"warp":0,"wave_r":0.65,"wave_g":0.65,"wave_b":0.65,"ob_size":0.005,"mv_x":0,"mv_y":48,"mv_dx":-0.941,"mv_dy":0.426,"mv_l":5,"mv_r":0.316,"mv_g":0.078,"mv_b":0.942,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.d = 0;\nm.pump = 0;\nm.w = 0;\nm.h3 = 0;\nm.q12 = 0;\nm.num_b0 = 0;\nm.q6 = 0;\nm.bt = 0;\nm.q1 = 0;\nm.q5 = 0;\nm.c_x = 0;\nm.c_y = 0;\nm.num_att = 0;\nm.v = 0;\nm.mm = 0;\nm.h2 = 0;\nm.tt = 0;\nm.bm = 0;\nm.q11 = 0;\nm.q10 = 0;\nm.q4 = 0;\nm.t = 0;\nm.mt = 0;\nm.r = 0;\nm.num_b = 0;\nm.mx = 0;\nm.mn = 0;\nm.beat = 0;\nm.num0 = 0;\nm.num = 0;\nm.bb = 0;\nm.q2 = 0;\nm.h1 = 0;\nm.q3 = 0;\nm.c_x=0.5; m.c_y=0.5; m.v=0.05;","frame_eqs_str":"m.q1=m.aspectx; m.q2=m.aspecty; m.rot=0; m.zoom=1; m.warp=0; m.num0=((m.beat*(Math.abs((m.num-m.num_att))+m.pump))+(bnot(m.beat)*m.num0)); m.pump=((m.beat*((Math.sin(m.t)*0.1)+0.1))+(bnot(m.beat)*m.pump)); m.pump=(m.pump*0.98); m.num_b0=m.num_b; m.num=Math.abs((((m.bass-m.bass_att)+(m.mid-m.mid_att))+(m.treb-m.treb_att))); m.num_att=((m.num_att*0.95)+(m.num*0.05)); m.num_b=(above(m.num, (1-m.pump))*above(Math.abs((m.num-m.num_att)), m.num0)); m.beat=bnot(equal(m.num_b0, m.num_b)); m.t=(m.t+(m.num*0.1)); m.r=((m.beat!=0)?(((0.02*(Math.floor(rand(200))-100))*0.01)):(m.r)); m.rot=m.r; m.c_x=((m.beat!=0)?((0.5+((0.5*(Math.floor(rand(200))-100))*0.01))):(m.c_x)); m.c_y=((m.beat!=0)?((0.5+((0.5*(Math.floor(rand(200))-100))*0.01))):(m.c_y)); m.v=((m.beat!=0)?((0.035+((0.025*(Math.floor(rand(200))-100))*0.01))):(m.v)); m.q3=m.c_x; m.q4=m.c_y; m.q5=m.v; m.q6=m.beat; m.bb=((m.bb*0.98)+(m.bass*0.5)); m.mm=((m.mm*0.98)+(m.mid*0.5)); m.tt=((m.tt*0.98)+(m.treb*0.5)); m.mx=Math.max(Math.max(m.bb, m.mm), m.tt); m.mn=Math.min(Math.min(m.bb, m.mm), m.tt); m.h1=div((m.bb-m.mn),(m.mx-m.mn)); m.h2=div((m.mm-m.mn),(m.mx-m.mn)); m.h3=div((m.tt-m.mn),(m.mx-m.mn)); m.v=div(0.2,m.fps); m.bm=(m.bm+((m.h1-m.h2)*m.v)); m.mt=(m.mt+((m.h2-m.h3)*m.v)); m.bt=(m.bt+((m.h1-m.h3)*m.v)); m.w=m.bm; m.q3=Math.sin(m.w); m.q4=Math.cos(m.w); m.q10=m.bm; m.q11=m.mt; m.q12=m.bt;\n\t\tm.rkeys = [];","pixel_eqs_str":"m.d=(pow(sqrt((sqr((m.x-m.q3))+sqr((m.y-m.q4)))), 0.5)-0); m.v=m.q5; m.dx=((m.v*(m.x-m.q3))*m.d); m.dy=((m.v*(m.y-m.q4))*m.d);","warp":"shader_body\n{\n  vec3 ret_1;\n  vec3 tmpvar_2;\n  tmpvar_2 = (texture (sampler_noise_lq, ((\n    (uv_orig * texsize.xy)\n   * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5);\n  vec2 tmpvar_3;\n  tmpvar_3 = (texsize.zw * 4.0);\n  vec3 tmpvar_4;\n  tmpvar_4 = (((texture (sampler_blur1, \n    (uv + (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(1.0, 0.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec3 tmpvar_5;\n  tmpvar_5 = (((texture (sampler_blur1, \n    (uv + (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1) - ((texture (sampler_blur1, \n    (uv - (vec2(0.0, 1.0) * tmpvar_3))\n  ).xyz * scale1) + bias1));\n  vec2 tmpvar_6;\n  tmpvar_6 = mix (uv_orig, uv, vec2(0.35, 0.35));\n  vec2 tmpvar_7;\n  tmpvar_7.x = tmpvar_4.y;\n  tmpvar_7.y = tmpvar_5.y;\n  vec2 tmpvar_8;\n  tmpvar_8 = (tmpvar_6 - ((tmpvar_7 * texsize.zw) * 4.0));\n  vec2 tmpvar_9;\n  tmpvar_9.x = tmpvar_4.z;\n  tmpvar_9.y = tmpvar_5.z;\n  vec2 tmpvar_10;\n  tmpvar_10 = (tmpvar_6 - ((tmpvar_9 * texsize.zw) * 4.0));\n  vec4 tmpvar_11;\n  tmpvar_11 = texture (sampler_blur1, uv);\n  vec4 tmpvar_12;\n  tmpvar_12 = texture (sampler_main, uv_orig);\n  ret_1.y = (((\n    (texture (sampler_main, tmpvar_8).y - (((\n      (tmpvar_11.xyz * scale1)\n     + bias1).y - texture (sampler_main, tmpvar_8).y) * 0.024))\n   - 0.009) + (\n    (1.0 - tmpvar_12.x)\n   * 0.014)) + (tmpvar_2 * 0.02)).x;\n  ret_1.z = (((\n    (texture (sampler_main, tmpvar_10).z - (((\n      (tmpvar_11.xyz * scale1)\n     + bias1).z - texture (sampler_main, tmpvar_10).z) * 0.024))\n   - 0.009) + (tmpvar_12.x * 0.014)) + (tmpvar_2 * 0.02)).x;\n  ret_1.x = texture (sampler_fc_main, (uv + ((tmpvar_2.xy * texsize.zw) * 0.5))).x;\n  ret_1.x = (ret_1.x + ((\n    (ret_1.x - ((texture (sampler_blur3, uv).xyz * scale3) + bias3).x)\n   * 0.4) + (tmpvar_2 * 0.0052)).x);\n  vec4 tmpvar_13;\n  tmpvar_13.w = 1.0;\n  tmpvar_13.xyz = ret_1;\n  ret = tmpvar_13.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv_1;\n  vec3 ret_2;\n  uv_1 = (0.5 + ((uv - 0.5) * 1.5));\n  vec2 tmpvar_3;\n  tmpvar_3 = ((uv_1 - 0.5) * aspect.xy);\n  vec2 tmpvar_4;\n  tmpvar_4.x = ((q4 * tmpvar_3.x) - (q3 * tmpvar_3.y));\n  tmpvar_4.y = ((q3 * tmpvar_3.x) + (q4 * tmpvar_3.y));\n  vec2 tmpvar_5;\n  tmpvar_5 = (0.5 + (tmpvar_4 * 2.0));\n  vec2 numerator_6;\n  numerator_6 = (tmpvar_5 - vec2(0.0, 0.5));\n  vec2 denominator_7;\n  denominator_7 = (tmpvar_5 - vec2(1.0, 0.5));\n  vec2 tmpvar_8;\n  tmpvar_8.x = ((numerator_6.x * denominator_7.x) + (numerator_6.y * denominator_7.y));\n  tmpvar_8.y = ((numerator_6.y * denominator_7.x) - (numerator_6.x * denominator_7.y));\n  vec2 tmpvar_9;\n  tmpvar_9 = (((tmpvar_8 / \n    ((denominator_7.x * denominator_7.x) + (denominator_7.y * denominator_7.y))\n  ) + 0.5) - vec2(0.5, 0.5));\n  float tmpvar_10;\n  tmpvar_10 = sqrt(dot (tmpvar_9, tmpvar_9));\n  float tmpvar_11;\n  float tmpvar_12;\n  tmpvar_12 = (min (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0) / max (abs(\n    (tmpvar_9.x / tmpvar_9.y)\n  ), 1.0));\n  float tmpvar_13;\n  tmpvar_13 = (tmpvar_12 * tmpvar_12);\n  tmpvar_13 = (((\n    ((((\n      ((((-0.01213232 * tmpvar_13) + 0.05368138) * tmpvar_13) - 0.1173503)\n     * tmpvar_13) + 0.1938925) * tmpvar_13) - 0.3326756)\n   * tmpvar_13) + 0.9999793) * tmpvar_12);\n  tmpvar_13 = (tmpvar_13 + (float(\n    (abs((tmpvar_9.x / tmpvar_9.y)) > 1.0)\n  ) * (\n    (tmpvar_13 * -2.0)\n   + 1.570796)));\n  tmpvar_11 = (tmpvar_13 * sign((tmpvar_9.x / tmpvar_9.y)));\n  if ((abs(tmpvar_9.y) > (1e-08 * abs(tmpvar_9.x)))) {\n    if ((tmpvar_9.y < 0.0)) {\n      if ((tmpvar_9.x >= 0.0)) {\n        tmpvar_11 += 3.141593;\n      } else {\n        tmpvar_11 = (tmpvar_11 - 3.141593);\n      };\n    };\n  } else {\n    tmpvar_11 = (sign(tmpvar_9.x) * 1.570796);\n  };\n  vec2 tmpvar_14;\n  tmpvar_14.x = (tmpvar_11 * 0.1591549);\n  tmpvar_14.y = tmpvar_10;\n  vec2 tmpvar_15;\n  tmpvar_15.x = ((tmpvar_14.x * 2.0) + q11);\n  tmpvar_15.y = ((0.35 * log(tmpvar_10)) + q12);\n  vec2 tmpvar_16;\n  tmpvar_16 = (0.5 + (0.5 - abs(\n    ((fract((tmpvar_15 * 0.5)) * 2.0) - 1.0)\n  )));\n  uv_1 = tmpvar_16;\n  vec2 tmpvar_17;\n  tmpvar_17.x = sin(((tmpvar_16.y * 31.0) + (0.59 * time)));\n  tmpvar_17.y = sin(((tmpvar_16.x * 26.0) + (0.37 * time)));\n  vec2 tmpvar_18;\n  tmpvar_18 = (tmpvar_16 + (0.03 * tmpvar_17));\n  ret_2 = (max (texture (sampler_main, tmpvar_16).xyz, texture (sampler_main, tmpvar_18).xyz) * 1.33);\n  ret_2 = (pow (vec3(dot (ret_2, vec3(0.32, 0.49, 0.29))), vec3(2.5, 2.5, 2.5)) + ((texture (sampler_blur1, \n    ((tmpvar_16 + tmpvar_18) / 2.0)\n  ).xyz * scale1) + bias1));\n  vec4 tmpvar_19;\n  tmpvar_19.w = 1.0;\n  tmpvar_19.xyz = ret_2;\n  ret = tmpvar_19.xyz;\n}\n\n"}