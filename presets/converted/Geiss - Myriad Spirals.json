{"baseVals":{"rating":0,"gammaadj":1.9,"decay":0.98,"echo_zoom":1.169,"echo_alpha":0,"echo_orient":0,"wave_mode":6,"additivewave":0,"wave_dots":0,"wave_thick":1,"modwavealphabyvolume":0,"wave_brighten":1,"wrap":1,"darken_center":0,"red_blue":0,"brighten":0,"darken":0,"solarize":0,"invert":0,"wave_a":0.433,"wave_scale":1.91,"wave_smoothing":0,"wave_mystery":-0.08,"modwavealphastart":1.03,"modwavealphaend":1.61,"warpanimspeed":1.729,"warpscale":2.108,"zoomexp":1.64463,"fshader":0,"zoom":1.01901,"rot":0,"cx":0.5,"cy":0.5,"dx":0,"dy":0,"warp":0.45599,"sx":1,"sy":1,"wave_r":0.5,"wave_g":0.5,"wave_b":0.5,"wave_x":0.5,"wave_y":0.5,"ob_size":0.01,"ob_r":1,"ob_g":0.5,"ob_b":0.25,"ob_a":0.16,"ib_size":0.01,"ib_r":0.25,"ib_g":0.25,"ib_b":0.25,"ib_a":0,"mv_x":12,"mv_y":9,"mv_dx":0,"mv_dy":0,"mv_l":0.9,"mv_r":1,"mv_g":1,"mv_b":1,"mv_a":0,"b1n":0,"b2n":0,"b3n":0,"b1x":1,"b2x":1,"b3x":1,"b1ed":0.25},"shapes":[{"baseVals":{"enabled":1,"sides":30,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.49138,"ang":0,"tex_ang":0,"tex_zoom":1,"r":0.7,"g":0.7,"b":1,"a":0.17,"r2":0,"g2":0.2,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"m.rad=(m.rad+(0.02*Math.cos((m.time*3))));"},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""},{"baseVals":{"enabled":0,"sides":4,"additive":0,"thickoutline":0,"textured":0,"num_inst":1,"x":0.5,"y":0.5,"rad":0.1,"ang":0,"tex_ang":0,"tex_zoom":1,"r":1,"g":0,"b":0,"a":1,"r2":0,"g2":1,"b2":0,"a2":0,"border_r":1,"border_g":1,"border_b":1,"border_a":0.1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":""}],"waves":[{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""},{"baseVals":{"enabled":0,"samples":512,"sep":0,"spectrum":0,"usedots":0,"thick":0,"additive":0,"scaling":1,"smoothing":0.5,"r":1,"g":1,"b":1,"a":1},"init_eqs_str":"m.rkeys = [];","frame_eqs_str":"","point_eqs_str":""}],"init_eqs_str":"m.new_warp = 0;\nm.decay_rate = 0;\nm.s = 0;\nm.my_zoom = 0;\nm.rg = 0;\nm.q9 = 0;\nm.bass_thresh = 0;\nm.new_s = 0;\nm.my_s = 0;\nm.new_cy = 0;\nm.my_rot = 0;\nm.prev_beat = 0;\nm.is_beat = 0;\nm.new_rot = 0;\nm.q11 = 0;\nm.dx_residual = 0;\nm.my_cx = 0;\nm.min_att = 0;\nm.beat = 0;\nm.decay_to = 0;\nm.my_warp = 0;\nm.my_cy = 0;\nm.new_cx = 0;\nm.beat_level = 0;\nm.new_zoom = 0;\nm.dy_residual = 0;\nm.q10=0; m.my_rot=0; m.my_zoom=1; m.s=0.5;","frame_eqs_str":"m.wave_r=(0.85+(0.25*Math.sin(((0.437*m.time)+1)))); m.wave_g=(0.85+(0.25*Math.sin(((0.544*m.time)+2)))); m.wave_b=(0.85+(0.25*Math.sin(((0.751*m.time)+3)))); m.dx=(m.dx+(0.003*((0.60*Math.sin((0.234*m.time)))+(0.40*Math.sin((0.277*m.time)))))); m.dy=(m.dy+(0.003*((0.60*Math.sin((0.284*m.time)))+(0.40*Math.sin((0.247*m.time)))))); m.decay=(m.decay-(0.01*equal(mod(m.frame,6), 0))); m.dx=(m.dx+m.dx_residual); m.dy=(m.dy+m.dy_residual); m.bass_thresh=((above(m.bass_att, m.bass_thresh)*2)+((1-above(m.bass_att, m.bass_thresh))*(((m.bass_thresh-1.3)*0.96)+1.3))); m.dx_residual=(((equal(m.bass_thresh, 2.13)*0.016)*Math.sin((m.time*7)))+((1-equal(m.bass_thresh, 2.13))*m.dx_residual)); m.dy_residual=(((equal(m.bass_thresh, 2.13)*0.012)*Math.sin((m.time*9)))+((1-equal(m.bass_thresh, 2.13))*m.dy_residual)); m.wave_x=(m.wave_x-(m.dx_residual*7)); m.wave_y=(m.wave_y-(m.dy_residual*7)); m.wave_mystery=(m.time*37.03); m.new_rot=(m.rot+(0.013*((0.60*Math.sin((17.381*m.time)))+(0.40*Math.sin((11.579*m.time)))))); m.new_zoom=(m.zoom+(0.01*((0.60*Math.sin(((20.1934*m.time)+3)))+(0.40*Math.sin(((16.307*m.time)+9)))))); m.new_warp=(m.warp+(0.34*((0.60*Math.sin((13.5442*m.time)))+(0.40*Math.sin((22.543*m.time)))))); m.new_cx=(m.cx+(0.310*((0.60*Math.sin((16.374*m.time)))+(0.40*Math.sin((26.294*m.time)))))); m.new_cy=(m.cy+(0.310*((0.60*Math.sin((18.393*m.time)))+(0.40*Math.sin((37.223*m.time)))))); m.new_s=(rand(100)*0.01); m.rg=Math.max((m.rg*0.77), (0.02+(0.5*Math.min(2, (Math.max(0, (m.mid_att-1))*1.3))))); m.q9=m.rg; m.decay_rate=pow(0.993, m.fps); m.min_att=2.5; m.decay_to=1.0; m.beat=div(m.bass,Math.max(m.min_att, m.bass_att)); m.beat=Math.max(m.beat, div(m.mid,Math.max(m.min_att, m.mid_att))); m.beat=Math.max(m.beat, div(m.treb,Math.max(m.min_att, m.treb_att))); m.beat=Math.max(m.beat, (((m.prev_beat-m.decay_to)*m.decay_rate)+m.decay_to)); m.beat_level=(((m.beat-m.prev_beat)-0.07)*24); m.is_beat=above(m.beat_level, 0.5); m.prev_beat=m.beat; m.wave_a=(m.beat_level+1.65); m.rot=(((1-m.is_beat)*m.my_rot)+(m.is_beat*m.new_rot)); m.zoom=(((1-m.is_beat)*m.my_zoom)+(m.is_beat*m.new_zoom)); m.warp=(((1-m.is_beat)*m.my_warp)+(m.is_beat*m.new_warp)); m.cx=(((1-m.is_beat)*m.my_cx)+(m.is_beat*m.new_cx)); m.cy=(((1-m.is_beat)*m.my_cy)+(m.is_beat*m.new_cy)); m.s=(((1-m.is_beat)*m.my_s)+(m.is_beat*m.new_s)); m.my_rot=m.rot; m.my_zoom=m.zoom; m.my_warp=m.warp; m.my_cx=m.cx; m.my_cy=m.cy; m.my_s=m.s; m.q11=m.s;\n\t\tm.rkeys = ['zoom'];","pixel_eqs_str":"m.zoom=(m.zoom+(Math.cos((m.ang*7))*0.02));","warp":"shader_body\n{\n  vec3 ret_1;\n  float tmpvar_2;\n  tmpvar_2 = (0.01 + (q11 * q11));\n  vec3 tmpvar_3;\n  tmpvar_3.xy = (((\n    (uv_orig * 4.0)\n   * texsize.xy) / 850.0) * tmpvar_2);\n  tmpvar_3.z = (time * 0.1);\n  vec2 tmpvar_4;\n  vec2 tmpvar_5;\n  tmpvar_5 = (uv_orig * texsize.xy);\n  tmpvar_4 = (((0.6 * tmpvar_5) * tmpvar_2) + (texture (sampler_noisevol_hq, tmpvar_3).xy * 9.0));\n  vec2 tmpvar_6;\n  tmpvar_6.x = cos(tmpvar_4.y);\n  tmpvar_6.y = cos(tmpvar_4.x);\n  ret_1 = texture (sampler_main, (uv + ((\n    (tmpvar_6 * texsize.zw)\n   * 1.7) / tmpvar_2))).xyz;\n  ret_1 = (ret_1 * 0.99);\n  ret_1 = (ret_1 + (19.52 * (\n    (texture (sampler_noise_lq, ((tmpvar_5 * texsize_noise_lq.zw) + rand_frame.xy)).xyz - 0.5)\n   / 256.0)));\n  ret_1 = mix (ret_1, ret_1.zxy, vec3(0.2, 0.2, 0.2));\n  vec4 tmpvar_7;\n  tmpvar_7.w = 1.0;\n  tmpvar_7.xyz = ret_1;\n  ret = tmpvar_7.xyz;\n}\n\n","comp":"shader_body\n{\n  vec4 tmpvar_1;\n  tmpvar_1.w = 1.0;\n  tmpvar_1.xyz = ((texture (sampler_main, uv).xyz * 1.5) - 0.1);\n  ret = tmpvar_1.xyz;\n}\n\n"}