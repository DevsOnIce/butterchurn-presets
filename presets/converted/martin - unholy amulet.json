{"baseVals":{"rating":3,"gammaadj":1.980001,"decay":0.5,"echo_zoom":0.999998,"echo_alpha":0.5,"echo_orient":3,"modwavealphabyvolume":1,"darken":1,"wave_a":0.001,"wave_scale":10.437056,"wave_smoothing":0.45,"wave_mystery":0.08,"modwavealphastart":0,"modwavealphaend":1.32,"warpanimspeed":1.4595,"warpscale":2.0067,"zoom":0.9999,"warp":0.01,"sx":0.9999,"wave_r":0,"wave_g":0.99,"ob_size":0,"ob_a":1,"ib_size":0.26,"mv_x":64,"mv_y":48,"mv_l":0,"mv_r":0.4999,"mv_g":0.4999,"mv_b":0.4999,"mv_a":0,"b1ed":0},"shapes":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"waves":[{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}},{"baseVals":{"enabled":0}}],"init_eqs_str":"m.index2 = 0;\nm.index4 = 0;\nm.index = 0;\nm.q22 = 0;\nm.q21 = 0;\nm.q1 = 0;\nm.dec_med = 0;\nm.q5 = 0;\nm.index3 = 0;\nm.rott = 0;\nm.is_beat = 0;\nm.q23 = 0;\nm.k1 = 0;\nm.q24 = 0;\nm.dec_slow = 0;\nm.q4 = 0;\nm.q26 = 0;\nm.p2 = 0;\nm.avg = 0;\nm.beat = 0;\nm.p1 = 0;\nm.peak = 0;\nm.q2 = 0;\nm.q27 = 0;\nm.q3 = 0;\nm.t0 = 0;\nm.q28 = 0;\nm.q20 = 0;","frame_eqs_str":"m.dec_med=pow(0.9, div(30,m.fps)); m.dec_slow=pow(0.99, div(30,m.fps)); m.beat=Math.max(Math.max(m.bass, m.mid), m.treb); m.avg=((m.avg*m.dec_slow)+(m.beat*(1-m.dec_slow))); m.is_beat=(above(m.beat, ((0.5+m.avg)+m.peak))*above(m.time, (m.t0+0.2))); m.t0=((m.is_beat*m.time)+((1-m.is_beat)*m.t0)); m.peak=((m.is_beat*m.beat)+(((1-m.is_beat)*m.peak)*m.dec_med)); m.index=mod((m.index+m.is_beat),8); m.index2=mod((m.index2+(m.is_beat*bnot(m.index))),4); m.index3=mod((m.index3+((m.is_beat*bnot(m.index))*bnot(m.index2))),3); m.monitor=m.index4; m.q20=m.avg; m.q21=m.beat; m.q22=m.peak; m.q23=m.index; m.q24=m.is_beat; m.q26=((m.bass+m.mid)+m.treb); m.k1=(m.is_beat*equal(m.index, 0)); m.p1=((m.k1*(m.p1+1))+((1-m.k1)*m.p1)); m.p2=((m.dec_med*m.p2)+((1-m.dec_med)*m.p1)); m.rott=div((m.p2*3.14159265359),4); m.q27=(8-m.index); m.q28=m.index2; m.q1=Math.cos(m.rott); m.q2=Math.sin(m.rott); m.q3=-m.q2; m.q4=m.q1; m.q5=(m.q1*bnot(m.index2));\n\t\tm.rkeys = [];","pixel_eqs_str":"m.rot=((0.04*m.q5)*Math.sin(((m.q22*4)*m.rad))); m.zoom=(1+0.008);","warp":"shader_body\n{\n  vec3 tmpvar_1;\n  tmpvar_1 = ((texture (sampler_blur1, uv).xyz * scale1) + bias1);\n  vec3 theta_2;\n  theta_2 = ((0.474 * tmpvar_1) * (q21 * q21));\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = ((dot (\n    (texture (sampler_main, uv).xyz + 0.015)\n  , vec3(0.32, 0.49, 0.29)) * (1.0 - \n    (0.1 * abs((sin(theta_2) / cos(theta_2))))\n  )) - ((0.02 / \n    (rad + 0.02)\n  ) * tmpvar_1));\n  ret = tmpvar_3.xyz;\n}\n\n","comp":"shader_body\n{\n  vec2 uv1_1;\n  vec2 tmpvar_2;\n  tmpvar_2.x = (texture (sampler_main, (uv - vec2(0.001, 0.0))).xyz - texture (sampler_main, (uv + vec2(0.001, 0.0))).xyz).x;\n  tmpvar_2.y = (texture (sampler_main, (uv - vec2(0.0, 0.001))).xyz - texture (sampler_main, (uv + vec2(0.0, 0.001))).xyz).x;\n  uv1_1 = ((0.3 * cos(\n    (((uv - 0.5) * aspect.xy) * 9.0)\n  )) - tmpvar_2);\n  vec4 tmpvar_3;\n  tmpvar_3.w = 1.0;\n  tmpvar_3.xyz = (((\n    (-0.5 * (texture (sampler_main, uv).xyz + ((texture (sampler_blur1, uv).xyz * scale1) + bias1)))\n   + \n    clamp (((0.04 * bass_att) / sqrt(dot (uv1_1, uv1_1))), 0.0, 1.0)\n  ) + 0.2) * 2.0);\n  ret = tmpvar_3.xyz;\n}\n\n"}